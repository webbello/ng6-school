var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/AlertService.html",[0,0.813,1,3.204]],["body/injectables/AlertService.html",[0,1.267,1,4.994,2,1.98,3,0.155,4,0.138,5,0.121,6,4.327,7,0.173,8,0.988,9,1.502,10,8.203,11,7.78,12,0.689,13,3.273,14,7.362,15,6.092,16,0.47,17,2.429,18,2.777,19,0.635,20,6.34,21,0.759,22,0.013,23,0.345,24,0.434,25,0.631,26,6.34,27,1.352,28,4.963,29,1.928,30,1.864,31,2.62,32,3.154,33,0.631,34,1.141,35,4.963,36,2.244,37,6.34,38,4.963,39,1.451,40,4.963,41,0.268,42,0.283,43,6.34,44,1.65,45,1.54,46,0.155,47,0.055,48,0.745,49,4.275,50,5.528,51,2.429,52,4.594,53,4.963,54,2.805,55,2.666,56,7.362,57,4.327,58,4.963,59,4.963,60,6.987,61,4.01,62,0.958,63,4.963,64,0.008,65,0.01,66,0.008]],["title/components/AppComponent.html",[67,0.127,68,0.87]],["body/components/AppComponent.html",[3,0.14,4,0.125,5,0.109,7,0.156,8,0.926,12,0.646,16,0.426,19,0.543,21,0.488,22,0.013,23,0.329,24,0.339,25,0.406,33,0.406,34,0.809,41,0.228,42,0.256,46,0.14,47,0.05,48,0.674,64,0.007,65,0.009,66,0.007,67,0.208,68,1.516,69,1.271,70,1.1,71,1.137,72,1.1,73,1.1,74,3.917,75,0.996,76,1.377,77,1.063,78,1.592,79,1.481,80,2.37,81,1.108,82,6.659,83,1.108,84,5.942,85,4.825,86,1.465,87,3.029,88,2.518,89,5.942,90,4.492,91,1.725,92,2.679,93,4.492,94,2.198,95,3.538,96,2.679,97,1.063,98,1.547,99,2.841,100,1.393,101,1.063,102,1.063,103,0.929,104,1.455,105,1.455,106,1.1,107,1.465,108,1.1,109,1.1,110,0.929,111,1.1,112,0.961,113,1.242,114,1.63,115,0.961,116,1.735,117,0.961,118,1.63,119,0.929,120,1.1,121,0.929,122,1.028,123,1.1,124,0.961,125,1.063,126,1.455,127,0.929,128,1.1,129,0.929,130,1.36,131,1.1,132,0.961,133,1.1,134,0.898,135,1.474,136,1.1,137,0.929,138,1.147,139,0.929,140,1.1,141,0.898,142,1.028,143,1.1,144,0.898,145,1.1,146,0.929,147,1.199,148,0.929,149,0.929,150,0.929,151,1.1,152,0.929,153,1.146,154,0.929,155,0.929,156,0.898,157,1.455,158,0.929,159,1.1,160,0.898,161,1.1,162,0.961,163,1.1,164,0.929,165,1.1,166,0.961,167,1.577,168,0.961,169,1.1,170,0.961,171,0.929,172,0.467,173,1.028,174,1.1,175,1.1]],["title/modules/AppModule.html",[176,2.299,177,2.948]],["body/modules/AppModule.html",[3,0.098,4,0.087,5,0.076,22,0.013,41,0.323,42,0.179,46,0.098,47,0.035,64,0.005,65,0.007,66,0.005,68,1.633,69,0.672,79,0.546,103,0.649,110,1.397,112,1.445,113,0.585,115,1.445,117,1.445,119,1.397,121,1.397,122,0.719,124,1.445,125,0.743,127,1.397,129,1.397,130,0.719,132,1.445,134,1.35,137,1.397,138,0.606,139,1.482,141,1.35,144,1.35,146,1.397,147,0.565,148,1.397,149,1.397,150,1.397,152,1.397,153,0.508,154,1.397,155,1.397,156,1.35,158,1.397,160,1.35,162,1.445,164,1.397,166,1.445,167,0.743,168,1.445,170,1.445,171,1.397,176,1.774,177,6.221,178,2.759,179,1.985,180,3.702,181,3.702,182,3.702,183,2.117,184,2.737,185,2.737,186,2.737,187,2.737,188,2.737,189,4.555,190,4.555,191,4.555,192,3.46,193,4.555,194,4.555,195,3.351,196,2.275,197,1.774,198,3.139,199,4.625,200,3.351,201,4.032,202,3.351,203,2.117,204,3.351,205,3.139,206,1.985,207,4.032,208,4.032,209,1.41,210,2.737,211,4.324,212,1.301,213,4.625,214,3.139,215,4.625,216,2.473,217,3.139,218,3.139,219,3.139,220,2.737,221,2.737,222,3.139,223,4.032,224,2.275,225,2.737,226,2.473,227,3.139,228,3.139,229,4.625,230,3.139,231,3.139,232,3.139,233,4.032,234,3.139,235,3.139,236,5.49,237,2.473,238,4.787,239,2.473,240,5.281,241,2.473,242,4.787,243,2.473,244,2.737,245,2.737,246,5.281,247,2.117,248,1.985,249,2.275,250,2.275,251,2.737,252,4.787,253,2.275,254,2.275,255,2.275,256,2.737,257,3.139,258,4.032,259,1.985,260,2.737,261,2.275,262,3.139,263,3.139,264,2.737,265,1.873,266,2.737,267,2.737,268,2.737,269,2.275,270,2.737,271,2.737,272,2.275,273,2.737,274,4.032,275,4.032,276,4.032,277,1.845]],["title/modules/AppRoutingModule.html",[176,2.299,190,2.743]],["body/modules/AppRoutingModule.html",[3,0.115,4,0.103,5,0.09,22,0.013,41,0.321,42,0.211,44,1.228,46,0.115,47,0.041,64,0.006,65,0.008,66,0.006,67,0.255,69,0.79,88,2.373,91,1.418,94,1.807,103,0.764,119,0.764,121,1.075,122,1.19,127,1.075,129,1.075,134,1.039,135,1.445,137,1.075,138,1.26,141,1.039,142,1.19,144,1.039,146,1.075,147,1.175,148,1.075,149,1.075,150,1.075,152,1.075,153,1.186,154,1.075,155,1.075,156,1.039,160,1.039,164,1.075,171,1.075,172,0.384,173,1.19,176,2.087,178,2.203,179,2.335,180,2.49,181,2.49,182,4.056,183,3.505,190,4.813,195,3.766,196,2.675,197,2.087,200,2.675,201,4.532,202,2.675,203,2.49,204,3.766,207,4.532,208,3.219,209,1.658,210,4.532,212,1.531,220,3.219,221,3.219,223,3.219,224,2.675,225,3.219,233,3.219,238,4.532,240,5.245,242,4.532,245,3.219,246,5.693,247,2.49,248,2.335,249,2.675,250,2.675,251,3.219,252,5.245,253,2.675,254,2.675,255,2.675,256,3.219,258,4.532,259,2.335,260,3.219,261,2.675,264,3.219,265,2.203,266,3.219,267,3.219,268,3.219,269,2.675,270,3.219,271,3.219,272,2.675,273,3.219,278,3.219,279,3.219,280,3.692,281,3.692,282,4.731,283,5.198,284,2.675,285,5.172,286,3.692,287,5.651,288,3.692,289,3.692,290,2.908,291,1.107,292,8.183,293,3.692,294,3.692,295,1.531,296,6.331,297,2.035,298,3.889,299,2.908,300,3.219,301,2.908,302,6.726,303,5.201,304,5.198,305,5.198,306,3.101,307,3.219,308,2.662,309,2.49,310,3.692,311,2.087,312,1.984,313,2.675,314,3.692]],["title/guards/AuthGuard.html",[284,2.948,285,2.948]],["body/guards/AuthGuard.html",[0,1.333,3,0.168,4,0.15,5,0.131,7,0.187,9,1.039,12,0.725,16,0.51,17,2.634,18,2.835,19,0.544,21,0.725,22,0.013,23,0.33,24,0.381,25,0.603,27,0.935,32,2.147,33,0.486,36,2.329,41,0.291,42,0.307,44,1.79,45,1.67,46,0.168,47,0.06,48,0.808,62,1.4,64,0.008,65,0.01,66,0.008,75,0.902,80,2.147,88,2.677,91,2.068,92,3.211,94,2.634,97,1.275,101,1.275,102,1.275,277,2.147,285,4.835,296,6.138,315,4.24,316,4.694,317,5.383,318,4.694,319,6.61,320,5.712,321,6.61,322,5.383,323,3.981,324,5.818,325,2.382,326,2.321,327,3.257,328,6.673,329,5.383,330,4.694,331,5.383,332,4.24,333,4.694,334,4.694,335,3.211,336,5.383,337,4.694]],["title/injectables/AuthService.html",[0,0.813,88,1.353]],["body/injectables/AuthService.html",[0,0.814,2,1.059,3,0.083,4,0.074,5,0.065,7,0.092,8,0.635,9,1.377,12,0.443,13,2.608,16,0.252,18,2.356,19,0.66,21,0.834,22,0.013,23,0.379,24,0.414,25,0.693,27,0.862,29,1.067,30,1.032,31,0.914,32,1.979,33,0.723,34,0.478,36,2.639,39,0.608,41,0.261,42,0.152,44,0.883,45,0.823,46,0.083,47,0.029,48,0.399,55,1.426,62,1.561,64,0.004,65,0.006,66,0.004,80,1.059,88,1.355,94,1.299,100,1.264,107,0.549,130,0.608,172,0.783,212,1.1,291,2.4,297,1.908,303,3.345,308,2.087,325,1.771,326,1.145,327,3.445,335,1.583,338,2.09,339,3.352,340,3.21,341,2.303,342,2.953,343,5.566,344,3.554,345,3.753,346,5.566,347,5.566,348,5.566,349,4.076,350,3.554,351,4.076,352,3.554,353,2.303,354,3.554,355,5.566,356,5.566,357,5.566,358,3.753,359,3.554,360,4.076,361,3.21,362,4.076,363,3.554,364,1.359,365,2.851,366,4.076,367,1.909,368,3.21,369,2.093,370,3.85,371,1.175,372,2.654,373,2.748,374,2.303,375,2.939,376,2.654,377,3.554,378,2.654,379,2.654,380,3.21,381,2.654,382,1.831,383,2.654,384,2.654,385,2.654,386,2.654,387,4.076,388,2.654,389,4.076,390,2.654,391,4.076,392,2.654,393,4.076,394,2.654,395,2.303,396,2.991,397,2.654,398,4.076,399,2.654,400,2.654,401,2.654,402,2.654,403,2.654,404,3.554,405,2.654,406,4.076,407,2.654,408,4.076,409,2.654,410,4.076,411,2.654,412,2.303,413,1.509,414,4.076,415,2.654,416,2.654,417,1.359,418,1.359,419,1.426,420,1.5,421,1.243,422,1.1,423,2.748,424,1.583,425,1.243,426,1.359,427,3.076,428,1.426,429,1.426,430,1.426,431,1.243,432,1.923,433,4.299,434,1.678,435,2.303,436,1.5,437,1.994,438,1.909,439,1.5,440,2.303,441,1.5,442,1.5,443,1.5,444,1.5,445,2.087,446,2.19,447,1.5,448,2.087,449,2.608,450,1.5,451,1.5,452,1.5,453,1.426,454,1.5,455,1.5,456,1.5,457,1.5,458,1.426,459,1.5,460,1.019,461,1.5,462,1.5,463,1.5,464,1.5,465,3.21,466,2.314,467,3.554,468,2.09,469,2.813,470,4.335,471,4.076,472,4.076,473,3.73,474,4.391,475,4.063,476,2.654,477,2.541,478,3.345,479,4.853,480,2.314,481,2.314,482,2.314,483,4.076,484,2.654,485,2.654,486,2.654,487,2.654,488,2.314,489,2.654,490,2.654,491,4.961,492,2.654,493,2.654,494,2.654,495,1.79,496,2.654,497,2.654,498,2.09,499,2.314,500,3.554,501,1.923,502,5.527,503,2.314,504,4.076,505,4.076,506,2.654,507,2.654,508,2.654,509,2.654,510,1.678,511,2.654]],["title/injectables/AuthenticationService.html",[0,0.813,512,2.948]],["body/injectables/AuthenticationService.html",[0,1.21,2,1.843,3,0.144,4,0.128,5,0.113,7,0.161,8,0.943,9,1.383,12,0.658,16,0.438,18,2.776,19,0.634,21,0.658,22,0.013,23,0.299,24,0.425,25,0.547,27,1.326,29,1.21,30,1.17,32,2.415,33,0.547,34,0.832,36,2.168,39,1.058,41,0.303,42,0.264,44,1.536,45,1.433,46,0.144,47,0.051,48,0.694,57,4.028,62,1.303,64,0.007,65,0.009,66,0.007,80,1.843,94,3.506,172,0.794,212,1.915,291,2.148,303,4.552,311,2.611,325,2.161,326,1.992,332,3.639,334,4.028,335,2.756,339,3.403,358,4.831,364,2.366,365,3.67,367,2.836,375,2.261,418,2.366,421,2.164,422,1.915,423,4.082,425,2.164,426,2.366,431,2.164,432,3.348,433,3.421,434,2.922,465,3.639,468,3.639,480,4.028,481,4.028,482,4.028,488,4.028,512,4.386,513,3.639,514,5.887,515,6.752,516,4.386,517,6.752,518,6.053,519,6.053,520,4.831,521,4.62,522,3.828,523,4.62,524,4.62,525,6.752,526,4.62,527,4.62,528,4.62,529,4.62,530,4.62,531,4.62,532,4.62,533,4.62,534,4.62,535,4.62,536,4.62,537,4.62,538,4.768,539,4.082,540,6.053,541,4.62,542,4.62,543,3.639,544,3.639,545,4.62,546,4.62,547,4.62,548,4.62,549,4.62,550,4.62,551,4.62,552,4.62,553,4.62]],["title/components/BookComponent.html",[67,0.127,110,0.841]],["body/components/BookComponent.html",[3,0.124,4,0.11,5,0.097,7,0.138,8,0.852,12,0.594,16,0.376,19,0.576,21,0.431,22,0.013,23,0.309,24,0.357,25,0.358,29,1.431,30,1.384,33,0.358,34,0.714,36,1.274,39,1.251,41,0.259,42,0.227,45,1.231,46,0.171,47,0.061,48,0.821,62,0.766,64,0.006,65,0.008,66,0.006,67,0.195,68,0.849,69,1.169,70,0.972,71,1.005,72,0.972,73,0.972,75,0.916,76,1.293,77,0.939,78,1.58,79,1.469,81,1.019,83,1.019,86,1.393,97,0.939,98,1.367,100,1.231,101,0.939,102,0.939,103,0.821,104,1.338,105,1.338,106,0.972,107,1.393,108,0.972,109,0.972,110,1.393,111,0.972,112,0.849,113,1.317,114,1.531,115,0.849,116,1.649,117,0.849,118,1.531,119,0.821,120,0.972,121,0.821,122,0.908,123,0.972,124,0.849,125,0.939,126,1.338,127,0.821,128,0.972,129,0.821,130,1.251,131,0.972,132,0.849,133,0.972,134,0.793,135,1.384,136,0.972,137,0.821,138,1.055,139,0.821,140,0.972,141,0.793,142,0.908,143,0.972,144,0.793,145,0.972,146,0.821,147,1.125,148,0.821,149,0.821,150,0.821,151,0.972,152,0.821,153,1.089,154,0.821,155,0.821,156,0.793,157,1.338,158,0.821,159,0.972,160,0.793,161,0.972,162,0.849,163,0.972,164,0.821,165,0.972,166,0.849,167,1.48,168,0.849,169,0.972,170,0.849,171,0.821,172,0.413,173,0.908,174,0.972,175,0.972,192,3.618,206,2.509,295,1.645,298,3.807,554,3.125,555,5.451,556,4.765,557,5.451,558,3.457,559,3.059,560,2.509,561,5.465,562,1.751,563,3.968,564,3.968,565,4.765,566,4.214,567,4.542,568,3.968,569,2.875,570,4.765,571,3.46,572,2.875,573,2.875,574,2.875,575,2.676,576,2.676,577,3.089,578,5.465,579,5.465,580,5.465,581,2.265,582,2.132,583,2.032,584,3.729,585,2.875,586,2.676,587,1.469,588,2.132,589,1.645,590,1.583,591,2.079,592,1.755,593,2.509,594,2.367,595,3.125,596,1.811,597,2.243,598,3.26,599,2.509,600,3.125,601,3.125,602,1.645,603,1.711,604,1.319,605,1.469]],["title/components/BookCreateComponent.html",[67,0.127,112,0.87]],["body/components/BookCreateComponent.html",[3,0.108,4,0.096,5,0.084,7,0.12,8,0.773,9,0.957,12,0.539,16,0.328,17,1.691,18,2.493,19,0.62,21,0.539,22,0.013,23,0.313,24,0.428,25,0.448,27,1.214,29,1.829,30,1.768,33,0.448,34,0.893,41,0.243,42,0.197,44,1.149,46,0.108,47,0.038,48,0.519,64,0.005,65,0.008,66,0.005,67,0.181,68,0.739,69,1.061,70,0.846,71,0.875,72,0.846,73,0.846,75,0.831,76,1.199,77,0.818,78,1.565,79,1.455,81,0.925,83,0.925,86,1.31,97,0.818,101,0.818,102,0.818,103,0.715,104,1.214,105,1.214,106,0.846,107,1.31,108,0.846,109,0.846,110,0.715,111,0.846,112,1.356,113,1.493,114,1.42,115,0.739,116,1.552,117,0.739,118,1.42,119,0.715,120,0.846,121,0.715,122,0.791,123,0.846,124,0.739,125,0.818,126,1.214,127,0.715,128,0.846,129,0.715,130,1.135,131,0.846,132,0.739,133,0.846,134,0.691,135,1.284,136,0.846,137,0.715,138,0.957,139,0.715,140,0.846,141,0.691,142,0.791,143,0.846,144,0.691,145,0.846,146,0.715,147,1.044,148,0.715,149,0.715,150,0.715,151,0.846,152,0.715,153,1.025,154,0.715,155,0.715,156,0.691,157,1.214,158,0.715,159,0.846,160,0.691,161,0.846,162,0.739,163,0.846,164,0.715,165,0.846,166,0.739,167,1.373,168,0.739,169,0.846,170,0.739,171,0.715,172,0.359,173,0.791,174,0.846,175,0.846,192,3.246,206,2.185,209,1.552,237,6.063,295,2.056,298,3.792,306,2.958,311,1.953,371,1.174,460,2.988,477,1.77,562,1.624,566,4.003,567,4.524,581,2.404,587,1.279,589,1.432,590,1.378,591,2.231,592,1.592,596,1.001,602,1.432,603,1.49,604,1.649,605,1.836,606,5.578,607,2.504,608,4.568,609,3.905,610,5.057,611,3.437,612,5.057,613,5.284,614,2.802,615,4.065,616,4.959,617,3.455,618,1.953,619,3.278,620,3.455,621,2.427,622,3.455,623,3.278,624,3.455,625,3.013,626,2.722,627,3.455,628,2.722,629,1.77,630,1.953,631,1.953,632,3.013,633,3.013,634,2.722,635,3.013,636,3.013,637,3.013,638,3.013,639,1.953,640,3.012,641,3.947,642,1.953,643,3.455,644,2.33,645,3.013,646,1.905,647,4.396,648,4.324,649,3.593,650,2.664,651,1.953,652,2.185,653,2.185,654,1.619]],["title/classes/BookDataSource.html",[47,0.045,572,2.948]],["body/classes/BookDataSource.html",[3,0.171,4,0.152,5,0.133,7,0.191,12,0.733,16,0.519,19,0.596,21,0.595,22,0.013,23,0.271,24,0.313,25,0.494,33,0.609,34,0.986,36,1.758,39,1.253,41,0.293,42,0.313,45,1.698,46,0.211,47,0.075,48,1.012,62,1.057,64,0.008,65,0.01,66,0.008,67,0.211,75,0.918,76,1.394,78,1.021,79,0.951,81,1.021,83,1.021,86,1.132,97,1.296,98,1.886,100,1.698,101,1.296,102,1.296,110,1.132,113,1.021,192,4.011,206,3.462,298,3.094,554,4.311,555,4.773,556,4.773,557,4.773,558,3.732,559,2.679,560,3.462,562,2.047,565,4.773,566,3.265,567,3.691,569,3.967,570,5.879,571,4.773,572,4.886,573,4.886,574,3.967,575,5.142,576,5.142,655,3.094,656,5.474,657,5.474,658,5.474]],["title/components/BookDetailComponent.html",[67,0.127,115,0.87]],["body/components/BookDetailComponent.html",[3,0.122,4,0.108,5,0.095,7,0.136,8,0.842,9,1.043,12,0.587,16,0.37,18,2.658,19,0.573,21,0.673,22,0.013,23,0.347,24,0.308,25,0.559,29,1.021,30,0.988,33,0.559,34,1.115,41,0.238,42,0.223,44,1.297,46,0.122,47,0.043,48,0.586,51,2.643,64,0.006,65,0.008,66,0.006,67,0.194,68,0.834,69,1.155,70,0.955,71,0.988,72,0.955,73,0.955,75,0.905,76,1.281,77,0.923,78,1.578,79,1.468,81,1.007,83,1.007,86,1.383,97,0.923,101,0.923,102,0.923,103,0.807,104,1.322,105,1.322,106,0.955,107,1.383,108,0.955,109,0.955,110,0.807,111,0.955,112,0.834,113,1.493,114,1.517,115,1.431,116,1.637,117,0.834,118,1.517,119,0.807,120,0.955,121,0.807,122,0.893,123,0.955,124,0.834,125,0.923,126,1.322,127,0.807,128,0.955,129,0.807,130,1.236,131,0.955,132,0.834,133,0.955,134,0.779,135,1.371,136,0.955,137,0.807,138,1.043,139,0.807,140,0.955,141,0.779,142,0.893,143,0.955,144,0.779,145,0.955,146,0.807,147,1.115,148,0.807,149,0.807,150,0.807,151,0.955,152,0.807,153,1.081,154,0.807,155,0.807,156,0.779,157,1.322,158,0.807,159,0.955,160,0.779,161,0.955,162,0.834,163,0.955,164,0.807,165,0.955,166,0.834,167,1.467,168,0.834,169,0.955,170,0.834,171,0.807,172,0.406,173,0.893,174,0.955,175,0.955,192,3.425,206,2.466,239,5.72,297,0.988,371,1.279,464,2.204,562,1.735,566,3.221,567,3.641,581,1.617,587,1.444,589,1.617,591,1.297,596,1.13,602,1.617,603,1.682,604,1.297,605,1.444,606,5.262,613,4.253,646,2.074,649,3.913,659,2.327,660,3.913,661,4.488,662,3.913,663,4.709,664,5.4,665,3.072,666,3.779,667,4.709,668,4.709,669,3.401,670,5.4,671,3.072,672,3.072,673,3.9,674,3.9,675,2.826,676,3.9,677,3.9,678,3.401,679,5.4,680,5.4,681,5.4,682,5.4,683,5.4,684,4.709,685,5.4,686,4.709,687,3.272,688,5.4,689,3.221,690,3.221,691,2.095]],["title/components/BookEditComponent.html",[67,0.127,117,0.87]],["body/components/BookEditComponent.html",[3,0.1,4,0.089,5,0.078,7,0.111,8,0.729,9,1.07,12,0.508,16,0.302,17,1.56,18,2.425,19,0.631,21,0.602,22,0.013,23,0.321,24,0.426,25,0.5,27,1.22,29,1.838,30,1.777,33,0.551,34,1.099,41,0.234,42,0.182,44,1.06,46,0.1,47,0.035,48,0.479,51,2.711,64,0.005,65,0.007,66,0.005,67,0.173,68,0.682,69,1.001,70,0.781,71,0.807,72,0.781,73,0.781,75,0.784,76,1.146,77,0.755,78,1.556,79,1.446,81,0.872,83,0.872,86,1.262,97,0.755,101,0.755,102,0.755,103,0.659,104,1.145,105,1.145,106,0.781,107,1.262,108,0.781,109,0.781,110,0.659,111,0.781,112,0.682,113,1.475,114,1.356,115,0.682,116,1.494,117,1.306,118,1.356,119,0.659,120,0.781,121,0.659,122,0.73,123,0.781,124,0.682,125,0.755,126,1.145,127,0.659,128,0.781,129,0.659,130,1.071,131,0.781,132,0.682,133,0.781,134,0.637,135,1.226,136,0.781,137,0.659,138,0.903,139,0.659,140,0.781,141,0.637,142,0.73,143,0.781,144,0.637,145,0.781,146,0.659,147,0.997,148,0.659,149,0.659,150,0.659,151,0.781,152,0.659,153,0.987,154,0.659,155,0.659,156,0.637,157,1.145,158,0.659,159,0.781,160,0.637,161,0.781,162,0.682,163,0.781,164,0.659,165,0.781,166,0.682,167,1.312,168,0.682,169,0.781,170,0.682,171,0.659,172,0.332,173,0.73,174,0.781,175,0.781,192,3.126,206,2.016,209,1.432,241,6.143,295,1.939,298,3.839,311,2.644,371,1.539,460,2.941,477,1.633,562,1.552,566,4.052,567,4.58,581,2.297,587,1.18,589,1.322,590,1.272,591,2.161,592,1.502,596,0.924,602,1.322,603,1.375,604,1.555,605,1.732,606,5.651,610,4.83,611,3.479,612,5.321,613,5.349,614,2.644,615,3.967,618,1.802,619,3.131,621,2.711,623,3.131,629,1.633,630,1.802,631,1.802,632,2.78,633,2.78,634,2.511,635,2.78,636,2.78,637,2.78,638,2.78,639,1.802,640,2.929,641,3.839,642,1.802,644,2.15,645,4.079,647,4.328,648,4.079,649,3.389,650,2.513,651,1.802,652,2.016,653,2.016,654,1.494,666,3.449,689,2.79,692,2.31,693,4.363,694,3.684,695,6.102,696,4.079,697,3.684,698,3.189,699,4.079,700,3.189,701,3.189,702,3.189,703,2.511,704,2.78,705,2.511,706,2.511,707,2.511,708,2.511,709,2.511,710,2.511,711,3.189,712,3.189,713,2.958,714,2.016,715,3.189,716,3.189,717,3.189,718,2.511,719,3.189,720,3.189,721,3.189,722,3.189,723,4.079]],["title/injectables/BookService.html",[0,0.813,192,2.084]],["body/injectables/BookService.html",[0,1.144,2,1.695,3,0.133,4,0.118,5,0.104,7,0.148,9,1.439,12,0.623,13,3.247,16,0.403,19,0.632,21,0.828,22,0.013,23,0.377,24,0.435,25,0.688,27,1.364,31,1.464,33,0.688,36,2.588,39,0.973,41,0.278,42,0.243,45,1.319,46,0.133,47,0.047,48,0.638,55,2.284,62,1.495,64,0.007,65,0.009,66,0.007,80,1.695,100,1.777,113,0.793,172,0.442,192,2.933,212,1.762,291,2.283,297,1.887,326,1.833,327,2.909,341,3.237,353,3.237,364,2.177,365,3.55,367,2.683,371,1.534,374,3.237,375,3.541,395,3.237,396,3.724,417,2.177,418,2.177,419,2.284,420,2.402,421,1.991,422,1.762,425,1.991,426,2.177,427,3.55,428,2.284,429,2.284,430,2.284,431,3.034,435,3.237,436,2.402,437,2.08,438,1.991,439,2.402,440,3.237,441,2.402,442,2.402,443,2.402,444,2.402,445,2.933,446,3.077,447,2.402,448,2.933,449,3.247,450,2.402,451,2.402,452,2.402,453,2.284,454,2.402,455,2.402,456,2.402,457,2.402,458,2.284,459,2.402,460,1.633,461,2.402,462,2.402,463,2.402,469,3.034,470,4.089,473,2.402,474,3.416,475,3.416,495,2.866,510,2.688,663,4.994,668,4.994,696,4.994,699,4.994,724,3.348,725,6.931,726,5.727,727,5.727,728,4.251,729,4.251,730,4.251,731,4.251,732,4.251,733,4.251,734,5.727,735,4.251,736,5.727,737,4.251,738,2.536,739,3.706,740,4.367,741,3.08,742,3.08]],["title/components/ChatComponent.html",[67,0.127,119,0.841]],["body/components/ChatComponent.html",[3,0.055,4,0.049,5,0.043,7,0.195,8,0.458,9,1.08,12,0.319,16,0.167,19,0.597,21,0.608,22,0.013,23,0.31,24,0.384,25,0.505,27,0.972,29,0.769,30,0.743,31,2.315,33,0.55,34,1.16,39,0.404,41,0.215,42,0.101,46,0.055,47,0.02,48,0.265,49,3.295,54,0.996,61,2.386,62,0.567,64,0.003,65,0.005,66,0.003,67,0.118,68,0.377,69,0.628,70,0.432,71,0.446,72,0.432,73,0.432,75,0.492,76,0.78,77,1.486,78,1.465,79,1.356,81,0.547,83,0.547,85,2.734,86,0.91,88,1.861,91,0.677,96,1.052,97,1.042,98,1.011,99,1.115,100,1.17,101,1.042,102,1.042,103,0.365,104,0.719,105,0.719,106,0.432,107,1.011,108,0.432,109,0.432,110,0.365,111,0.432,112,0.377,113,0.703,114,0.924,115,0.377,116,1.077,117,0.377,118,0.924,119,0.91,120,0.432,121,0.365,122,1.208,123,0.432,124,0.377,125,0.417,126,0.719,127,0.365,128,0.432,129,0.365,130,0.672,131,0.432,132,0.377,133,0.432,134,0.352,135,0.835,136,0.432,137,0.365,138,0.567,139,0.365,140,0.432,141,0.352,142,0.404,143,0.432,144,0.352,145,0.432,146,0.365,147,0.679,148,0.365,149,0.365,150,0.365,151,0.432,152,0.365,153,0.711,154,0.365,155,0.365,156,0.352,157,0.719,158,0.365,159,0.432,160,0.352,161,0.432,162,0.377,163,0.432,164,0.365,165,0.432,166,0.377,167,0.893,168,0.377,169,0.432,170,0.377,171,0.365,172,0.582,173,0.404,174,0.432,175,0.432,197,0.996,290,2.971,291,0.88,295,1.217,306,1.052,339,2.732,340,2.312,342,2.127,368,2.312,369,1.587,370,3.439,371,1.249,373,2.544,377,2.56,413,1.629,424,1.052,438,0.826,498,2.971,522,1.115,582,2.835,583,2.703,584,2.625,587,1.087,588,3.727,589,0.731,590,0.703,591,2.471,592,2.194,593,3.091,596,2.327,597,0.996,598,1.052,599,1.857,604,2.024,605,2.44,640,1.266,646,2.412,654,2.851,687,0.863,689,2.625,690,1.751,691,0.947,743,1.388,744,3.773,745,2.936,746,3.861,747,2.544,748,3.773,749,3.465,750,6.278,751,4.601,752,6.278,753,4.4,754,3.465,755,4.601,756,2.936,757,2.936,758,2.936,759,1.763,760,3.337,761,2.936,762,1.763,763,1.763,764,1.763,765,1.763,766,1.763,767,2.936,768,1.763,769,2.936,770,1.763,771,2.936,772,1.763,773,2.936,774,1.763,775,1.763,776,1.763,777,1.763,778,1.763,779,1.763,780,1.763,781,1.763,782,1.763,783,1.763,784,1.763,785,1.388,786,1.388,787,1.537,788,1.388,789,1.388,790,1.537,791,2.312,792,1.763,793,2.386,794,1.189,795,1.189,796,1.189,797,4.156,798,1.763,799,1.537,800,1.537,801,2.56,802,1.537,803,1.763,804,2.56,805,1.388,806,1.388,807,1.763,808,1.763,809,1.763,810,1.763,811,2.936,812,2.936,813,2.936,814,2.936,815,1.763,816,1.537,817,2.56,818,1.537,819,1.537,820,1.537,821,1.763,822,2.312,823,2.312,824,2.312,825,1.537,826,1.763,827,1.537,828,2.56,829,1.763,830,3.002,831,3.773,832,1.537,833,2.936,834,2.936,835,1.115,836,1.763,837,1.763,838,1.763,839,1.763,840,1.763,841,1.763,842,1.763,843,1.763,844,2.734,845,1.763,846,1.763,847,1.537,848,1.537,849,1.277,850,1.763,851,1.763,852,1.537,853,1.763,854,1.763,855,1.763,856,2.936,857,2.936,858,2.56,859,2.936,860,2.936,861,2.936,862,2.936,863,2.936,864,4.4,865,2.56,866,2.56,867,3.465,868,2.312,869,2.312,870,1.388,871,2.127,872,5.715,873,2.312,874,2.127,875,2.312,876,2.936,877,2.56,878,2.312,879,1.388,880,3.932,881,1.388,882,1.388,883,3.745,884,4.739,885,1.277,886,1.388,887,1.388,888,1.277,889,1.388,890,2.312,891,3.091,892,2.544,893,3.091,894,2.312,895,1.659,896,1.388,897,2.312,898,2.971,899,1.763,900,3.465,901,2.971,902,3.798,903,3.824,904,3.002,905,2.312,906,2.312,907,2.312,908,2.734,909,2.544,910,2.544,911,2.312,912,2.312,913,4.156,914,4.156,915,1.388,916,0.903,917,2.971,918,1.388,919,2.312,920,1.277,921,3.465,922,3.465,923,1.277,924,1.857,925,2.746,926,1.388,927,2.312,928,3.548,929,1.388,930,2.127,931,3.465,932,2.312,933,1.388,934,1.388,935,1.388,936,1.277,937,1.388,938,1.659,939,1.319,940,1.115,941,2.971,942,3.824,943,1.537,944,2.312,945,1.277,946,1.388,947,1.388,948,5.093,949,1.277,950,3.188,951,2.971,952,2.544,953,2.967,954,1.388,955,2.312,956,1.115,957,2.971,958,1.388,959,1.388,960,3.824,961,3.338,962,2.971,963,2.915,964,1.277,965,1.388,966,1.388,967,1.388,968,2.312,969,3.849,970,4.156,971,3.465,972,3.188,973,4.247,974,4.616,975,2.312,976,2.312,977,2.312,978,2.312,979,2.312,980,2.312,981,2.312,982,1.388,983,2.971,984,2.734,985,3.465,986,3.824,987,1.537,988,2.56,989,4.601,990,1.537,991,4.156,992,1.537,993,1.537,994,1.052,995,1.537,996,1.388,997,4.616,998,1.388,999,2.312,1000,1.388,1001,1.388,1002,2.312,1003,2.312,1004,2.312,1005,2.312,1006,1.388,1007,1.388,1008,1.388,1009,1.388,1010,1.388,1011,1.277,1012,1.277,1013,1.277,1014,1.277,1015,1.277,1016,0.863,1017,1.277,1018,1.277,1019,1.388]],["title/components/ChatHistoryComponent.html",[67,0.127,121,0.841]],["body/components/ChatHistoryComponent.html",[3,0.068,4,0.06,5,0.053,7,0.173,8,0.542,9,0.419,12,0.378,16,0.206,19,0.571,21,0.236,22,0.013,23,0.246,24,0.363,25,0.196,29,1.305,30,1.261,31,0.747,33,0.393,34,0.784,41,0.209,42,0.124,46,0.068,47,0.024,48,0.326,49,2.345,61,2.754,64,0.003,65,0.005,66,0.003,67,0.136,68,0.464,69,0.744,70,0.531,71,0.549,72,0.531,73,0.531,75,0.583,76,0.9,77,1.593,78,1.502,79,1.392,81,0.649,83,0.649,85,3.155,86,1.03,87,1.462,88,1.935,91,0.833,96,1.294,97,1.18,98,0.747,99,2.2,100,1.351,101,1.18,102,1.18,103,0.449,104,0.852,105,0.852,106,0.531,107,1.03,108,0.531,109,0.531,110,0.449,111,0.531,112,0.464,113,0.812,114,1.066,115,0.464,116,1.22,117,0.464,118,1.066,119,0.449,120,0.531,121,1.03,122,1.573,123,0.531,124,0.464,125,0.514,126,0.852,127,0.449,128,0.531,129,0.449,130,0.796,131,0.531,132,0.464,133,0.531,134,0.433,135,0.964,136,0.531,137,0.449,138,0.671,139,0.449,140,0.531,141,0.433,142,0.497,143,0.531,144,0.433,145,0.531,146,0.449,147,0.784,148,0.449,149,0.449,150,0.449,151,0.531,152,0.449,153,0.805,154,0.449,155,0.449,156,0.433,157,0.852,158,0.449,159,0.531,160,0.433,161,0.531,162,0.464,163,0.531,164,0.449,165,0.531,166,0.464,167,1.031,168,0.464,169,0.531,170,0.464,171,0.449,172,0.636,173,0.497,174,0.531,175,0.531,197,1.226,272,5.152,295,1.442,306,1.294,313,2.52,342,3.61,369,1.349,382,1.956,413,0.803,424,1.294,438,1.016,582,2.677,583,2.981,584,2.972,587,1.288,588,3.919,589,0.899,590,0.865,591,2.532,592,2.207,593,3.449,596,2.371,597,1.226,598,1.294,599,2.2,604,2.18,605,2.591,646,2.584,654,2.977,691,1.165,746,3.127,749,3.924,785,1.708,793,1.372,794,1.462,795,1.462,796,1.462,797,4.295,822,2.739,823,2.739,824,2.739,830,2.981,844,2.52,867,3.924,868,2.739,869,2.739,870,1.708,871,2.52,872,5.957,873,2.739,874,2.52,875,2.739,878,3.429,879,1.708,880,4.1,881,1.708,882,1.708,883,3.791,884,4.86,885,1.572,886,1.708,887,1.708,888,1.572,889,1.708,890,2.739,891,3.449,892,2.936,893,3.449,894,2.739,895,1.966,896,1.708,897,2.739,898,3.429,900,3.924,901,3.429,902,4.018,903,4.218,904,2.981,905,2.739,906,2.739,907,2.739,908,3.155,909,2.936,910,2.936,911,2.739,912,2.739,913,4.584,914,4.584,915,1.708,916,1.111,917,2.739,918,1.708,919,2.739,920,1.572,921,2.739,922,2.739,923,1.572,924,2.2,925,2.977,926,1.708,927,2.739,928,3.802,929,1.708,930,2.52,931,3.924,932,1.708,933,1.708,934,1.708,935,1.708,936,1.572,937,1.708,938,1.966,939,1.562,940,1.372,941,3.429,942,4.218,944,2.739,945,1.572,946,1.708,947,1.708,948,5.152,949,1.572,950,3.155,951,3.429,952,2.936,953,2.936,954,1.708,955,2.739,956,1.372,957,3.429,958,1.708,959,1.708,960,4.218,961,3.253,962,2.739,963,3.253,964,1.572,965,1.708,966,1.708,967,1.708,968,2.739,969,4.295,970,4.584,971,3.924,972,3.61,973,4.605,974,5.006,975,2.739,976,2.739,977,2.739,978,2.739,979,2.739,980,2.739,981,2.739,982,1.708,983,2.739,984,3.155,985,2.739,986,3.61,996,1.708,997,5.006,998,1.708,999,2.739,1000,1.708,1001,1.708,1002,2.739,1003,2.739,1004,2.739,1005,2.739,1006,1.708,1007,1.708,1008,1.708,1009,1.708,1010,1.708,1011,1.572,1012,1.572,1013,1.572,1014,1.572,1015,1.572,1016,1.061,1017,1.572,1018,1.572,1019,1.708,1020,6.199,1021,1.891,1022,4.354,1023,3.478,1024,2.04,1025,3.797,1026,3.797,1027,4.982,1028,2.183,1029,3.478,1030,2.169,1031,2.169,1032,2.169,1033,2.169,1034,2.169,1035,2.169,1036,2.169,1037,2.169,1038,2.169,1039,2.169,1040,0.935,1041,1.372,1042,1.111,1043,1.111,1044,1.061,1045,2.169,1046,2.169,1047,2.169,1048,3.478,1049,2.169,1050,1.891,1051,1.891,1052,1.372,1053,2.2,1054,2.2,1055,3.478,1056,2.169,1057,2.169,1058,2.169]],["title/injectables/ChatService.html",[0,0.813,760,2.573]],["body/injectables/ChatService.html",[0,1.148,2,1.703,3,0.134,4,0.119,5,0.104,7,0.149,8,0.895,9,1.516,12,0.624,16,0.615,19,0.653,21,0.755,22,0.013,23,0.343,24,0.396,25,0.627,29,1.504,30,1.454,31,2.627,33,0.689,34,1.344,36,2.633,39,1.59,41,0.298,42,0.244,45,1.324,46,0.134,47,0.047,54,4.095,62,1.472,64,0.007,65,0.009,66,0.007,80,1.703,153,0.929,291,1.28,297,1.644,326,1.841,327,2.916,339,3.464,425,2,426,2.187,431,2,437,2.089,738,3.427,760,3.633,786,3.362,787,3.723,877,5.009,1059,3.362,1060,6.492,1061,5.66,1062,5.744,1063,6.943,1064,6.943,1065,6.943,1066,5.009,1067,5.744,1068,5.744,1069,5.744,1070,4.269,1071,4.269,1072,4.269,1073,4.269,1074,5.744,1075,4.269,1076,5.744,1077,4.886,1078,4.269,1079,5.744,1080,4.886,1081,4.269,1082,4.524,1083,5.66,1084,4.269,1085,4.269,1086,4.269,1087,3.723,1088,3.723,1089,3.723,1090,4.269,1091,4.269,1092,4.269,1093,4.269,1094,4.269,1095,4.269,1096,6.943,1097,4.269,1098,6.492,1099,6.492,1100,4.269,1101,4.269,1102,4.269,1103,4.269]],["title/interfaces/DialogData.html",[1104,1.22,1105,2.743]],["body/interfaces/DialogData.html",[3,0.153,4,0.136,5,0.119,7,0.17,8,0.978,9,0.942,16,0.463,22,0.013,23,0.374,24,0.358,27,1.387,34,0.879,41,0.281,42,0.279,46,0.217,47,0.069,48,0.733,64,0.011,65,0.01,66,0.008,67,0.217,75,0.818,76,1.297,78,1.17,79,0.848,81,0.91,83,1.17,86,1.01,97,1.156,98,1.682,101,1.641,102,1.641,134,0.976,135,1.675,138,1.338,139,1.01,259,3.087,297,1.589,339,2.874,369,1.322,370,4.452,562,1.367,1024,2.287,1028,2.475,1040,2.105,1041,3.087,1042,2.5,1043,2.5,1044,2.389,1104,1.463,1105,4.674,1106,2.5,1107,3.292,1108,3.537,1109,3.845,1110,3.742,1111,3.537,1112,2.912,1113,3.537,1114,4.941,1115,4.941,1116,3.845,1117,3.845,1118,3.845,1119,3.845,1120,3.845,1121,3.845,1122,5.46,1123,4.941,1124,3.845,1125,4.941,1126,4.941,1127,3.845,1128,3.845,1129,3.845,1130,3.845,1131,3.087,1132,4.941,1133,3.845,1134,3.967,1135,3.845,1136,3.845,1137,3.845,1138,3.845,1139,3.845,1140,3.845,1141,3.845,1142,3.845,1143,3.845,1144,3.845,1145,3.845,1146,3.845,1147,3.292]],["title/interceptors/ErrorInterceptor.html",[193,2.743,1148,2.948]],["body/interceptors/ErrorInterceptor.html",[0,1.338,3,0.169,4,0.15,5,0.132,7,0.188,9,1.045,12,0.728,13,2.536,16,0.513,18,2.878,19,0.546,21,0.728,22,0.013,23,0.331,24,0.382,25,0.605,33,0.489,36,2.335,41,0.305,42,0.309,44,1.8,45,1.679,46,0.169,47,0.06,48,0.813,62,1.293,64,0.008,65,0.01,66,0.008,75,0.907,87,3.65,88,2.644,91,2.079,92,3.229,95,4.263,193,4.515,212,2.244,291,1.623,323,4.337,335,3.229,358,3.65,375,2.649,396,2.908,417,2.772,419,2.908,422,2.244,446,2.908,562,1.516,594,3.229,1149,4.263,1150,4.72,1151,5.274,1152,5.413,1153,5.274,1154,5.983,1155,5.983,1156,5.413,1157,4.263,1158,4.263,1159,5.274,1160,5.413,1161,6.696,1162,4.515,1163,5.413,1164,5.413,1165,5.413,1166,5.413,1167,5.413]],["title/components/FacultyAddComponent.html",[67,0.127,124,0.87]],["body/components/FacultyAddComponent.html",[3,0.145,4,0.129,5,0.113,7,0.162,12,0.661,16,0.642,19,0.496,22,0.013,23,0.3,33,0.42,34,0.837,41,0.178,42,0.265,46,0.145,47,0.051,64,0.007,65,0.009,66,0.007,67,0.212,68,0.994,69,1.3,70,1.138,71,1.177,72,1.138,73,1.138,75,1.019,76,1.4,77,1.1,78,1.595,79,1.484,81,1.133,83,1.133,86,1.485,103,0.961,104,1.488,105,1.488,106,1.138,107,1.485,108,1.138,109,1.138,110,0.961,111,1.138,112,0.994,113,1.263,114,1.658,115,0.994,116,1.758,117,0.994,118,1.658,119,0.961,120,1.138,121,0.961,122,1.064,123,1.138,124,1.537,125,1.908,126,1.488,127,0.961,128,1.138,129,0.961,130,1.391,131,1.138,132,0.994,133,1.138,134,0.929,135,1.499,136,1.138,137,0.961,138,1.173,139,0.961,140,1.138,141,0.929,142,1.064,143,1.138,144,0.929,145,1.138,146,0.961,147,1.219,148,0.961,149,0.961,150,0.961,151,1.138,152,0.961,153,1.161,154,0.961,155,0.961,156,0.929,157,1.488,158,0.961,159,1.138,160,0.929,161,1.138,162,0.994,163,1.138,164,0.961,165,1.138,166,0.994,167,1.603,168,0.994,169,1.138,170,0.994,171,0.961,172,0.483,173,1.064,174,1.138,175,1.138,577,4.058,1168,5.904,1169,3.661,1170,5.904,1171,5.299,1172,4.053,1173,4.053,1174,4.403]],["title/interceptors/FakeBackendInterceptor.html",[1148,2.948,1175,2.948]],["body/interceptors/FakeBackendInterceptor.html",[0,1.051,3,0.117,4,0.104,5,0.092,7,0.131,12,0.572,13,3.082,16,0.575,19,0.429,21,0.408,22,0.013,23,0.186,24,0.215,25,0.339,31,2.266,33,0.339,36,2.112,39,1.204,41,0.253,42,0.215,45,1.165,46,0.117,47,0.042,62,1.583,64,0.006,65,0.008,66,0.006,75,0.63,94,2.575,172,0.833,211,2.959,212,1.557,308,3.774,311,2.973,323,3.622,371,1.745,412,3.718,413,2.248,417,3.547,422,1.557,438,2.844,449,3.362,458,2.018,520,2.533,522,3.84,538,5.454,539,5.276,543,2.959,544,2.959,562,1.052,596,1.088,640,2.618,650,2.018,690,3.138,895,3.431,945,2.722,1149,2.959,1151,4.144,1153,4.144,1154,5.181,1155,5.181,1157,4.144,1158,2.959,1159,4.144,1162,3.547,1175,3.812,1176,4.782,1177,2.959,1178,3.757,1179,3.757,1180,6.038,1181,3.757,1182,3.757,1183,3.757,1184,3.757,1185,5.294,1186,3.757,1187,3.757,1188,3.757,1189,3.757,1190,5.181,1191,3.276,1192,3.757,1193,3.757,1194,3.757,1195,6.925,1196,4.782,1197,6.072,1198,3.276,1199,3.757,1200,3.757,1201,6.072,1202,6.072,1203,3.757,1204,3.757,1205,3.757,1206,3.757,1207,6.578,1208,6.258,1209,4.587,1210,6.557,1211,3.757,1212,5.261,1213,3.276,1214,3.757,1215,3.276,1216,3.757,1217,6.578,1218,3.276,1219,3.757,1220,3.757,1221,6.072,1222,6.072,1223,5.294,1224,6.072,1225,6.072,1226,6.072,1227,6.072,1228,5.294,1229,5.261,1230,4.587,1231,5.261,1232,5.261,1233,5.261,1234,5.261,1235,5.261,1236,3.757,1237,3.757,1238,3.757,1239,3.276,1240,3.757,1241,3.276,1242,3.757,1243,3.757,1244,3.757,1245,5.261,1246,5.261,1247,3.757,1248,2.959,1249,3.757,1250,3.757,1251,3.757,1252,3.757,1253,3.757,1254,3.757,1255,3.757]],["title/injectables/HelperService.html",[0,0.813,1256,2.948]],["body/injectables/HelperService.html",[0,1.338,2,2.159,3,0.169,4,0.15,5,0.132,7,0.188,12,0.728,19,0.593,21,0.79,22,0.013,23,0.36,25,0.657,32,2.9,33,0.657,41,0.208,42,0.309,46,0.169,47,0.06,62,1.404,64,0.008,65,0.01,66,0.008,197,4.109,277,2.159,325,1.932,413,2.479,596,1.568,640,2.334,825,4.72,1131,3.423,1185,5.838,1256,4.852,1257,4.72,1258,4.639,1259,6.696,1260,6.696,1261,6.696,1262,6.696,1263,5.413,1264,6.696,1265,5.413,1266,6.696,1267,5.413,1268,7.952,1269,7.596,1270,5.413,1271,7.27,1272,6.696,1273,6.696,1274,6.696]],["title/interceptors/JwtInterceptor.html",[194,2.743,1148,2.948]],["body/interceptors/JwtInterceptor.html",[0,1.395,3,0.181,4,0.161,5,0.141,7,0.202,12,0.759,19,0.473,21,0.63,22,0.013,23,0.286,24,0.331,25,0.523,33,0.523,36,2.405,41,0.288,42,0.331,45,1.797,46,0.181,47,0.064,62,1.118,64,0.009,65,0.011,66,0.009,75,0.971,194,4.706,212,2.401,323,4.468,514,6.085,538,4.562,539,3.906,577,3.274,895,3.274,1149,4.562,1151,5.497,1153,5.497,1154,6.123,1155,6.123,1157,5.497,1158,4.562,1159,5.497,1228,5.051,1275,5.051,1276,5.793,1277,6.979,1278,5.051,1279,5.793,1280,6.979,1281,5.793,1282,5.793,1283,5.793]],["title/interfaces/LiveLecture.html",[1104,1.22,1284,3.204]],["body/interfaces/LiveLecture.html",[3,0.075,4,0.067,5,0.058,7,0.183,8,0.587,9,1.106,18,1.66,22,0.014,23,0.261,24,0.327,27,1.266,32,3.049,34,0.431,39,1.587,41,0.28,42,0.137,44,0.797,46,0.075,47,0.027,48,0.36,54,1.354,62,0.727,64,0.008,65,0.006,66,0.004,67,0.118,75,0.402,76,0.779,78,0.447,79,0.416,81,0.447,83,0.447,86,0.496,88,1.546,91,0.921,92,2.246,94,1.173,96,1.43,97,1.641,98,1.602,99,1.516,100,1.777,101,1.641,102,1.641,107,0.496,147,0.837,150,0.496,153,1.142,158,0.496,172,0.595,182,1.616,243,1.888,244,2.09,277,2.701,291,1.717,297,1.61,299,1.888,308,1.228,312,2.023,323,1.43,325,0.856,352,2.09,354,2.09,361,1.888,363,2.09,369,2.038,370,3.593,371,1.248,373,4.099,382,1.077,413,2.25,423,3.135,424,1.43,437,1.173,453,2.023,477,1.928,478,1.616,498,1.888,501,3.369,596,1.527,640,1.034,687,3.112,747,1.616,754,1.888,760,2.941,786,1.888,788,1.888,791,3.662,793,2.941,794,3.862,795,1.616,796,2.539,799,2.09,800,2.09,801,3.283,802,5.301,804,4.055,805,1.888,806,1.888,816,2.09,818,2.09,819,2.09,820,2.09,827,3.283,828,3.283,835,1.516,852,2.09,874,3.818,916,1.928,939,1.077,956,2.941,960,1.737,994,1.43,1028,1.881,1040,1.034,1061,2.09,1077,3.135,1088,2.09,1104,0.718,1106,1.228,1131,2.941,1190,1.888,1196,3.662,1248,1.888,1256,1.737,1284,2.965,1285,2.09,1286,5.269,1287,5.727,1288,5.269,1289,2.539,1290,2.09,1291,2.397,1292,2.539,1293,2.397,1294,2.397,1295,2.397,1296,2.397,1297,3.283,1298,2.397,1299,2.09,1300,2.09,1301,2.09,1302,4.65,1303,2.965,1304,2.397,1305,2.397,1306,2.09,1307,2.397,1308,2.246,1309,2.397,1310,1.888,1311,2.09,1312,2.09,1313,2.09,1314,2.09,1315,1.888,1316,4.15,1317,2.128,1318,4.595,1319,3.283,1320,3.765,1321,2.09,1322,2.09,1323,2.09,1324,2.09,1325,2.09,1326,2.09,1327,2.09,1328,2.381,1329,2.09,1330,2.09,1331,2.09,1332,2.09,1333,2.09,1334,2.09,1335,2.09,1336,1.888,1337,2.09,1338,2.397,1339,2.397,1340,2.09,1341,2.397,1342,2.397,1343,2.397,1344,3.765,1345,2.397,1346,2.397,1347,2.397,1348,1.888,1349,1.354,1350,2.09,1351,1.888,1352,2.397,1353,3.765,1354,2.397,1355,2.397,1356,2.397,1357,3.765,1358,2.397,1359,1.888,1360,2.397,1361,4.65,1362,2.397,1363,2.09,1364,2.09,1365,2.397,1366,2.397,1367,3.765,1368,3.283,1369,2.397,1370,2.397,1371,2.397,1372,2.397,1373,2.09,1374,2.397,1375,1.616,1376,2.397,1377,2.397,1378,2.397,1379,2.397,1380,4.65,1381,2.397,1382,2.397,1383,2.397,1384,2.397,1385,4.65,1386,2.397,1387,1.888,1388,2.397,1389,2.397,1390,2.397,1391,2.397,1392,4.65,1393,2.397,1394,2.397,1395,2.397,1396,4.994,1397,4.65,1398,2.397,1399,2.397,1400,2.397,1401,2.397,1402,2.397,1403,2.397,1404,3.765,1405,2.397,1406,2.397,1407,2.397,1408,2.397,1409,2.397,1410,2.397,1411,4.15,1412,4.65,1413,2.397,1414,2.397,1415,2.397,1416,2.397,1417,2.397,1418,2.09,1419,2.397,1420,3.283,1421,2.09,1422,2.397,1423,2.09,1424,2.09,1425,2.397,1426,2.397,1427,2.397,1428,2.397,1429,2.397,1430,2.09,1431,6.079,1432,3.283,1433,4.595,1434,3.283,1435,4.994,1436,2.397,1437,3.765,1438,2.397,1439,2.397,1440,3.765,1441,2.397,1442,3.765,1443,3.765,1444,2.397,1445,2.397,1446,2.397,1447,3.765,1448,3.765,1449,2.09,1450,2.397,1451,2.09,1452,2.397,1453,2.397,1454,2.397,1455,3.283,1456,2.09,1457,3.765,1458,2.397,1459,2.397,1460,2.397,1461,2.397,1462,3.765,1463,2.397,1464,2.397,1465,2.397,1466,2.397,1467,2.397,1468,6.079,1469,3.765,1470,2.397,1471,4.65,1472,2.397,1473,3.765,1474,2.397,1475,2.397,1476,2.397,1477,2.397,1478,2.397,1479,4.65,1480,2.397,1481,2.397,1482,3.765,1483,2.397,1484,4.65,1485,2.397,1486,2.397,1487,2.397,1488,2.397,1489,2.397,1490,2.397,1491,2.965,1492,2.397,1493,2.397,1494,2.397,1495,2.397,1496,4.994,1497,2.397,1498,2.397,1499,2.397,1500,3.765,1501,3.283,1502,2.397,1503,2.397,1504,2.397,1505,4.65,1506,2.397,1507,2.397,1508,2.397,1509,1.616,1510,2.397,1511,1.888,1512,2.397,1513,4.15,1514,2.397,1515,2.397,1516,2.397,1517,2.397,1518,2.397,1519,2.397,1520,2.397,1521,2.397,1522,2.397,1523,2.397,1524,2.09,1525,1.888,1526,2.397]],["title/injectables/LogService.html",[0,0.813,1289,2.743]],["body/injectables/LogService.html",[0,1.094,2,1.588,3,0.124,4,0.111,5,0.097,7,0.139,9,1.411,12,0.595,13,3.313,16,0.377,19,0.631,21,0.829,22,0.013,23,0.377,24,0.428,25,0.689,27,1.345,31,1.371,33,0.689,36,2.595,39,0.911,41,0.271,42,0.227,45,1.235,46,0.124,47,0.044,48,0.598,55,2.942,62,1.494,64,0.006,65,0.009,66,0.006,80,1.588,100,1.699,113,0.742,153,0.885,172,0.414,212,1.65,291,2.286,297,1.931,326,1.717,327,3.029,335,2.374,341,3.095,353,3.095,364,2.039,365,3.454,367,2.566,371,1.482,374,3.095,375,3.461,395,3.095,396,3.799,417,2.039,418,2.039,419,2.138,420,2.249,421,1.865,422,1.65,425,1.865,426,2.039,427,3.622,428,2.138,429,2.138,430,2.138,431,2.933,433,2.249,435,3.095,436,2.249,437,1.948,438,1.865,439,2.249,440,3.095,441,2.249,442,2.249,443,2.249,444,2.249,445,2.805,446,2.942,447,2.249,448,2.805,449,3.159,450,2.249,451,2.249,452,2.249,453,2.138,454,2.249,455,3.095,456,2.249,457,2.249,458,2.138,459,2.249,460,1.529,461,2.249,462,2.249,463,2.249,464,3.095,469,3.159,470,4.13,473,2.249,474,3.267,475,3.267,495,2.684,501,3.968,510,2.517,738,2.374,740,4.222,741,2.884,742,2.884,1162,2.684,1196,4.313,1289,3.693,1525,3.135,1527,3.135,1528,5.477,1529,5.477,1530,6.744,1531,5.477,1532,5.477,1533,5.477,1534,3.98,1535,5.477,1536,3.98,1537,3.98,1538,5.477,1539,3.98,1540,3.98,1541,3.98,1542,5.477,1543,3.98,1544,5.477,1545,3.98,1546,5.477,1547,3.98,1548,3.135,1549,3.47,1550,3.135,1551,3.135,1552,3.98]],["title/components/LoginComponent.html",[67,0.127,127,0.841]],["body/components/LoginComponent.html",[3,0.098,4,0.087,5,0.077,7,0.109,8,0.722,9,1.247,12,0.503,13,3.027,15,4.792,16,0.439,17,1.539,18,2.413,19,0.64,21,0.597,22,0.013,23,0.3,24,0.418,25,0.418,27,1.174,29,1.917,30,1.816,31,2.088,32,2.577,33,0.418,34,0.834,41,0.268,42,0.18,44,1.046,46,0.098,47,0.035,50,4.792,51,2.967,62,1.061,64,0.005,65,0.007,66,0.005,67,0.172,68,0.673,69,0.991,70,0.77,71,0.796,72,0.77,73,0.77,75,0.776,76,1.136,77,0.745,78,1.554,79,1.444,81,0.863,83,0.863,86,1.254,88,2.016,91,1.208,94,3.509,103,0.65,104,1.134,105,1.134,106,0.77,107,1.254,108,0.77,109,0.77,110,0.65,111,0.77,112,0.673,113,1.025,114,1.346,115,0.673,116,1.484,117,0.673,118,1.346,119,0.65,120,0.77,121,0.65,122,0.72,123,0.77,124,0.673,125,0.745,126,1.134,127,1.254,128,0.77,129,0.65,130,1.06,131,0.77,132,0.673,133,0.77,134,0.628,135,1.216,136,0.77,137,0.65,138,0.894,139,0.65,140,0.77,141,0.628,142,0.72,143,0.77,144,0.628,145,0.77,146,0.65,147,0.989,148,0.65,149,0.65,150,0.65,151,0.77,152,0.65,153,0.98,154,0.65,155,0.65,156,0.628,157,1.134,158,0.65,159,0.77,160,0.628,161,0.77,162,0.673,163,0.77,164,0.65,165,0.77,166,0.673,167,1.301,168,0.673,169,0.77,170,0.673,171,0.65,172,0.327,173,0.72,174,0.77,175,0.77,209,1.412,277,2.696,295,1.304,297,0.796,325,1.653,327,1.412,332,2.477,333,2.742,337,4.792,369,1.254,422,1.304,423,3.122,460,2.328,464,1.777,512,5.063,516,3.355,520,4.712,522,4.086,562,1.539,581,1.919,583,1.611,587,1.714,589,1.304,590,1.254,591,2.247,592,1.487,594,2.762,604,1.54,614,2.617,615,3.949,618,1.777,619,3.106,621,2.967,623,3.106,629,1.611,630,1.777,631,1.777,639,1.777,640,1.997,641,2.617,642,1.777,647,3.426,650,2.488,651,1.777,666,3.426,691,1.689,817,2.742,895,1.777,904,2.371,925,1.473,939,1.412,952,2.12,961,1.876,972,3.355,1230,2.742,1239,4.037,1248,2.477,1511,2.477,1553,2.742,1554,5.495,1555,4.63,1556,6.462,1557,5.495,1558,5.495,1559,5.495,1560,4.792,1561,4.63,1562,3.145,1563,3.145,1564,3.145,1565,3.145,1566,3.145,1567,3.145,1568,3.145,1569,3.145,1570,3.145,1571,3.145,1572,3.145,1573,3.145,1574,3.145,1575,3.145,1576,2.742,1577,3.145,1578,2.742,1579,2.742,1580,3.145,1581,3.145,1582,3.145,1583,3.145,1584,3.145,1585,3.145,1586,3.145,1587,3.145,1588,3.145,1589,3.145,1590,3.145,1591,3.145,1592,3.145,1593,3.145,1594,3.145,1595,3.145,1596,4.63,1597,3.145,1598,3.145,1599,3.145,1600,3.145,1601,3.145,1602,3.145,1603,3.145,1604,4.63,1605,2.742,1606,3.145,1607,4.63,1608,4.63,1609,4.037,1610,4.63,1611,4.63,1612,4.63,1613,4.63,1614,4.63,1615,2.477,1616,3.145,1617,3.355,1618,2.742,1619,2.742,1620,2.477]],["title/components/MaterialDashboardComponent.html",[67,0.127,129,0.841]],["body/components/MaterialDashboardComponent.html",[3,0.11,4,0.098,5,0.086,7,0.123,8,0.785,16,0.335,19,0.411,21,0.384,22,0.013,23,0.29,24,0.202,25,0.319,29,0.925,30,0.894,41,0.225,42,0.202,46,0.11,47,0.039,48,0.53,61,2.233,62,1.235,64,0.005,65,0.008,66,0.005,67,0.184,68,0.755,69,1.077,70,0.865,71,0.894,72,0.865,73,0.865,77,0.836,78,1.568,79,1.457,81,0.939,83,0.939,103,0.73,104,1.233,105,1.233,106,0.865,107,1.323,108,0.865,109,0.865,110,0.73,111,0.865,112,0.755,113,1.094,114,1.437,115,0.755,116,1.567,117,0.755,118,1.437,119,0.73,120,0.865,121,0.73,122,0.808,123,0.865,124,0.755,125,0.836,126,1.233,127,0.73,128,0.865,129,1.323,130,1.724,131,0.865,132,0.755,133,0.865,134,0.706,135,1.299,136,0.865,137,0.73,138,0.972,139,0.73,140,0.865,141,0.706,142,0.808,143,0.865,144,0.706,145,0.865,146,0.73,147,1.057,148,0.73,149,0.73,150,0.73,151,0.865,152,0.73,153,1.035,154,0.73,155,0.73,156,0.706,157,1.233,158,0.73,159,0.865,160,0.706,161,0.865,162,0.755,163,0.865,164,0.73,165,0.865,166,0.755,167,1.39,168,0.755,169,0.865,170,0.755,171,0.73,172,0.367,173,0.808,174,0.865,175,0.865,216,2.781,224,4.253,298,4.538,300,6.134,413,3.105,421,2.75,422,1.464,582,1.897,586,3.396,602,1.464,603,2.172,604,1.174,605,1.307,654,1.654,691,4.389,830,3.006,884,2.381,891,2.233,893,2.233,902,2.846,903,3.649,924,2.233,925,2.359,939,2.262,940,4.047,961,2.106,963,3.004,993,3.079,1198,5.58,1349,4.183,1511,3.966,1621,4.623,1622,3.079,1623,5.87,1624,5.036,1625,5.87,1626,3.079,1627,6.134,1628,3.531,1629,5.036,1630,8.03,1631,8.03,1632,4.315,1633,5.04,1634,3.531,1635,4.391,1636,5.036,1637,4.391,1638,5.036,1639,5.036,1640,5.036,1641,3.079,1642,5.036,1643,4.391,1644,5.036,1645,5.036,1646,3.531]],["title/modules/MaterialModule.html",[176,2.299,1647,2.743]],["body/modules/MaterialModule.html",[3,0.156,4,0.139,5,0.122,22,0.013,41,0.327,42,0.285,46,0.156,47,0.055,64,0.008,65,0.01,66,0.008,178,2.98,180,3.368,183,3.368,200,3.619,204,4.613,646,1.919,1647,4.293,1648,4.995,1649,5.551,1650,3.934,1651,7.008,1652,4.995,1653,7.008,1654,4.995,1655,7.008,1656,4.995,1657,7.008,1658,4.995,1659,7.008,1660,4.355,1661,7.008,1662,4.995,1663,7.008,1664,4.995,1665,3.619,1666,7.008,1667,4.995,1668,7.008,1669,4.995,1670,7.008,1671,4.995,1672,7.008,1673,4.995,1674,7.008,1675,4.995,1676,7.008,1677,2.823,1678,7.008,1679,4.995,1680,4.995,1681,7.008,1682,4.995,1683,7.008,1684,4.995,1685,7.008,1686,2.823,1687,7.008,1688,2.823,1689,7.008,1690,4.995,1691,7.008,1692,4.995,1693,7.008,1694,4.995,1695,7.008,1696,4.995,1697,7.008,1698,3.934]],["title/components/MaterialNavComponent.html",[67,0.127,132,0.87]],["body/components/MaterialNavComponent.html",[3,0.096,4,0.085,5,0.075,7,0.107,8,0.708,12,0.494,16,0.29,19,0.546,21,0.333,22,0.013,23,0.296,24,0.342,25,0.277,29,1.19,30,1.15,32,2.388,33,0.41,34,0.975,36,1.738,41,0.245,42,0.175,45,0.951,46,0.096,47,0.034,48,0.46,52,3.292,64,0.005,65,0.007,66,0.005,67,0.169,68,0.656,69,0.972,70,0.75,71,0.776,72,0.75,73,0.75,77,0.726,78,1.551,79,1.443,81,0.847,83,0.847,88,2.46,91,1.177,92,1.828,94,3.277,95,2.414,97,0.726,101,0.726,102,0.726,103,0.634,104,1.112,105,1.112,106,0.75,107,1.238,108,0.75,109,0.75,110,0.634,111,0.75,112,0.656,113,1.399,114,1.326,115,0.656,116,1.466,117,0.656,118,1.326,119,0.634,120,0.75,121,0.634,122,1.587,123,0.75,124,0.656,125,1.514,126,1.112,127,0.634,128,0.75,129,0.634,130,1.718,131,0.75,132,1.281,133,0.75,134,0.613,135,1.415,136,0.75,137,0.634,138,1.156,139,0.634,140,0.75,141,0.613,142,1.239,143,0.75,144,0.613,145,0.75,146,0.634,147,1.309,148,0.634,149,0.634,150,0.634,151,0.75,152,0.634,153,1.151,154,0.634,155,0.634,156,0.613,157,1.112,158,0.634,159,0.75,160,0.613,161,0.75,162,0.656,163,0.75,164,0.634,165,0.75,166,0.656,167,1.721,168,0.656,169,0.75,170,0.656,171,0.634,172,0.319,173,1.239,174,0.75,175,0.75,216,2.414,226,5.459,277,1.223,291,0.919,299,4.715,308,2.327,309,3.063,313,3.292,325,1.622,330,2.673,339,2.776,358,4.515,413,1.682,421,1.436,422,1.271,449,1.436,469,2.128,478,2.067,503,3.962,582,1.647,588,3.217,590,1.223,591,1.511,592,0.984,596,1.735,598,2.71,646,1.177,654,1.436,830,3.55,858,5.22,880,1.828,883,2.71,902,2.568,904,1.57,909,3.063,910,3.063,920,2.221,925,1.436,928,3.384,936,2.221,938,3.06,939,1.377,940,1.938,963,2.71,991,3.578,1218,2.673,1336,5.035,1340,5.839,1349,2.568,1576,3.962,1621,5.459,1626,2.673,1627,5.839,1632,3.063,1641,2.673,1643,3.962,1699,2.673,1700,3.962,1701,5.414,1702,4.543,1703,5.22,1704,5.414,1705,5.22,1706,3.065,1707,3.065,1708,3.065,1709,3.065,1710,3.065,1711,4.543,1712,4.543,1713,4.543,1714,3.065,1715,3.065,1716,2.673,1717,5.575,1718,3.065,1719,3.065,1720,4.543,1721,3.065,1722,3.065,1723,7.118,1724,7.118,1725,4.543,1726,4.543,1727,4.543,1728,6.696,1729,5.22,1730,5.22,1731,4.543,1732,4.543,1733,4.543,1734,4.543,1735,4.543,1736,4.543,1737,6.696,1738,4.543,1739,4.543,1740,4.543,1741,5.414,1742,4.543,1743,3.065,1744,3.065,1745,3.065,1746,3.065,1747,2.673,1748,3.065,1749,1.828,1750,3.065,1751,3.065,1752,2.414,1753,3.065,1754,3.065,1755,2.221,1756,3.065,1757,3.065,1758,3.065,1759,4.543,1760,4.543,1761,3.065,1762,3.065,1763,3.065,1764,4.543,1765,3.065,1766,2.673,1767,2.673,1768,2.673]],["title/interfaces/Message.html",[31,1.401,1104,1.22]],["body/interfaces/Message.html",[3,0.179,4,0.159,5,0.139,7,0.199,8,1.08,22,0.013,24,0.473,25,0.77,27,1.295,31,2.387,41,0.266,46,0.179,64,0.009,65,0.011,66,0.009,172,0.825,370,4.376,373,5.222,746,4.451,751,6.752,830,3.966,832,6.752,835,4.897,1104,1.716,1106,2.932,1303,6.099,1769,4.991]],["title/components/OfflineSessionComponent.html",[67,0.127,134,0.813]],["body/components/OfflineSessionComponent.html",[3,0.105,4,0.093,5,0.081,7,0.198,8,0.754,9,0.645,12,0.526,16,0.459,19,0.606,21,0.526,22,0.013,23,0.361,24,0.394,25,0.437,27,1.2,33,0.514,34,1.123,41,0.24,42,0.191,46,0.178,47,0.054,48,0.502,54,1.889,64,0.009,65,0.008,66,0.005,67,0.195,68,0.715,69,1.036,70,0.818,71,0.846,72,0.818,73,0.818,75,0.812,76,1.177,77,0.791,78,1.564,79,1.451,81,0.903,83,1.061,86,1.29,97,0.791,98,1.151,101,1.348,102,1.348,103,0.691,104,1.185,105,1.185,106,0.818,107,1.29,108,0.818,109,0.818,110,0.691,111,0.818,112,0.715,113,1.061,114,1.394,115,0.715,116,1.528,117,0.715,118,1.394,119,0.691,120,0.818,121,0.691,122,0.765,123,0.818,124,0.715,125,0.791,126,1.185,127,0.691,128,0.818,129,0.691,130,1.108,131,0.818,132,0.715,133,0.818,134,1.247,135,1.711,136,0.818,137,0.691,138,1.333,139,1.001,140,0.818,141,0.668,142,0.765,143,0.818,144,0.668,145,0.818,146,0.691,147,1.025,148,0.691,149,0.691,150,0.691,151,0.818,152,0.691,153,1.009,154,0.691,155,0.691,156,0.668,157,1.185,158,0.691,159,0.818,160,0.668,161,0.818,162,0.715,163,0.818,164,0.691,165,0.818,166,0.715,167,1.348,168,0.715,169,0.818,170,0.715,171,0.691,172,0.348,173,0.765,174,0.818,175,0.818,259,4.774,297,1.226,339,2.745,369,1.311,370,3.902,560,2.114,562,1.356,581,2.007,582,1.796,583,2.479,584,3.722,585,3.508,586,3.264,587,1.237,588,1.796,591,1.111,592,1.828,602,1.386,604,1.61,654,2.666,687,2.369,691,1.796,884,2.254,891,3.061,892,3.264,893,3.061,895,1.889,902,1.889,904,2.479,908,3.508,923,2.422,925,2.268,939,1.501,940,3.061,953,2.254,1024,1.566,1028,2.032,1040,1.441,1041,2.114,1042,1.712,1043,1.712,1044,1.636,1104,1.002,1105,3.264,1107,5.09,1108,2.422,1109,2.632,1110,3.722,1111,2.422,1112,1.994,1113,2.422,1114,5.216,1115,3.813,1116,2.632,1117,2.632,1118,3.813,1119,4.483,1120,4.483,1121,4.483,1122,5.609,1123,3.813,1124,2.632,1125,3.813,1126,3.813,1127,3.813,1128,2.632,1129,2.632,1130,2.632,1131,2.114,1132,3.813,1133,2.632,1134,3.061,1135,2.632,1136,2.632,1137,2.632,1138,2.632,1139,2.632,1140,2.632,1141,2.632,1142,2.632,1143,2.632,1144,2.632,1145,2.632,1146,2.632,1147,2.254,1615,2.632,1617,3.508,1620,2.632,1770,4.841,1771,5.692,1772,4.841,1773,3.342,1774,3.342,1775,3.342,1776,3.342,1777,3.342,1778,3.342,1779,3.342,1780,4.221,1781,4.221,1782,4.841,1783,4.841,1784,3.342,1785,4.841,1786,4.841,1787,3.342,1788,3.342,1789,3.342]],["title/components/OfflineSessionDetailComponent.html",[67,0.127,137,0.841]],["body/components/OfflineSessionDetailComponent.html",[3,0.051,4,0.045,5,0.039,7,0.187,8,0.426,9,0.685,12,0.297,16,0.153,18,1.92,19,0.605,21,0.506,22,0.013,23,0.28,24,0.374,25,0.421,27,0.878,29,1.22,30,1.18,31,0.558,33,0.531,34,1.018,39,0.371,41,0.194,42,0.092,44,0.538,46,0.051,47,0.018,48,0.243,49,2.811,51,1.338,54,2.356,61,2.637,62,0.313,64,0.003,65,0.004,66,0.003,67,0.111,68,0.346,69,0.585,70,0.397,71,0.41,72,0.397,73,0.397,75,0.458,76,0.734,77,1.441,78,1.448,79,1.34,81,0.51,83,0.51,85,2.571,86,0.862,88,1.789,91,0.622,96,0.966,97,1.103,98,0.942,99,1.024,100,1.445,101,1.103,102,1.103,103,0.335,104,0.669,105,0.669,106,0.397,107,0.963,108,0.397,109,0.397,110,0.335,111,0.397,112,0.346,113,0.662,114,0.869,115,0.346,116,1.021,117,0.346,118,0.869,119,0.335,120,0.397,121,0.335,122,0.954,123,0.397,124,0.346,125,0.383,126,0.669,127,0.335,128,0.397,129,0.335,130,0.626,131,0.397,132,0.346,133,0.397,134,0.324,135,1.386,136,0.397,137,0.862,138,1.522,139,0.335,140,0.397,141,0.324,142,0.371,143,0.397,144,0.324,145,0.397,146,0.335,147,0.839,148,0.335,149,0.335,150,0.335,151,0.397,152,0.335,153,0.674,154,0.335,155,0.335,156,0.324,157,0.669,158,0.335,159,0.397,160,0.324,161,0.397,162,0.346,163,0.397,164,0.335,165,0.397,166,0.346,167,0.84,168,0.346,169,0.397,170,0.346,171,0.335,172,0.559,173,0.371,174,0.397,175,0.397,197,0.915,261,5.404,290,2.795,291,1.25,295,1.133,297,0.692,306,0.966,320,1.275,340,2.153,342,3.021,361,3.284,368,2.153,369,1.369,370,2.856,371,1.103,373,2.393,382,1.594,413,1.543,424,0.966,438,0.759,449,0.759,460,1.05,499,1.412,500,1.412,562,1.305,581,0.671,582,3.162,583,2.588,584,2.487,587,1.314,588,3.742,589,0.671,590,0.646,591,2.494,592,2.286,593,3.196,596,2.36,597,1.545,598,0.966,599,1.729,602,0.671,603,0.698,604,2.082,605,2.424,646,2.338,654,2.757,659,0.966,660,1.981,661,2.571,662,1.981,665,1.275,666,2.356,671,1.275,672,1.275,675,1.173,689,2.487,690,1.631,691,1.906,746,2.715,749,3.284,755,3.635,785,1.275,793,1.024,794,1.844,795,1.092,796,1.092,797,3.669,822,2.153,823,2.153,824,2.153,830,2.755,844,1.981,847,1.412,848,1.412,849,1.173,865,2.384,866,2.384,867,3.284,868,2.153,869,2.153,870,1.275,871,1.981,872,5.607,873,2.153,874,3.021,875,2.153,878,2.153,879,1.275,880,3.735,881,1.275,882,1.275,883,3.979,884,4.637,885,1.173,886,1.275,887,1.275,888,1.173,889,1.275,890,2.153,891,3.196,892,2.393,893,2.946,894,2.153,895,1.545,896,1.275,897,2.153,898,2.795,900,3.284,901,2.795,902,3.831,903,3.898,904,2.895,905,2.153,906,2.153,907,2.153,908,2.571,909,2.393,910,2.393,911,2.153,912,2.153,913,4.237,914,3.98,915,1.275,916,0.829,917,2.795,918,1.275,919,2.153,920,1.173,921,2.153,922,2.153,923,1.173,924,1.729,925,2.757,926,1.275,927,2.153,928,3.44,929,1.275,930,1.981,931,3.284,932,1.275,933,1.275,934,1.275,935,1.275,936,1.173,937,1.275,938,2.005,939,1.228,940,1.024,941,2.795,942,3.898,943,1.412,944,2.153,945,1.173,946,1.275,947,1.275,948,5.047,949,1.173,950,3.021,951,2.795,952,2.393,953,3.141,954,1.275,955,2.153,956,1.024,957,2.795,958,1.275,959,1.275,960,3.662,961,3.631,962,2.795,963,3.209,964,1.173,965,1.275,966,1.275,967,1.275,968,2.153,969,3.669,970,3.98,971,3.284,972,3.021,973,4.096,974,4.452,975,2.153,976,2.153,977,2.153,978,2.153,979,2.153,980,2.153,981,2.153,982,1.275,983,2.795,984,2.571,985,3.284,986,3.662,987,1.412,988,2.384,989,4.406,990,1.412,991,3.98,992,1.412,995,1.412,996,1.275,997,4.452,998,1.275,999,2.153,1000,1.275,1001,1.275,1002,2.153,1003,2.153,1004,2.153,1005,2.153,1006,1.275,1007,1.275,1008,1.275,1009,1.275,1010,1.275,1011,1.173,1012,1.173,1013,1.173,1014,1.173,1015,1.173,1016,0.792,1017,1.173,1018,1.173,1019,1.275,1024,1.662,1025,3.094,1026,3.094,1050,1.412,1051,1.412,1052,2.946,1107,5.028,1110,2.487,1111,1.173,1112,0.966,1113,1.173,1191,1.412,1297,3.635,1299,3.094,1300,3.094,1301,3.094,1363,1.412,1364,1.412,1375,1.092,1411,1.275,1418,1.412,1420,2.384,1421,1.412,1423,1.412,1424,1.412,1752,1.275,1766,1.412,1780,2.384,1781,2.384,1790,4.169,1791,3.548,1792,2.734,1793,4.169,1794,4.169,1795,2.734,1796,2.734,1797,2.734,1798,1.619,1799,1.619,1800,2.734,1801,1.619,1802,1.619,1803,1.619,1804,1.619,1805,2.734,1806,1.619,1807,2.734,1808,1.619,1809,1.619,1810,1.619,1811,1.619,1812,1.619,1813,1.619,1814,1.619,1815,1.619,1816,1.619,1817,1.619,1818,1.619,1819,1.619,1820,1.619,1821,1.619,1822,1.619,1823,1.619,1824,1.619,1825,1.619,1826,1.619,1827,1.619,1828,1.619,1829,1.619,1830,2.734,1831,1.619,1832,1.619,1833,1.619,1834,1.619,1835,2.734,1836,1.619,1837,1.619,1838,1.619,1839,4.658,1840,2.734,1841,2.734,1842,2.734,1843,1.619,1844,2.734,1845,1.619,1846,1.619,1847,1.619,1848,1.619,1849,1.619,1850,1.619,1851,1.619,1852,1.619,1853,1.619,1854,1.619,1855,1.619,1856,1.619,1857,1.619,1858,1.619,1859,3.548,1860,2.734,1861,1.619,1862,4.658,1863,1.619,1864,1.619,1865,1.619,1866,2.734,1867,1.619,1868,1.619,1869,1.619,1870,1.619,1871,1.619,1872,1.619,1873,1.545,1874,1.619,1875,1.619,1876,1.619,1877,1.619,1878,1.619,1879,1.619,1880,1.619,1881,1.619,1882,1.619,1883,2.734,1884,2.734,1885,2.734,1886,2.384,1887,2.734,1888,1.412,1889,1.412,1890,1.412,1891,1.412,1892,1.412,1893,3.548,1894,1.619,1895,3.548,1896,2.734,1897,1.619,1898,1.619,1899,1.619]],["title/components/OfflineSessionDialog.html",[67,0.127,139,0.841]],["body/components/OfflineSessionDialog.html",[3,0.113,4,0.101,5,0.088,7,0.126,8,0.799,9,0.699,12,0.557,16,0.486,19,0.579,21,0.557,22,0.013,23,0.351,24,0.37,25,0.463,27,1.125,29,0.948,30,0.917,33,0.463,34,1.071,41,0.248,42,0.207,46,0.186,47,0.057,48,0.544,64,0.009,65,0.008,66,0.006,67,0.202,68,0.775,69,1.097,70,0.886,72,0.886,73,0.886,75,0.607,76,1.06,77,0.857,78,1.572,79,1.458,81,0.675,83,1.11,86,0.749,97,0.857,98,1.247,101,1.409,102,1.409,103,0.749,104,1.255,105,1.255,106,0.886,107,1.338,108,0.886,109,0.886,110,0.749,111,0.886,112,0.775,113,1.11,114,1.457,115,0.775,116,1.585,117,0.775,118,1.457,119,0.749,120,0.886,121,0.749,122,0.829,123,0.886,124,0.775,125,0.857,126,1.255,127,0.749,128,0.886,129,0.749,130,1.173,131,0.886,132,0.775,133,0.886,134,1.024,135,1.7,136,0.886,137,0.749,138,1.408,139,1.338,140,0.886,141,0.723,142,0.829,143,0.886,144,0.723,145,0.886,146,0.749,147,1.071,148,0.749,149,0.749,150,0.749,151,0.886,152,0.749,153,1.046,154,0.749,155,0.749,156,0.723,157,1.255,158,0.749,159,0.886,160,0.723,161,0.886,162,0.775,163,0.886,164,0.749,165,0.886,166,0.775,167,1.409,168,0.775,169,0.886,170,0.775,171,0.749,172,0.376,173,0.829,174,0.886,175,0.886,259,4.612,297,1.796,339,3.023,369,0.98,370,3.86,562,1.014,1024,2.788,1028,2.603,1040,1.561,1041,2.289,1042,1.854,1043,1.854,1044,1.771,1053,3.241,1054,3.241,1104,1.085,1105,4.605,1107,4.917,1108,2.623,1109,2.851,1110,3.058,1111,2.623,1112,2.159,1113,2.623,1114,4.037,1115,5.379,1116,2.851,1117,2.851,1118,2.851,1119,2.851,1120,2.851,1121,2.851,1122,5.097,1123,4.037,1124,2.851,1125,4.037,1126,4.037,1127,2.851,1128,2.851,1129,2.851,1130,2.851,1131,2.289,1132,4.037,1133,2.851,1134,3.241,1135,2.851,1136,4.687,1137,2.851,1138,2.851,1139,2.851,1140,2.851,1141,4.037,1142,5.097,1143,4.037,1144,5.097,1145,2.851,1146,4.037,1147,2.441,1209,4.469,1900,5.126,1901,3.62,1902,5.126,1903,3.62,1904,3.62,1905,2.623,1906,3.62,1907,3.62,1908,5.126,1909,3.241,1910,5.126,1911,5.126]],["title/injectables/OfflineSessionService.html",[0,0.813,1110,2.427]],["body/injectables/OfflineSessionService.html",[0,1.152,2,1.712,3,0.134,4,0.119,5,0.105,7,0.149,9,1.443,12,0.627,13,3.26,16,0.407,19,0.623,21,0.813,22,0.013,23,0.37,24,0.427,25,0.675,27,1.299,31,1.479,33,0.675,36,2.493,39,0.983,41,0.279,42,0.245,45,1.332,46,0.134,47,0.048,48,0.645,55,2.306,62,1.474,64,0.007,65,0.009,66,0.007,80,1.712,100,1.789,135,1.441,138,1.257,172,0.446,212,1.78,291,2.289,297,1.46,326,1.851,327,3.126,341,3.258,353,3.258,364,2.199,365,3.564,367,2.701,371,1.365,374,3.258,375,3.553,395,3.258,396,3.739,417,2.199,418,2.199,419,2.306,420,2.426,421,2.011,422,1.78,425,2.011,426,2.199,427,3.334,428,2.306,429,2.306,430,2.306,431,2.011,433,3.933,434,2.715,435,3.258,436,2.426,437,2.101,438,2.011,439,2.426,440,3.258,441,2.426,442,2.426,443,2.426,444,2.426,445,2.953,446,3.098,447,2.426,448,2.953,449,3.26,450,2.426,451,2.426,452,2.426,453,2.306,454,2.426,455,2.426,456,2.426,457,2.426,458,2.306,459,2.426,460,1.649,461,2.426,462,2.426,463,2.426,469,2.701,470,3.933,473,3.258,474,3.439,475,3.439,479,3.743,502,3.743,510,2.715,740,2.895,1110,3.439,1112,4.631,1912,6.114,1913,3.381,1914,5.765,1915,5.765,1916,5.765,1917,6.959,1918,4.293,1919,5.765,1920,4.293,1921,4.293,1922,5.765,1923,4.293,1924,5.765,1925,4.293,1926,4.293,1927,4.293,1928,3.743,1929,4.293]],["title/components/OnlineUsersComponent.html",[67,0.127,141,0.813]],["body/components/OnlineUsersComponent.html",[3,0.102,4,0.132,5,0.079,7,0.113,8,0.739,12,0.516,16,0.308,19,0.602,21,0.516,22,0.013,23,0.38,24,0.39,25,0.428,27,1.321,29,0.851,30,0.823,33,0.556,34,1.008,39,1.282,41,0.251,42,0.186,46,0.148,47,0.036,48,0.488,62,0.627,64,0.005,65,0.007,66,0.005,67,0.175,68,0.695,69,1.015,70,0.796,71,0.823,72,0.796,73,0.796,75,0.795,76,1.158,77,0.769,78,1.558,79,1.448,81,0.884,83,0.884,86,1.273,87,2.191,88,2.274,91,1.248,97,0.769,101,0.769,102,0.769,103,0.672,104,1.161,105,1.161,106,0.796,107,1.273,108,0.796,109,0.796,110,0.672,111,0.796,112,0.695,113,1.044,114,1.371,115,0.695,116,1.508,117,0.695,118,1.371,119,0.672,120,0.796,121,0.672,122,0.744,123,0.796,124,0.695,125,0.769,126,1.161,127,0.672,128,0.796,129,0.672,130,1.086,131,0.796,132,0.695,133,0.796,134,0.649,135,1.24,136,0.796,137,0.672,138,0.916,139,0.672,140,0.796,141,1.231,142,1.717,143,0.796,144,0.649,145,0.796,146,0.672,147,1.008,148,0.672,149,0.672,150,0.672,151,0.796,152,0.672,153,0.996,154,0.672,155,0.672,156,0.649,157,1.161,158,0.672,159,0.796,160,0.649,161,0.796,162,0.695,163,0.796,164,0.672,165,0.796,166,0.695,167,1.326,168,0.695,169,0.796,170,0.695,171,0.672,172,0.493,173,0.744,174,0.796,175,0.796,265,4.474,277,2.456,291,1.679,297,1.418,308,3.154,339,2.322,345,4.152,369,0.88,371,1.619,413,1.756,477,2.429,478,3.198,558,2.741,559,2.741,591,1.862,592,1.523,621,1.59,880,1.939,916,2.429,938,1.837,939,1.46,1016,1.59,1104,0.974,1258,3.48,1665,2.355,1677,1.837,1686,1.837,1688,1.837,1749,1.939,1873,1.837,1905,3.437,1930,5.057,1931,2.191,1932,4.884,1933,4.136,1934,3.777,1935,3.341,1936,3.341,1937,3.736,1938,4.743,1939,2.83,1940,3.25,1941,2.56,1942,3.25,1943,3.25,1944,3.341,1945,3.25,1946,5.962,1947,5.37,1948,3.25,1949,3.25,1950,3.341,1951,2.83,1952,3.25,1953,3.341,1954,2.83,1955,1.939,1956,2.429,1957,2.055,1958,1.939,1959,2.055,1960,2.055,1961,1.746,1962,2.055,1963,1.837,1964,1.837,1965,2.055,1966,1.837,1967,2.055,1968,2.055,1969,2.055,1970,2.055,1971,2.055,1972,2.055,1973,2.055,1974,2.055,1975,2.055,1976,1.939,1977,2.055,1978,2.055,1979,2.055,1980,2.055,1981,2.055,1982,2.055,1983,2.055,1984,2.055,1985,2.055,1986,2.055,1987,2.055,1988,2.055,1989,2.055,1990,2.055,1991,2.055,1992,2.055,1993,2.055,1994,2.055,1995,2.055,1996,2.355,1997,2.355,1998,2.355,1999,2.83,2000,2.355,2001,2.355,2002,2.355,2003,2.191,2004,2.191,2005,2.834,2006,2.83,2007,1.939,2008,1.939,2009,1.939,2010,1.939,2011,1.939,2012,1.939,2013,2.055,2014,2.191,2015,3.437,2016,3.437,2017,2.355,2018,2.355,2019,2.355,2020,2.355,2021,2.355,2022,2.355,2023,3.736,2024,4.136,2025,4.743,2026,4.743,2027,4.743,2028,4.743,2029,2.834,2030,2.56,2031,2.56,2032,2.56,2033,2.191,2034,2.834]],["title/classes/Option.html",[47,0.045,994,2.427]],["body/classes/Option.html",[3,0.181,4,0.161,5,0.141,7,0.202,8,1.088,16,0.549,19,0.659,21,0.63,22,0.013,23,0.384,24,0.462,25,0.523,27,1.351,46,0.181,47,0.064,64,0.009,65,0.011,66,0.009,297,1.897,325,2.776,369,1.89,371,1.773,655,3.274,713,3.663,714,3.663,994,4.163,1134,3.663,1501,6.531,1509,5.05,1909,3.663,2035,5.051,2036,5.899,2037,5.057,2038,6.979,2039,5.793,2040,5.793,2041,5.793,2042,5.793,2043,5.793,2044,5.793,2045,5.793,2046,5.793]],["title/classes/Question.html",[47,0.045,147,0.732]],["body/classes/Question.html",[3,0.179,4,0.159,5,0.139,7,0.199,8,1.08,16,0.543,19,0.658,21,0.622,22,0.013,23,0.383,24,0.453,25,0.517,27,1.204,41,0.22,46,0.179,47,0.063,64,0.009,65,0.011,66,0.009,147,1.247,297,1.887,325,2.474,369,1.876,371,1.764,655,3.235,713,3.62,714,3.62,994,4.619,1134,3.62,1316,5.869,1909,3.62,2037,5.021,2047,4.991,2048,5.869,2049,7.452,2050,6.929,2051,5.725,2052,5.725,2053,5.725,2054,5.725,2055,5.725,2056,5.725,2057,5.725,2058,5.725,2059,5.725,2060,5.725,2061,5.725]],["title/components/QuestionComponent.html",[67,0.127,144,0.813]],["body/components/QuestionComponent.html",[3,0.123,4,0.109,5,0.096,7,0.137,8,0.846,12,0.59,16,0.372,19,0.574,21,0.427,22,0.013,23,0.348,24,0.426,25,0.355,29,1.421,30,1.374,33,0.355,34,0.707,36,1.261,39,1.242,41,0.257,42,0.224,45,1.218,46,0.17,47,0.06,48,0.815,62,0.758,64,0.006,65,0.008,66,0.006,67,0.194,68,0.84,69,1.161,70,0.962,71,0.995,72,0.962,73,0.962,75,0.91,76,1.286,77,0.93,78,1.579,79,1.468,81,1.012,83,1.012,86,1.387,97,0.93,98,1.353,100,1.218,101,0.93,102,0.93,103,0.812,104,1.329,105,1.329,106,0.962,107,1.387,108,0.962,109,0.962,110,0.812,111,0.962,112,0.84,113,1.159,114,1.522,115,0.84,116,1.642,117,0.84,118,1.522,119,0.812,120,0.962,121,0.812,122,0.899,123,0.962,124,0.84,125,0.93,126,1.329,127,0.812,128,0.962,129,0.812,130,1.242,131,0.962,132,0.84,133,0.962,134,0.785,135,1.376,136,0.962,137,0.812,138,1.048,139,0.812,140,0.962,141,0.785,142,0.899,143,0.962,144,1.34,145,0.962,146,0.812,147,1.343,148,0.812,149,0.812,150,0.812,151,0.962,152,0.812,153,1.084,154,0.812,155,0.812,156,0.785,157,1.329,158,0.812,159,0.962,160,0.785,161,0.962,162,0.84,163,0.962,164,0.812,165,0.962,166,0.84,167,1.472,168,0.84,169,0.962,170,0.84,171,0.812,172,0.408,173,0.899,174,0.962,175,0.962,295,1.628,312,3.341,412,3.79,558,3.444,559,3.043,560,2.484,562,1.742,566,2.343,569,2.846,573,2.846,574,2.846,575,2.648,576,2.648,577,3.067,581,2.25,582,2.11,583,2.012,584,3.709,585,2.846,586,2.648,587,1.454,588,2.11,589,1.628,590,1.567,591,2.067,592,1.743,593,2.484,594,2.343,595,3.093,596,1.802,597,2.22,598,3.237,599,2.484,600,3.093,601,3.093,602,1.628,603,1.694,604,1.306,605,1.454,687,2.656,2062,3.093,2063,5.421,2064,4.732,2065,3.781,2066,5.427,2067,3.928,2068,4.732,2069,4.241,2070,3.928,2071,3.928,2072,2.484,2073,4.732,2074,3.093,2075,2.846,2076,5.427,2077,5.427,2078,5.427,2079,5.427]],["title/components/QuestionCreateComponent.html",[67,0.127,146,0.841]],["body/components/QuestionCreateComponent.html",[3,0.104,4,0.092,5,0.081,7,0.115,8,0.75,9,1.093,12,0.523,16,0.314,17,1.622,18,2.458,19,0.594,21,0.616,22,0.013,23,0.34,24,0.406,25,0.511,27,0.576,29,0.868,30,0.839,32,1.322,33,0.561,34,1.119,41,0.253,42,0.189,44,1.102,46,0.104,47,0.037,48,0.498,62,0.64,64,0.005,65,0.007,66,0.005,67,0.177,68,0.709,69,1.029,70,0.811,71,0.839,72,0.811,73,0.811,75,0.807,76,1.171,77,0.785,78,1.561,79,1.45,81,0.897,83,0.897,86,1.285,97,1.139,98,1.141,100,1.028,101,1.139,102,1.139,103,0.685,104,1.178,105,1.178,106,0.811,107,1.285,108,0.811,109,0.811,110,0.685,111,0.811,112,0.709,113,1.056,114,1.387,115,0.709,116,1.522,117,0.709,118,1.387,119,0.685,120,0.811,121,0.685,122,0.759,123,0.811,124,0.709,125,0.785,126,1.178,127,0.685,128,0.811,129,0.685,130,1.101,131,0.811,132,0.709,133,0.811,134,0.662,135,1.254,136,0.811,137,0.685,138,0.929,139,0.685,140,0.811,141,0.662,142,0.759,143,0.811,144,0.662,145,0.811,146,1.285,147,1.454,148,0.685,149,0.685,150,0.685,151,0.811,152,0.685,153,1.067,154,0.685,155,0.685,156,0.662,157,1.178,158,0.685,159,0.811,160,0.662,161,0.811,162,0.709,163,0.811,164,0.685,165,0.811,166,0.709,167,1.341,168,0.709,169,0.811,170,0.709,171,0.685,172,0.345,173,0.759,174,0.811,175,0.811,209,1.488,253,5.375,291,0.993,295,1.994,306,2.87,412,3.201,460,2.795,477,1.697,516,3.486,562,1.586,577,3.512,581,2.348,587,1.227,589,1.374,590,1.322,591,2.362,592,1.545,596,0.96,602,2.576,603,2.443,604,1.883,605,1.781,607,2.401,608,4.461,609,3.789,614,2.719,615,4.014,618,1.873,619,3.201,621,2.354,623,3.201,626,2.61,628,3.789,629,1.697,630,1.873,631,1.873,639,2.719,640,2.846,641,3.891,642,1.873,646,1.848,647,4.112,650,2.585,651,1.873,652,2.096,653,2.096,654,1.552,690,3.707,925,2.653,1028,2.536,1040,1.429,1328,3.93,2033,3.244,2036,2.61,2065,3.339,2072,2.096,2080,5.375,2081,4.939,2082,4.939,2083,5.419,2084,4.195,2085,4.939,2086,3.314,2087,4.195,2088,3.314,2089,3.314,2090,3.314,2091,2.889,2092,3.314,2093,3.789,2094,3.314,2095,5.664,2096,3.314,2097,3.314,2098,3.314,2099,2.889,2100,2.889,2101,2.889,2102,2.889,2103,2.889,2104,2.889,2105,4.939,2106,2.889,2107,2.889,2108,2.889,2109,3.314,2110,3.314,2111,2.234,2112,2.889,2113,4.195,2114,2.889]],["title/classes/QuestionDataSource.html",[47,0.045,2075,2.948]],["body/classes/QuestionDataSource.html",[3,0.171,4,0.152,5,0.133,7,0.19,12,0.732,16,0.518,19,0.596,21,0.594,22,0.013,23,0.333,24,0.385,25,0.494,33,0.608,34,0.984,36,1.755,39,1.251,41,0.293,42,0.312,45,1.696,46,0.211,47,0.075,48,1.012,62,1.055,64,0.008,65,0.01,66,0.008,67,0.211,75,0.916,76,1.393,78,1.019,79,0.95,81,1.019,83,1.019,86,1.13,97,1.294,98,1.883,100,1.696,101,1.294,102,1.294,144,1.092,147,0.984,312,2.937,412,3.089,558,3.73,559,2.675,560,3.457,562,2.045,569,3.961,573,4.881,574,3.961,575,5.139,576,5.139,655,3.089,2062,4.305,2063,4.766,2064,4.766,2065,4.206,2068,4.766,2069,3.457,2072,3.457,2073,5.874,2074,4.305,2075,4.881,2115,5.466,2116,5.466,2117,5.466]],["title/components/QuestionDetailComponent.html",[67,0.127,148,0.841]],["body/components/QuestionDetailComponent.html",[3,0.118,4,0.105,5,0.092,7,0.131,8,0.823,9,1.019,12,0.574,16,0.358,18,2.634,19,0.566,21,0.662,22,0.013,23,0.343,24,0.301,25,0.55,29,0.988,30,0.956,33,0.55,34,1.096,41,0.234,42,0.216,44,1.255,46,0.118,47,0.042,48,0.567,49,2.545,51,2.583,61,2.387,64,0.006,65,0.008,66,0.006,67,0.19,68,0.808,69,1.13,70,0.924,71,0.956,72,0.924,73,0.924,75,0.885,76,1.259,77,0.894,78,1.575,79,1.464,81,0.984,83,0.984,86,1.363,97,0.894,101,0.894,102,0.894,103,0.781,104,1.293,105,1.293,106,0.924,107,1.363,108,0.924,109,0.924,110,0.781,111,0.924,112,0.808,113,1.135,114,1.491,115,0.808,116,1.614,117,0.808,118,1.491,119,0.781,120,0.924,121,0.781,122,0.864,123,0.924,124,0.808,125,0.894,126,1.293,127,0.781,128,0.924,129,0.781,130,1.209,131,0.924,132,0.808,133,0.924,134,0.754,135,1.347,136,0.924,137,0.781,138,1.019,139,0.781,140,0.924,141,0.754,142,0.864,143,0.924,144,0.754,145,0.924,146,0.781,147,1.452,148,1.363,149,0.781,150,0.781,151,0.924,152,0.781,153,1.066,154,0.781,155,0.781,156,0.754,157,1.293,158,0.781,159,0.924,160,0.754,161,0.924,162,0.808,163,0.924,164,0.781,165,0.924,166,0.808,167,1.441,168,0.808,169,0.924,170,0.808,171,0.781,172,0.393,173,0.864,174,0.924,175,0.924,254,5.209,297,0.956,371,1.25,412,2.983,464,2.133,562,1.705,581,1.565,587,1.397,591,1.755,592,1.212,596,2.138,597,2.133,602,1.565,603,1.628,604,1.755,605,1.397,646,2.028,649,3.825,659,2.252,660,3.825,661,4.411,662,3.825,665,2.973,666,3.726,667,4.603,669,3.292,671,2.973,672,2.973,675,2.735,684,4.603,686,4.603,687,3.226,689,3.149,690,3.149,691,2.028,830,1.933,883,2.252,891,2.387,925,1.768,938,2.133,953,2.545,961,3.149,1375,2.545,1752,2.973,1888,3.292,1889,3.292,1890,3.292,1891,3.292,1892,3.292,2048,4.158,2065,3.542,2072,2.387,2080,5.209,2112,3.292,2118,4.603,2119,5.279,2120,4.603,2121,5.279,2122,3.775,2123,3.775,2124,3.775,2125,3.775,2126,4.777,2127,5.279,2128,5.279,2129,5.279,2130,6.592]],["title/components/QuestionEditComponent.html",[67,0.127,149,0.841]],["body/components/QuestionEditComponent.html",[3,0.094,4,0.083,5,0.073,7,0.104,8,0.696,9,1.143,12,0.485,16,0.284,17,1.465,18,2.37,19,0.643,21,0.643,22,0.013,23,0.34,24,0.444,25,0.534,27,1.154,29,1.851,30,1.79,32,1.194,33,0.6,34,1.195,41,0.243,42,0.171,44,0.996,46,0.094,47,0.033,48,0.45,51,2.613,62,0.578,64,0.005,65,0.007,66,0.005,67,0.167,68,0.641,69,0.955,70,0.733,71,0.758,72,0.733,73,0.733,75,0.749,76,1.104,77,0.709,78,1.548,79,1.438,81,0.833,83,0.833,86,1.224,97,1.057,98,1.031,100,0.929,101,1.057,102,1.057,103,0.619,104,1.093,105,1.093,106,0.733,107,1.224,108,0.733,109,0.733,110,0.619,111,0.733,112,0.641,113,0.996,114,1.307,115,0.641,116,1.449,117,0.641,118,1.307,119,0.619,120,0.733,121,0.619,122,0.685,123,0.733,124,0.641,125,0.709,126,1.093,127,0.619,128,0.733,129,0.619,130,1.022,131,0.733,132,0.641,133,0.733,134,0.598,135,1.182,136,0.733,137,0.619,138,0.862,139,0.619,140,0.733,141,0.598,142,0.685,143,0.733,144,0.598,145,0.733,146,0.619,147,1.41,148,0.619,149,1.224,150,0.619,151,0.733,152,0.619,153,1.143,154,0.619,155,0.619,156,0.598,157,1.093,158,0.619,159,0.733,160,0.598,161,0.733,162,0.641,163,0.733,164,0.619,165,0.733,166,0.641,167,1.264,168,0.641,169,0.733,170,0.641,171,0.619,172,0.311,173,0.685,174,0.733,175,0.733,209,1.345,255,5.743,291,0.898,295,1.851,311,2.523,371,1.499,412,3.345,460,1.715,464,1.692,477,1.534,516,3.235,562,1.495,577,3.345,581,2.213,587,1.108,589,1.241,590,1.194,591,2.105,592,1.434,596,0.868,602,1.241,603,1.291,604,1.485,605,1.653,614,2.523,615,3.887,618,1.692,619,3.017,621,2.613,623,3.017,629,1.534,630,1.692,631,1.692,639,2.523,640,2.73,641,3.752,642,1.692,644,2.019,646,1.715,647,2.523,650,2.399,651,1.692,652,1.893,653,1.893,654,1.403,666,3.345,689,2.663,690,2.663,692,2.169,693,4.205,694,3.516,697,2.358,703,2.358,705,2.358,706,2.358,707,2.358,708,2.358,709,2.358,710,2.358,713,2.824,714,1.893,925,2.092,1028,2.456,1040,1.291,1328,2.824,1909,1.893,2036,2.358,2065,3.18,2069,3.376,2072,1.893,2080,5.743,2081,4.655,2082,4.655,2083,5.161,2084,3.893,2085,4.655,2087,3.893,2091,2.611,2093,3.516,2099,2.611,2100,5.52,2101,2.611,2102,2.611,2103,2.611,2104,2.611,2105,4.655,2106,2.611,2107,2.611,2111,2.019,2113,3.893,2131,3.893,2132,5.919,2133,4.465,2134,2.994,2135,2.994,2136,3.893,2137,2.994,2138,2.994,2139,2.994,2140,2.994,2141,2.611,2142,2.994,2143,2.994,2144,2.994,2145,2.994,2146,2.611,2147,2.611,2148,2.994,2149,2.994,2150,2.994,2151,2.994,2152,2.994,2153,2.994,2154,2.994,2155,2.611,2156,2.994,2157,4.465]],["title/injectables/QuestionService.html",[0,0.813,2065,2.186]],["body/injectables/QuestionService.html",[0,1.128,2,1.659,3,0.13,4,0.116,5,0.101,7,0.145,9,1.43,12,0.614,13,3.364,16,0.394,19,0.629,21,0.823,22,0.013,23,0.375,24,0.433,25,0.684,27,1.358,31,1.433,33,0.684,36,2.579,39,0.952,41,0.276,42,0.238,45,1.29,46,0.13,47,0.046,48,0.625,55,3.032,62,1.488,64,0.006,65,0.009,66,0.006,80,1.659,100,1.751,113,0.776,172,0.432,212,1.724,291,2.271,297,1.875,326,1.794,327,2.877,335,2.481,341,3.19,353,3.19,364,2.13,365,3.519,367,2.644,371,1.517,374,3.19,375,3.515,395,3.19,396,3.858,417,2.13,418,2.13,419,2.235,420,2.351,421,1.949,422,1.724,425,1.949,426,2.13,427,3.519,428,2.235,429,2.235,430,2.235,431,3.001,435,3.19,436,2.351,437,2.036,438,1.949,439,2.351,440,3.19,441,2.351,442,2.351,443,2.351,444,2.351,445,2.891,446,3.032,447,2.351,448,2.891,449,3.218,450,2.351,451,2.351,452,2.351,453,2.235,454,2.351,455,3.19,456,2.351,457,2.351,458,2.235,459,2.351,460,1.598,461,2.351,462,2.351,463,2.351,469,3.001,470,4.059,473,2.351,474,3.367,475,3.367,495,2.805,510,2.63,738,2.481,740,4.319,741,3.014,742,3.014,1162,2.805,1550,3.276,1551,3.276,2065,3.032,2118,4.921,2120,4.921,2131,4.921,2136,4.921,2158,3.276,2159,6.87,2160,5.644,2161,5.644,2162,4.159,2163,4.159,2164,4.159,2165,4.159,2166,4.159,2167,4.159,2168,5.644,2169,4.159,2170,5.644,2171,4.159,2172,3.627]],["title/classes/Quiz.html",[47,0.045,153,0.658]],["body/classes/Quiz.html",[3,0.173,4,0.154,5,0.135,7,0.193,8,1.058,16,0.525,19,0.661,21,0.602,22,0.013,23,0.379,24,0.462,25,0.5,27,1.389,39,1.268,41,0.261,46,0.173,47,0.061,64,0.009,65,0.011,66,0.009,147,1.378,153,1.187,297,1.719,312,3.946,369,1.839,371,1.739,382,3.299,611,3.761,655,3.129,713,3.501,714,3.501,718,4.361,1052,3.501,1134,3.501,1292,4.952,1310,6.03,1909,3.501,2037,4.92,2074,4.361,2173,4.828,2174,6.79,2175,5.537,2176,5.537,2177,5.537,2178,5.537,2179,5.537,2180,4.828,2181,5.537,2182,5.537,2183,5.537,2184,5.537,2185,5.537,2186,5.537]],["title/interfaces/QuizChatModel.html",[1077,2.743,1104,1.22]],["body/interfaces/QuizChatModel.html",[3,0.169,4,0.15,5,0.131,7,0.188,8,1.041,22,0.013,23,0.375,24,0.476,25,0.772,27,1.425,41,0.256,46,0.169,64,0.008,65,0.01,66,0.008,172,0.811,325,2.591,369,2.222,371,1.796,382,3.407,611,3.885,746,4.407,830,3.885,835,4.797,1077,4.503,1104,1.616,1106,2.761,1308,4.525,1317,4.287,1513,5.974,2187,4.7,2188,6.614]],["title/classes/QuizConfig.html",[47,0.045,1292,2.743]],["body/classes/QuizConfig.html",[3,0.15,4,0.133,5,0.117,7,0.167,8,0.967,16,0.455,19,0.676,21,0.521,22,0.013,23,0.237,24,0.473,25,0.433,27,1.078,46,0.15,47,0.053,64,0.007,65,0.01,66,0.007,147,0.864,153,1.003,297,1.741,312,2.577,323,2.862,325,3.014,369,1.968,596,1.39,655,2.711,956,3.034,1292,4.183,1311,5.995,1312,5.995,1313,5.995,1314,4.183,1315,4.886,1316,3.778,1317,4.108,1319,5.409,1321,4.183,1322,4.183,1323,4.183,1324,4.183,1325,5.995,1326,5.995,1327,5.995,1328,3.034,1329,4.183,1330,4.183,1331,5.995,1332,5.995,1333,5.995,1334,5.995,1335,5.995,1336,5.415,1455,4.183,2037,4.495,2189,7.251,2190,4.183,2191,6.203,2192,4.797,2193,4.797,2194,4.797,2195,4.797,2196,4.797,2197,4.797,2198,4.797,2199,4.797,2200,4.797,2201,4.797,2202,4.797,2203,4.797,2204,4.797,2205,4.797,2206,4.797,2207,4.797,2208,4.797,2209,4.797,2210,4.797,2211,4.797,2212,4.183,2213,4.797,2214,4.797,2215,4.797,2216,4.797,2217,4.797,2218,4.797,2219,4.797,2220,4.797,2221,4.797,2222,4.797,2223,4.797,2224,4.797,2225,4.797,2226,4.797,2227,4.797,2228,4.797]],["title/components/QuizCreateComponent.html",[67,0.127,152,0.841]],["body/components/QuizCreateComponent.html",[3,0.11,4,0.098,5,0.086,7,0.122,8,0.783,9,1.131,12,0.546,16,0.333,17,1.722,18,2.508,19,0.573,21,0.546,22,0.013,23,0.358,24,0.386,25,0.454,29,1.315,30,1.272,33,0.454,34,0.904,41,0.259,42,0.201,44,1.17,46,0.11,47,0.039,48,0.528,64,0.005,65,0.008,66,0.005,67,0.183,68,0.753,69,1.075,70,0.861,71,0.891,72,0.861,73,0.861,75,0.842,76,1.211,77,0.833,78,1.567,79,1.457,81,0.937,83,0.937,86,1.321,97,1.387,98,1.73,100,1.091,101,1.387,102,1.387,103,0.728,104,1.23,105,1.23,106,0.861,107,1.321,108,0.861,109,0.861,110,0.728,111,0.861,112,0.753,113,1.092,114,1.434,115,0.753,116,1.564,117,0.753,118,1.434,119,0.728,120,0.861,121,0.728,122,0.805,123,0.861,124,0.753,125,0.833,126,1.23,127,0.728,128,0.861,129,0.728,130,1.15,131,0.861,132,0.753,133,0.861,134,0.703,135,1.297,136,0.861,137,0.728,138,0.97,139,0.728,140,0.861,141,0.703,142,0.805,143,0.861,144,0.703,145,0.861,146,0.728,147,1.055,148,0.728,149,0.728,150,0.728,151,0.861,152,1.321,153,1.304,154,0.728,155,0.728,156,0.703,157,1.23,158,0.728,159,0.861,160,0.703,161,0.861,162,0.753,163,0.861,164,0.728,165,0.861,166,0.753,167,1.387,168,0.753,169,0.861,170,0.753,171,0.728,172,0.366,173,0.805,174,0.861,175,0.861,209,1.58,249,5.24,295,2.082,306,2.996,312,1.89,460,2.699,477,1.802,562,1.641,581,1.458,587,1.302,589,1.458,590,1.403,591,2.405,592,1.613,596,1.019,602,1.458,603,1.517,604,1.67,605,1.859,607,2.549,608,4.614,609,3.956,611,3,614,2.839,615,4.087,618,1.988,619,3.311,621,2.458,623,3.311,625,4.38,626,2.771,628,2.771,629,1.802,630,1.988,631,1.988,639,1.988,640,2.526,641,3.611,642,1.988,646,1.929,647,3.971,650,2.699,651,1.988,652,2.225,653,2.225,654,1.648,849,2.549,1024,2.744,1028,2.281,1040,1.517,1042,1.802,1043,1.802,1044,1.722,1053,3.176,1054,3.176,1317,3.311,1318,3.068,2033,3.387,2065,3.885,2072,2.225,2093,2.771,2108,3.068,2111,2.372,2126,3.639,2229,4.087,2230,5.108,2231,5.108,2232,3.518,2233,3.518,2234,3.068,2235,2.549,2236,2.549,2237,3.518,2238,3.518,2239,3.518]],["title/interfaces/QuizData.html",[1104,1.22,2240,2.948]],["body/interfaces/QuizData.html",[3,0.143,4,0.127,5,0.111,7,0.159,8,0.936,9,0.881,22,0.013,23,0.366,24,0.443,27,1.454,32,1.821,39,1.537,41,0.292,42,0.261,46,0.188,47,0.051,48,0.686,64,0.007,65,0.009,66,0.007,67,0.188,75,0.765,76,1.242,78,0.851,79,0.793,81,0.851,83,0.851,86,0.944,88,2.232,91,1.754,97,1.689,98,1.573,100,1.863,101,1.689,102,1.689,153,1.085,156,0.912,247,3.079,277,2.396,301,3.596,325,1.63,339,1.893,345,3.079,369,1.931,371,1.689,382,2.051,558,2.939,559,2.234,562,1.279,611,3.795,646,1.754,746,3.832,747,3.079,1024,2.139,1028,2.144,1040,1.969,1042,2.338,1043,2.338,1044,2.234,1104,1.369,1106,2.338,1258,3.395,1308,2.724,1317,4.187,1677,2.58,1686,2.58,1688,2.58,1934,3.079,1935,2.724,1936,2.724,1939,2.724,1944,3.583,1950,3.583,1951,2.724,1953,3.583,1954,2.724,1955,2.724,1996,3.308,1999,3.583,2001,3.308,2002,3.308,2003,3.079,2004,3.079,2006,4.004,2007,3.583,2008,3.583,2009,3.583,2010,2.724,2011,2.724,2012,2.724,2069,4.686,2229,2.58,2235,5.369,2236,3.308,2240,4.352,2241,3.308,2242,3.596,2243,3.596,2244,3.981,2245,3.981,2246,5.237,2247,3.981,2248,3.596,2249,3.981,2250,3.981,2251,3.981,2252,3.981]],["title/components/QuizEditComponent.html",[67,0.127,155,0.841]],["body/components/QuizEditComponent.html",[3,0.097,4,0.087,5,0.076,7,0.108,8,0.717,9,1.055,12,0.5,16,0.295,17,1.525,18,2.405,19,0.634,21,0.594,22,0.013,23,0.372,24,0.43,25,0.494,27,1.119,29,1.873,30,1.811,33,0.545,34,1.087,41,0.232,42,0.178,44,1.036,46,0.097,47,0.035,48,0.468,51,2.675,64,0.005,65,0.007,66,0.005,67,0.171,68,0.667,69,0.984,70,0.763,71,0.789,72,0.763,73,0.763,75,0.771,76,1.131,77,0.738,78,1.553,79,1.443,81,0.858,83,0.858,86,1.248,97,1.089,101,1.089,102,1.089,103,0.645,104,1.126,105,1.126,106,0.763,107,1.248,108,0.763,109,0.763,110,0.645,111,0.763,112,0.667,113,1.019,114,1.339,115,0.667,116,1.478,117,0.667,118,1.339,119,0.645,120,0.763,121,0.645,122,0.714,123,0.763,124,0.667,125,0.738,126,1.126,127,0.645,128,0.763,129,0.645,130,1.053,131,0.763,132,0.667,133,0.763,134,0.623,135,1.21,136,0.763,137,0.645,138,0.888,139,0.645,140,0.763,141,0.623,142,0.714,143,0.763,144,0.623,145,0.763,146,0.645,147,0.984,148,0.645,149,0.645,150,0.645,151,0.763,152,0.645,153,1.282,154,0.645,155,1.248,156,0.623,157,1.126,158,0.645,159,0.763,160,0.623,161,0.763,162,0.667,163,0.763,164,0.645,165,0.763,166,0.667,167,1.294,168,0.667,169,0.763,170,0.667,171,0.645,172,0.324,173,0.714,174,0.763,175,0.763,209,1.4,250,5.672,295,1.907,311,2.6,312,2.471,369,1.246,371,1.524,382,2.456,412,2.6,460,2.588,464,1.761,477,1.596,562,1.531,581,1.292,587,1.154,589,1.292,590,1.243,591,2.141,592,1.477,596,1.584,602,1.292,603,1.344,604,1.53,605,1.703,611,3.451,614,2.6,615,3.938,618,1.761,619,3.09,621,2.675,623,3.09,629,1.596,630,1.761,631,1.761,634,2.455,639,1.761,640,2.905,641,3.807,642,1.761,644,2.102,647,3.807,650,2.471,651,1.761,652,1.971,653,1.971,654,1.46,666,3.411,689,2.744,692,2.258,693,4.306,694,3.623,697,2.455,703,2.455,704,2.718,705,2.455,706,2.455,707,2.455,708,2.455,709,2.455,710,2.455,713,2.909,714,1.971,718,2.455,723,4.011,1024,2.561,1028,2.155,1040,1.344,1042,1.596,1043,1.596,1044,1.525,1052,1.971,1053,2.909,1054,2.909,1317,3.411,1605,4.011,1909,1.971,2069,3.817,2111,2.102,2126,3.333,2141,4.011,2146,2.718,2147,2.718,2155,2.718,2180,4.011,2212,2.718,2229,4.424,2230,4.767,2231,4.767,2234,2.718,2235,3.333,2236,2.258,2253,4.011,2254,6.036,2255,4.011,2256,3.117,2257,3.117,2258,3.117,2259,3.117,2260,2.718,2261,3.117,2262,4.6,2263,3.117,2264,3.117,2265,3.117,2266,3.117,2267,3.117]],["title/components/QuizListComponent.html",[67,0.127,156,0.813]],["body/components/QuizListComponent.html",[3,0.093,4,0.083,5,0.073,7,0.104,8,0.693,9,0.575,12,0.484,16,0.282,19,0.634,21,0.484,22,0.013,23,0.357,24,0.426,25,0.402,27,1.254,29,1.394,30,1.348,32,1.775,33,0.533,34,1.063,39,1.219,41,0.254,42,0.17,46,0.139,47,0.033,48,0.448,64,0.005,65,0.007,66,0.005,67,0.167,68,0.638,69,0.952,70,0.73,71,0.755,72,0.73,73,0.73,75,0.746,76,1.101,77,0.706,78,1.548,79,1.438,81,0.83,83,0.83,86,1.221,88,2.284,91,1.145,97,1.398,98,1.027,100,1.38,101,1.398,102,1.398,103,0.616,104,1.089,105,1.089,106,0.73,107,1.221,108,0.73,109,0.73,110,0.616,111,0.73,112,0.638,113,0.993,114,1.304,115,0.638,116,1.446,117,0.638,118,1.304,119,0.616,120,0.73,121,0.616,122,0.682,123,0.73,124,0.638,125,0.706,126,1.089,127,0.616,128,0.73,129,0.616,130,1.019,131,0.73,132,0.638,133,0.73,134,0.596,135,1.178,136,0.73,137,0.616,138,0.859,139,0.616,140,0.73,141,0.596,142,1.219,143,0.73,144,0.596,145,0.73,146,0.616,147,0.959,148,0.616,149,0.616,150,0.616,151,0.73,152,0.616,153,1.206,154,0.616,155,0.616,156,1.18,157,1.089,158,0.616,159,0.73,160,0.596,161,0.73,162,0.638,163,0.73,164,0.616,165,0.73,166,0.638,167,1.261,168,0.638,169,0.73,170,0.638,171,0.616,172,0.31,173,0.682,174,0.73,175,0.73,247,5.276,277,2.355,295,1.235,301,4.193,308,2.279,325,1.588,339,2.207,345,3.982,369,1.442,371,1.261,382,2.392,558,2.89,559,2.606,560,1.885,562,1.246,566,1.778,577,2.515,581,1.845,582,1.601,583,1.526,584,3.176,585,2.159,586,2.01,587,1.103,588,1.601,589,1.235,590,1.189,591,2.204,592,1.896,593,1.885,594,1.778,595,2.347,596,1.711,597,1.684,598,2.654,599,1.885,600,2.347,601,2.347,602,2.619,603,2.547,604,1.77,605,1.647,611,3.236,621,1.458,646,1.709,687,2.177,746,1.601,747,3.59,880,1.778,916,1.526,925,1.396,938,1.684,939,1.339,1024,2.494,1028,2.108,1040,1.285,1042,1.526,1043,1.526,1044,1.458,1053,2.814,1054,2.814,1104,0.893,1258,3.337,1308,3.176,1317,3.571,1665,2.159,1677,1.684,1686,1.684,1688,1.684,1905,3.224,1934,3.59,1935,3.176,1936,3.176,1937,3.504,1939,2.654,1941,2.347,1944,3.176,1950,3.176,1951,2.654,1953,3.176,1954,2.654,1955,1.778,1996,2.159,1999,2.654,2001,2.159,2002,2.159,2003,2.01,2004,2.01,2006,3.176,2007,2.654,2008,2.654,2009,2.654,2010,1.778,2011,1.778,2012,1.778,2023,3.504,2030,2.347,2031,2.347,2032,2.347,2033,2.01,2069,3.996,2114,2.599,2229,4.422,2235,4.578,2236,2.159,2240,2.159,2241,2.159,2242,3.504,2243,4.193,2244,2.599,2245,2.599,2246,3.88,2247,2.599,2248,4.651,2249,2.599,2250,2.599,2251,2.599,2252,2.599,2268,4.45,2269,2.98,2270,2.98,2271,2.98,2272,2.98,2273,2.98,2274,2.98,2275,2.98,2276,2.98,2277,2.98,2278,2.98,2279,2.98,2280,2.98,2281,2.98,2282,4.45,2283,4.45,2284,4.45,2285,4.45,2286,4.45,2287,4.45]],["title/interfaces/QuizResultModel.html",[1080,2.743,1104,1.22]],["body/interfaces/QuizResultModel.html",[3,0.173,4,0.153,5,0.134,7,0.192,8,1.056,22,0.013,23,0.378,24,0.476,25,0.772,27,1.431,41,0.26,46,0.173,64,0.009,65,0.011,66,0.009,172,0.795,312,4.109,369,1.986,371,1.811,611,3.917,746,4.391,830,3.917,835,4.837,1080,4.57,1104,1.655,1106,2.828,1496,6.669,1513,6.024,2188,6.669,2288,4.814,2289,5.521,2290,5.521]],["title/injectables/QuizService.html",[0,0.813,1028,1.452]],["body/injectables/QuizService.html",[0,1.372,2,2.25,3,0.176,4,0.157,5,0.137,7,0.196,12,0.747,16,0.535,19,0.604,21,0.747,22,0.013,23,0.391,24,0.392,25,0.62,27,1.287,33,0.62,36,1.812,41,0.296,42,0.322,45,1.75,46,0.176,47,0.062,48,0.847,62,1.326,64,0.009,65,0.011,66,0.009,212,2.339,327,2.534,364,2.889,365,3.947,367,3.217,371,1.753,418,2.889,421,2.643,422,2.339,473,3.188,1028,2.452,1180,4.919,2291,4.919,2292,6.719,2293,5.641,2294,6.868,2295,5.641,2296,5.641,2297,4.919,2298,4.919,2299,4.919,2300,4.443,2301,4.919,2302,4.919,2303,4.919,2304,4.919]],["title/injectables/QuizService-1.html",[0,0.678,413,1.256,1028,1.212]],["body/injectables/QuizService-1.html",[0,1.044,2,1.483,3,0.116,4,0.103,5,0.091,7,0.129,9,1.381,12,0.568,13,3.232,16,0.352,19,0.643,21,0.815,22,0.013,23,0.386,24,0.428,25,0.677,27,1.325,31,1.28,33,0.705,36,2.62,39,0.851,41,0.265,42,0.212,45,1.153,46,0.116,47,0.041,48,0.558,55,2.806,62,1.522,64,0.006,65,0.008,66,0.006,80,1.483,100,1.62,113,0.693,172,0.386,212,1.541,291,2.341,297,1.811,326,1.603,327,3.213,335,2.217,341,2.951,353,2.951,364,1.904,365,3.354,367,2.446,369,1.635,371,1.74,374,2.951,375,3.376,395,2.951,396,3.706,417,1.904,418,1.904,419,1.997,420,2.101,421,1.741,422,1.541,425,1.741,426,1.904,427,3.354,428,1.997,429,1.997,430,1.997,431,2.828,433,2.951,434,2.351,435,2.951,436,2.101,437,1.819,438,1.741,439,2.101,440,2.951,441,2.101,442,2.101,443,2.101,444,2.101,445,2.675,446,2.806,447,2.101,448,2.675,449,3.068,450,2.101,451,2.101,452,2.101,453,1.997,454,2.101,455,2.951,456,2.101,457,2.101,458,1.997,459,2.101,460,1.428,461,2.101,462,2.101,463,2.101,469,2.828,470,4.239,473,3.701,474,4.115,475,4.115,495,2.506,510,2.351,738,2.217,740,4.071,741,2.693,742,2.693,1028,1.864,1162,2.506,1373,5.709,1550,2.928,1551,2.928,2248,4.113,2253,4.553,2255,4.553,2292,5.709,2297,3.241,2298,3.241,2299,3.241,2300,2.928,2301,3.241,2302,3.241,2303,3.241,2304,3.241,2305,2.928,2306,5.222,2307,6.548,2308,6.548,2309,5.222,2310,5.222,2311,3.717,2312,4.553,2313,3.717,2314,3.717,2315,3.717,2316,3.717,2317,3.717,2318,3.717,2319,5.222,2320,3.717,2321,3.717,2322,3.717,2323,5.222,2324,3.717,2325,5.222,2326,3.717,2327,3.241,2328,3.241,2329,3.717,2330,3.717]],["title/components/RatingComponent.html",[67,0.127,158,0.841]],["body/components/RatingComponent.html",[3,0.119,4,0.106,5,0.093,7,0.267,12,0.577,16,0.579,19,0.588,21,0.664,22,0.013,23,0.344,24,0.397,25,0.552,29,0.995,30,0.962,33,0.597,34,0.684,39,0.87,41,0.146,42,0.217,46,0.119,47,0.042,52,3.843,62,1.479,64,0.006,65,0.008,66,0.006,67,0.191,68,0.813,69,1.135,70,0.931,71,0.962,72,0.931,73,0.931,77,0.9,78,1.576,79,1.461,81,0.989,83,0.989,103,0.786,104,1.299,105,1.299,106,0.931,107,1.367,108,0.931,109,0.931,110,0.786,111,0.931,112,0.813,113,1.139,114,1.496,115,0.813,116,1.619,117,0.813,118,1.496,119,0.786,120,0.931,121,0.786,122,0.87,123,0.931,124,0.813,125,0.9,126,1.299,127,0.786,128,0.931,129,0.786,130,1.214,131,0.931,132,0.813,133,0.931,134,0.76,135,1.352,136,0.931,137,0.786,138,1.024,139,0.786,140,0.931,141,0.76,142,0.87,143,0.931,144,0.76,145,0.931,146,0.786,147,1.1,148,0.786,149,0.786,150,0.786,151,0.931,152,0.786,153,1.069,154,0.786,155,0.786,156,0.76,157,1.299,158,1.367,159,0.931,160,0.76,161,0.931,162,0.813,163,0.931,164,0.786,165,0.931,166,0.813,167,1.447,168,0.813,169,0.931,170,0.813,171,0.786,172,0.552,173,0.87,174,0.931,175,0.931,243,6.112,325,1.894,369,2.124,413,1.964,844,3.843,928,3.453,1348,4.812,1349,2.998,1387,4.178,1509,2.563,1632,3.577,1633,4.178,1635,3.314,1637,3.314,1873,3.737,1886,4.625,1958,2.267,1961,2.85,1963,2.998,1964,2.998,1966,2.998,2331,2.993,2332,6.11,2333,5.304,2334,6.11,2335,5.304,2336,5.304,2337,5.304,2338,6.11,2339,5.304,2340,3.801,2341,6.612,2342,5.304,2343,3.801,2344,5.304,2345,3.801,2346,5.304,2347,3.801,2348,5.304,2349,3.801,2350,4.625,2351,3.314,2352,3.314,2353,3.314,2354,3.314,2355,3.314,2356,3.314,2357,3.314,2358,3.314,2359,3.801,2360,3.801,2361,6.612,2362,3.801,2363,6.612,2364,3.801,2365,5.304,2366,3.801,2367,3.801,2368,3.314,2369,3.801,2370,3.801,2371,3.801,2372,3.801,2373,3.801,2374,5.304,2375,6.955,2376,3.801,2377,3.801,2378,3.801,2379,3.801,2380,3.801,2381,3.801,2382,3.801,2383,3.801,2384,3.801]],["title/components/ReportsComponent.html",[67,0.127,160,0.813]],["body/components/ReportsComponent.html",[3,0.085,4,0.115,5,0.066,7,0.095,8,0.647,9,0.802,12,0.451,16,0.394,19,0.633,21,0.548,22,0.013,23,0.37,24,0.417,25,0.455,27,1.339,29,1.676,30,1.621,33,0.578,34,1.093,39,1.61,41,0.264,42,0.155,46,0.13,47,0.03,54,2.346,62,0.802,64,0.004,65,0.006,66,0.004,67,0.158,68,0.582,69,0.888,70,0.666,71,0.689,72,0.666,73,0.666,75,0.696,76,1.042,77,0.644,78,1.536,79,1.426,81,0.774,83,0.774,86,1.166,97,1.192,98,0.937,101,1.192,102,1.192,103,0.562,104,1.017,105,1.017,106,0.666,107,1.256,108,0.666,109,0.666,110,0.562,111,0.666,112,0.582,113,0.939,114,1.233,115,0.582,116,1.38,117,0.582,118,1.233,119,0.562,120,0.666,121,0.562,122,0.623,123,0.666,124,0.582,125,0.644,126,1.017,127,0.562,128,0.666,129,0.562,130,0.951,131,0.666,132,0.582,133,0.666,134,0.543,135,1.115,136,0.666,137,0.562,138,0.802,139,0.562,140,0.666,141,0.543,142,0.623,143,0.666,144,0.543,145,0.666,146,0.562,147,1.093,148,0.562,149,0.562,150,0.562,151,0.666,152,0.562,153,1.035,154,0.562,155,0.562,156,0.543,157,1.017,158,0.562,159,0.666,160,1.126,161,0.666,162,0.582,163,0.666,164,0.562,165,0.666,166,0.582,167,1.192,168,0.582,169,0.666,170,0.582,171,0.562,172,0.432,173,0.623,174,0.666,175,0.666,209,1.221,277,2.248,291,1.51,297,1.275,309,2.8,325,0.971,339,2.653,369,1.364,371,1.515,375,2.032,382,2.262,413,2.087,558,2.465,559,2.465,591,1.675,592,1.333,596,0.788,602,1.127,603,1.173,604,0.904,605,1.007,621,1.331,629,1.393,687,3.359,880,1.622,916,2.127,938,1.537,939,1.221,956,2.626,1016,1.331,1024,2.359,1028,2.285,1040,1.173,1041,1.72,1042,1.393,1043,1.393,1044,1.331,1052,3.565,1053,2.626,1054,2.626,1104,0.815,1147,2.8,1258,3.186,1328,2.626,1375,2.8,1491,3.27,1509,1.833,1665,1.97,1677,1.537,1686,1.537,1688,1.537,1698,2.142,1749,1.622,1873,1.537,1905,3.008,1935,3.004,1936,3.004,1937,3.27,1939,2.477,1941,2.142,1944,3.004,1950,3.004,1951,2.477,1953,3.004,1954,2.477,1955,1.622,1956,2.127,1957,1.72,1958,1.622,1959,1.72,1960,1.72,1961,1.461,1962,1.72,1963,1.537,1964,1.537,1965,1.72,1966,1.537,1967,1.72,1968,1.72,1969,1.72,1970,1.72,1971,1.72,1972,1.72,1973,1.72,1974,1.72,1975,1.72,1976,1.622,1977,1.72,1978,1.72,1979,1.72,1980,1.72,1981,1.72,1982,1.72,1983,1.72,1984,1.72,1985,1.72,1986,1.72,1987,1.72,1988,1.72,1989,1.72,1990,1.72,1991,1.72,1992,1.72,1993,1.72,1994,1.72,1995,1.72,1997,1.97,1998,1.97,1999,2.477,2000,1.97,2006,2.477,2007,1.622,2008,1.622,2009,1.622,2010,1.622,2011,1.622,2012,1.622,2013,1.72,2014,1.833,2015,3.008,2016,3.008,2017,1.97,2018,1.97,2019,1.97,2020,1.97,2021,1.97,2022,1.97,2023,3.27,2024,3.62,2029,2.371,2030,2.142,2031,2.142,2032,2.142,2033,1.833,2034,2.371,2385,1.833,2386,4.391,2387,3.62,2388,4.391,2389,4.391,2390,4.391,2391,4.391,2392,4.152,2393,4.44,2394,4.44,2395,2.719,2396,4.489,2397,4.152,2398,2.719,2399,4.391,2400,2.719,2401,2.719,2402,2.719,2403,2.719,2404,2.719,2405,2.719,2406,2.719,2407,2.719,2408,3.62,2409,2.719,2410,4.915,2411,4.915,2412,2.719,2413,2.719,2414,2.719,2415,2.719,2416,3.62,2417,3.62,2418,2.719,2419,2.719,2420,2.371,2421,5.294,2422,2.371,2423,2.371,2424,2.371,2425,3.62,2426,3.62,2427,2.371,2428,3.27,2429,2.371,2430,2.371,2431,2.371,2432,2.371,2433,2.371,2434,2.371,2435,2.371,2436,2.371,2437,2.371,2438,2.371,2439,3.62,2440,3.62,2441,3.62,2442,3.62,2443,3.62,2444,2.371,2445,2.371,2446,2.371,2447,2.371,2448,2.371,2449,2.371,2450,2.371,2451,4.152,2452,4.152,2453,4.152,2454,4.152,2455,4.152]],["title/injectables/ReportsService.html",[0,0.813,2396,2.743]],["body/injectables/ReportsService.html",[0,1.171,2,1.755,3,0.138,4,0.122,5,0.107,7,0.153,9,1.453,12,0.637,13,3.293,16,0.417,19,0.614,21,0.818,22,0.013,23,0.372,24,0.401,25,0.68,31,1.516,33,0.661,36,2.506,39,1.007,41,0.281,42,0.251,45,1.365,46,0.138,47,0.049,48,0.661,55,2.364,62,1.453,64,0.007,65,0.009,66,0.007,80,1.755,100,1.818,113,0.82,172,0.458,212,1.824,291,2.34,308,2.254,309,3.952,326,1.898,327,2.96,341,3.313,344,5.111,353,3.313,364,2.254,365,3.6,367,2.746,374,3.313,375,3.582,380,4.616,382,3.585,395,3.313,396,3.776,417,2.254,418,2.254,419,2.364,420,2.487,421,2.061,422,1.824,425,2.061,426,2.254,427,2.254,428,2.364,429,2.364,430,2.364,431,3.293,433,3.725,434,2.783,435,3.313,436,2.487,437,2.153,438,2.061,439,2.487,440,3.313,441,2.487,442,2.487,443,2.487,444,2.487,445,3.002,446,3.149,447,2.487,448,3.002,449,3.293,450,2.487,451,2.487,452,2.487,453,2.364,454,2.487,455,2.487,456,2.487,457,2.487,458,2.364,459,2.487,460,1.69,461,2.487,462,2.487,463,2.487,470,3.725,473,3.725,474,3.932,475,3.932,477,2.254,478,2.967,687,3.439,738,2.625,1548,3.465,2393,4.616,2394,4.616,2396,3.952,2456,3.465,2457,4.4,2458,4.4,2459,4.4,2460,5.861,2461,4.4,2462,5.861,2463,4.4,2464,4.4]],["title/guards/RoleGuard.html",[284,2.948,287,2.948]],["body/guards/RoleGuard.html",[0,1.311,3,0.164,4,0.146,5,0.128,7,0.182,9,1.011,12,0.713,16,0.496,17,2.563,18,2.816,19,0.535,21,0.713,22,0.013,23,0.324,24,0.375,25,0.592,32,2.617,33,0.473,36,2.3,41,0.288,42,0.299,44,1.742,45,1.625,46,0.164,47,0.058,48,0.786,51,2.563,62,1.383,64,0.008,65,0.01,66,0.008,75,0.878,80,2.089,88,2.661,91,2.012,92,3.913,277,2.089,287,4.753,291,2.147,296,6.089,297,1.326,302,6.546,303,3.532,315,4.125,318,4.567,319,6.546,320,5.641,321,6.546,323,3.913,324,5.72,325,2.342,326,2.259,539,4.423,1310,4.125,2465,4.567,2466,5.238,2467,5.238,2468,5.238,2469,5.238,2470,5.238,2471,5.238,2472,4.567,2473,5.238,2474,5.238,2475,5.238,2476,5.238,2477,5.238,2478,5.238,2479,5.238,2480,5.238]],["title/pipes/SafeUrlPipe.html",[189,2.743,469,1.906]],["body/pipes/SafeUrlPipe.html",[3,0.19,4,0.169,5,0.148,12,0.659,19,0.495,21,0.659,22,0.013,23,0.378,24,0.346,25,0.548,33,0.548,41,0.275,42,0.346,46,0.19,47,0.067,48,0.911,62,1.171,64,0.009,65,0.011,66,0.009,75,1.017,77,1.436,189,4.836,202,4.394,203,4.089,327,2.724,469,3.36,973,4.394,2481,6.065,2482,6.254,2483,5.288,2484,7.173,2485,7.173,2486,7.638,2487,6.065,2488,7.173,2489,7.173,2490,6.065,2491,6.065]],["title/modules/SharedModule.html",[176,2.299,191,2.743]],["body/modules/SharedModule.html",[3,0.186,4,0.165,5,0.145,22,0.013,41,0.291,42,0.34,46,0.186,47,0.066,64,0.009,65,0.011,66,0.009,103,1.231,176,3.364,178,3.551,179,3.765,180,4.783,181,4.014,182,4.014,183,5.11,191,5.542,195,5.14,196,4.313,197,3.364,200,5.14,204,5.14,1647,5.692,1649,6.185,1650,4.688,2492,5.191,2493,5.191,2494,5.191,2495,5.953,2496,5.953]],["title/components/SidebarComponent.html",[67,0.127,162,0.87]],["body/components/SidebarComponent.html",[3,0.141,4,0.126,5,0.11,7,0.157,12,0.648,16,0.633,19,0.487,22,0.013,23,0.295,24,0.258,31,2.055,33,0.408,34,0.813,41,0.173,42,0.258,46,0.141,47,0.05,64,0.007,65,0.009,66,0.007,67,0.209,68,0.967,69,1.276,70,1.106,71,1.144,72,1.106,73,1.106,75,1,76,1.381,77,1.07,78,1.592,79,1.481,81,1.112,83,1.112,86,1.469,103,0.934,104,1.461,105,1.461,106,1.106,107,1.469,108,1.106,109,1.106,110,0.934,111,1.106,112,0.967,113,1.245,114,1.635,115,0.967,116,1.739,117,0.967,118,1.635,119,0.934,120,1.106,121,0.934,122,1.034,123,1.106,124,0.967,125,1.07,126,1.461,127,0.934,128,1.106,129,0.934,130,1.366,131,1.106,132,0.967,133,1.106,134,0.903,135,1.478,136,1.106,137,0.934,138,1.152,139,0.934,140,1.106,141,0.903,142,1.034,143,1.106,144,0.903,145,1.106,146,0.934,147,1.202,148,0.934,149,0.934,150,0.934,151,1.106,152,0.934,153,1.148,154,0.934,155,0.934,156,0.903,157,1.461,158,0.934,159,1.106,160,0.903,161,1.106,162,1.52,163,1.106,164,0.934,165,1.106,166,0.967,167,1.581,168,0.967,169,1.106,170,0.967,171,0.934,172,0.47,173,1.034,174,1.106,175,1.106,583,2.314,588,2.427,592,1.451,596,1.728,604,1.502,646,1.735,883,3.558,904,3.055,924,2.857,928,3.371,949,3.274,952,3.046,984,3.274,1337,3.939,1700,3.939,1729,5.201,2497,3.939,2498,5.965,2499,6.678,2500,5.965,2501,4.518,2502,4.518,2503,4.518,2504,4.518,2505,4.518,2506,4.518,2507,4.518]],["title/components/SignupComponent.html",[67,0.127,164,0.841]],["body/components/SignupComponent.html",[3,0.115,4,0.102,5,0.089,7,0.128,8,0.806,9,0.998,12,0.562,16,0.347,17,1.793,18,2.542,19,0.61,21,0.562,22,0.013,23,0.376,24,0.418,25,0.467,27,1.131,29,1.704,30,1.648,33,0.467,34,0.931,41,0.25,42,0.209,44,1.218,46,0.115,47,0.041,48,0.55,64,0.006,65,0.008,66,0.006,67,0.187,68,0.784,69,1.106,70,0.897,71,0.928,72,0.897,73,0.897,75,0.867,76,1.239,77,0.868,78,1.572,79,1.461,81,0.964,83,0.964,86,1.346,94,2.53,97,0.868,101,0.868,102,0.868,103,0.758,104,1.266,105,1.266,106,0.897,107,1.346,108,0.897,109,0.897,110,0.758,111,0.897,112,0.784,113,1.117,114,1.467,115,0.784,116,1.593,117,0.784,118,1.467,119,0.758,120,0.897,121,0.758,122,0.839,123,0.897,124,0.784,125,0.868,126,1.266,127,0.758,128,0.897,129,0.758,130,1.184,131,0.897,132,0.784,133,0.897,134,0.732,135,1.326,136,0.897,137,0.758,138,0.998,139,0.758,140,0.897,141,0.732,142,0.839,143,0.897,144,0.732,145,0.897,146,0.758,147,1.078,148,0.758,149,0.758,150,0.758,151,0.897,152,0.758,153,1.052,154,0.758,155,0.758,156,0.732,157,1.266,158,0.758,159,0.897,160,0.732,161,0.897,162,0.784,163,0.897,164,1.346,165,0.897,166,0.784,167,1.418,168,0.784,169,0.897,170,0.784,171,0.758,172,0.381,173,0.839,174,0.897,175,0.897,209,1.646,295,2.483,307,6.209,460,2.87,520,4.627,522,3.788,562,1.678,581,2.143,587,1.914,589,1.519,590,1.462,591,2.368,592,1.66,594,2.186,604,1.218,605,1.357,614,2.922,615,4.136,618,2.071,619,3.386,621,2.53,623,3.386,629,1.877,630,2.071,631,2.071,639,2.071,640,2.806,641,3.677,642,2.071,647,4.223,650,2.778,651,2.071,678,3.195,691,1.969,893,2.317,895,2.071,904,2.648,939,1.646,1430,3.195,1578,3.195,1579,3.195,1615,2.886,1617,3.746,1618,3.195,1619,3.195,1620,2.886,2260,3.195,2508,3.195,2509,5.99,2510,5.17,2511,5.983,2512,5.99,2513,4.715,2514,5.17,2515,3.664,2516,3.664,2517,3.664,2518,3.664,2519,3.664,2520,3.664,2521,3.664,2522,3.664,2523,3.664,2524,3.664,2525,3.664,2526,3.664,2527,5.17,2528,5.17,2529,5.17,2530,5.17]],["title/components/StudentAddComponent.html",[67,0.127,166,0.87]],["body/components/StudentAddComponent.html",[3,0.145,4,0.129,5,0.113,7,0.162,12,0.661,16,0.642,19,0.496,22,0.013,23,0.3,33,0.42,34,0.837,41,0.178,42,0.265,46,0.145,47,0.051,64,0.007,65,0.009,66,0.007,67,0.212,68,0.994,69,1.3,70,1.138,71,1.177,72,1.138,73,1.138,75,1.019,76,1.4,77,1.1,78,1.595,79,1.484,81,1.133,83,1.133,86,1.485,103,0.961,104,1.488,105,1.488,106,1.138,107,1.485,108,1.138,109,1.138,110,0.961,111,1.138,112,0.994,113,1.263,114,1.658,115,0.994,116,1.758,117,0.994,118,1.658,119,0.961,120,1.138,121,0.961,122,1.064,123,1.138,124,0.994,125,1.1,126,1.488,127,0.961,128,1.138,129,0.961,130,1.391,131,1.138,132,0.994,133,1.138,134,0.929,135,1.499,136,1.138,137,0.961,138,1.173,139,0.961,140,1.138,141,0.929,142,1.064,143,1.138,144,0.929,145,1.138,146,0.961,147,1.219,148,0.961,149,0.961,150,0.961,151,1.138,152,0.961,153,1.161,154,0.961,155,0.961,156,0.929,157,1.488,158,0.961,159,1.138,160,0.929,161,1.138,162,0.994,163,1.138,164,0.961,165,1.138,166,1.537,167,1.935,168,0.994,169,1.138,170,0.994,171,0.961,172,0.483,173,1.064,174,1.138,175,1.138,577,4.058,1169,3.661,1170,5.904,1171,5.299,1172,4.053,1173,4.053,1174,4.403,2531,5.904]],["title/components/StudentDetailsComponent.html",[67,0.127,168,0.87]],["body/components/StudentDetailsComponent.html",[3,0.145,4,0.129,5,0.113,7,0.162,12,0.661,16,0.642,19,0.496,22,0.013,23,0.3,33,0.42,34,0.837,41,0.178,42,0.265,46,0.145,47,0.051,64,0.007,65,0.009,66,0.007,67,0.212,68,0.994,69,1.3,70,1.138,71,1.177,72,1.138,73,1.138,75,1.019,76,1.4,77,1.1,78,1.595,79,1.484,81,1.133,83,1.133,86,1.485,103,0.961,104,1.488,105,1.488,106,1.138,107,1.485,108,1.138,109,1.138,110,0.961,111,1.138,112,0.994,113,1.263,114,1.658,115,0.994,116,1.758,117,0.994,118,1.658,119,0.961,120,1.138,121,0.961,122,1.064,123,1.138,124,0.994,125,1.1,126,1.488,127,0.961,128,1.138,129,0.961,130,1.391,131,1.138,132,0.994,133,1.138,134,0.929,135,1.499,136,1.138,137,0.961,138,1.173,139,0.961,140,1.138,141,0.929,142,1.064,143,1.138,144,0.929,145,1.138,146,0.961,147,1.219,148,0.961,149,0.961,150,0.961,151,1.138,152,0.961,153,1.161,154,0.961,155,0.961,156,0.929,157,1.488,158,0.961,159,1.138,160,0.929,161,1.138,162,0.994,163,1.138,164,0.961,165,1.138,166,0.994,167,1.935,168,1.537,169,1.138,170,0.994,171,0.961,172,0.483,173,1.064,174,1.138,175,1.138,311,4.058,1174,4.403,2532,5.904,2533,4.053,2534,6.771,2535,6.077,2536,4.648,2537,4.648]],["title/components/StudentListComponent.html",[67,0.127,170,0.87]],["body/components/StudentListComponent.html",[3,0.145,4,0.129,5,0.113,7,0.162,12,0.661,16,0.642,19,0.496,22,0.013,23,0.3,33,0.42,34,0.837,41,0.178,42,0.265,46,0.145,47,0.051,64,0.007,65,0.009,66,0.007,67,0.212,68,0.994,69,1.3,70,1.138,71,1.177,72,1.138,73,1.138,75,1.019,76,1.4,77,1.1,78,1.595,79,1.484,81,1.133,83,1.133,86,1.485,103,0.961,104,1.488,105,1.488,106,1.138,107,1.485,108,1.138,109,1.138,110,0.961,111,1.138,112,0.994,113,1.263,114,1.658,115,0.994,116,1.758,117,0.994,118,1.658,119,0.961,120,1.138,121,0.961,122,1.064,123,1.138,124,0.994,125,1.1,126,1.488,127,0.961,128,1.138,129,0.961,130,1.391,131,1.138,132,0.994,133,1.138,134,0.929,135,1.499,136,1.138,137,0.961,138,1.173,139,0.961,140,1.138,141,0.929,142,1.064,143,1.138,144,0.929,145,1.138,146,0.961,147,1.219,148,0.961,149,0.961,150,0.961,151,1.138,152,0.961,153,1.161,154,0.961,155,0.961,156,0.929,157,1.488,158,0.961,159,1.138,160,0.929,161,1.138,162,0.994,163,1.138,164,0.961,165,1.138,166,0.994,167,1.935,168,0.994,169,1.138,170,1.537,171,0.961,172,0.483,173,1.064,174,1.138,175,1.138,646,2.758,1174,4.403,2241,3.368,2242,4.786,2243,5.333,2538,5.904,2539,4.648,2540,4.648]],["title/injectables/StudentService.html",[0,0.813,2541,3.204]],["body/injectables/StudentService.html",[0,1.303,2,2.07,3,0.162,4,0.144,5,0.126,7,0.278,12,0.709,16,0.676,19,0.642,21,0.775,22,0.013,23,0.353,24,0.372,25,0.644,27,1.133,31,2.577,33,0.696,41,0.199,42,0.296,46,0.162,47,0.057,62,1.002,64,0.008,65,0.01,66,0.008,80,2.07,107,1.073,297,1.952,326,2.238,369,2.131,448,3.832,544,4.086,562,1.453,596,1.503,640,2.238,646,2.74,1208,5.686,2541,5.136,2542,4.524,2543,6.521,2544,6.521,2545,7.132,2546,7.483,2547,6.521,2548,5.189,2549,5.189,2550,5.189,2551,6.521,2552,5.189,2553,5.189,2554,5.189,2555,5.189,2556,5.189,2557,5.189,2558,7.132,2559,5.189,2560,5.189,2561,5.189,2562,5.189,2563,7.483,2564,6.521,2565,6.521,2566,7.132,2567,5.189,2568,5.189,2569,5.189]],["title/injectables/ThemeService.html",[0,0.813,2570,3.204]],["body/injectables/ThemeService.html",[0,1.423,2,2.389,3,0.187,4,0.166,5,0.146,7,0.208,8,1.11,12,0.774,19,0.581,22,0.013,24,0.342,29,1.568,30,1.517,32,3.136,33,0.541,34,1.282,41,0.23,42,0.342,46,0.187,47,0.066,64,0.009,65,0.011,66,0.009,80,2.389,277,2.389,325,2.542,326,2.583,1703,6.855,1705,6.855,1716,5.223,1717,6.625,2570,5.608,2571,5.223,2572,5.99,2573,5.99]],["title/classes/User.html",[47,0.045,172,0.423]],["body/classes/User.html",[3,0.183,4,0.162,5,0.142,7,0.203,8,1.093,19,0.668,22,0.013,24,0.467,25,0.633,27,1.452,41,0.224,46,0.183,47,0.065,64,0.009,65,0.011,66,0.009,172,0.729,369,1.899,371,1.779,520,5.067,522,4.752,539,5.067,655,3.299,1213,6.552,1215,6.552,1351,6.448,2574,5.089,2575,5.837,2576,5.837,2577,5.837,2578,5.837,2579,5.837,2580,5.837,2581,5.837]],["title/interfaces/UserData.html",[1104,1.22,1956,2.084]],["body/interfaces/UserData.html",[3,0.142,4,0.167,5,0.111,7,0.159,8,0.935,22,0.013,23,0.389,24,0.407,27,1.441,33,0.411,39,1.535,41,0.284,42,0.26,46,0.188,47,0.05,48,0.684,62,0.879,64,0.007,65,0.009,66,0.007,67,0.188,75,0.764,76,1.24,78,0.849,79,0.792,81,0.849,83,0.849,86,0.942,88,2.229,91,1.75,97,1.078,101,1.078,102,1.078,141,0.91,142,1.535,172,0.474,265,2.717,277,2.392,291,2.01,297,1.698,308,2.333,339,1.888,345,3.071,369,1.234,371,1.8,413,2.22,558,2.229,559,2.229,916,2.333,1016,2.229,1104,1.365,1106,2.333,1258,3.389,1677,2.574,1686,2.574,1688,2.574,1749,2.717,1873,2.574,1930,3.071,1931,3.071,1932,3.972,1933,3.972,1934,3.071,1935,2.717,1936,2.717,1939,2.717,1944,3.578,1946,6.628,1947,6.628,1950,3.578,1951,2.717,1953,3.578,1954,2.717,1955,2.717,1956,3.434,1957,2.881,1958,2.717,1959,2.881,1960,2.881,1961,2.447,1962,2.881,1963,2.574,1964,2.574,1965,2.881,1966,2.574,1967,2.881,1968,2.881,1969,2.881,1970,2.881,1971,2.881,1972,2.881,1973,2.881,1974,2.881,1975,2.881,1976,2.717,1977,2.881,1978,2.881,1979,2.881,1980,2.881,1981,2.881,1982,2.881,1983,2.881,1984,2.881,1985,2.881,1986,2.881,1987,2.881,1988,2.881,1989,2.881,1990,2.881,1991,2.881,1992,2.881,1993,2.881,1994,2.881,1995,2.881,1996,3.301,1997,3.301,1998,3.301,1999,3.578,2000,3.301,2001,3.301,2002,3.301,2003,3.071,2004,3.071,2005,3.972,2006,3.578,2007,2.717,2008,2.717,2009,2.717,2010,2.717,2011,2.717,2012,2.717,2013,2.881,2014,3.071,2015,4.346,2016,4.346,2017,3.301,2018,3.301,2019,3.301,2020,3.301,2021,3.301,2022,3.301]],["title/interfaces/UserData-1.html",[413,1.256,1104,1.017,1956,1.738]],["body/interfaces/UserData-1.html",[3,0.121,4,0.149,5,0.094,7,0.135,8,0.837,9,1.037,16,0.367,22,0.013,23,0.375,24,0.38,27,1.419,33,0.349,39,1.701,41,0.291,42,0.221,46,0.168,47,0.043,62,1.037,64,0.006,65,0.008,66,0.006,67,0.168,75,0.649,76,1.111,78,0.721,79,0.672,81,0.721,83,0.721,86,0.8,97,1.46,98,1.333,101,1.46,102,1.46,107,0.8,160,0.773,172,0.402,209,1.738,277,2.142,291,1.849,297,1.562,309,2.609,325,1.381,339,2.226,369,1.048,371,1.715,382,1.738,413,2.467,558,1.893,559,1.893,629,1.982,687,3.426,916,1.982,1016,1.893,1024,1.813,1028,2.202,1040,1.669,1041,2.447,1042,1.982,1043,1.982,1044,1.893,1052,4.214,1104,1.16,1106,1.982,1147,3.621,1258,3.035,1375,3.621,1509,2.609,1677,2.187,1686,2.187,1688,2.187,1698,3.047,1749,2.308,1873,2.187,1935,2.308,1936,2.308,1939,2.308,1944,3.204,1950,3.204,1951,2.308,1953,3.204,1954,2.308,1955,2.308,1956,3.159,1957,2.447,1958,2.308,1959,2.447,1960,2.447,1961,2.079,1962,2.447,1963,2.187,1964,2.187,1965,2.447,1966,2.187,1967,2.447,1968,2.447,1969,2.447,1970,2.447,1971,2.447,1972,2.447,1973,2.447,1974,2.447,1975,2.447,1976,2.308,1977,2.447,1978,2.447,1979,2.447,1980,2.447,1981,2.447,1982,2.447,1983,2.447,1984,2.447,1985,2.447,1986,2.447,1987,2.447,1988,2.447,1989,2.447,1990,2.447,1991,2.447,1992,2.447,1993,2.447,1994,2.447,1995,2.447,1997,2.803,1998,2.803,1999,3.204,2000,2.803,2006,3.204,2007,2.308,2008,2.308,2009,2.308,2010,2.308,2011,2.308,2012,2.308,2013,2.447,2014,2.609,2015,3.891,2016,3.891,2017,2.803,2018,2.803,2019,2.803,2020,2.803,2021,2.803,2022,2.803,2385,2.609,2386,3.374,2387,3.374,2388,3.374,2389,3.374,2390,3.374,2391,3.374,2393,3.047,2394,3.047,2396,4.159,2399,3.374,2408,3.374,2410,6.317,2411,6.317,2416,3.374,2417,3.374,2420,3.374,2421,6.104,2422,3.374,2423,3.374,2424,3.374,2425,4.683,2426,4.683,2427,3.374,2428,4.23,2429,3.374,2430,3.374,2431,3.374,2432,3.374,2433,3.374,2434,3.374,2435,3.374,2436,3.374,2437,3.374,2438,3.374,2439,4.683,2440,4.683,2441,4.683,2442,4.683,2443,4.683,2444,3.374,2445,3.374,2446,3.374,2447,3.374,2448,3.374,2449,3.374,2450,3.374]],["title/interfaces/UserData-2.html",[1104,1.017,1349,1.918,1956,1.738]],["body/interfaces/UserData-2.html",[3,0.087,4,0.078,5,0.068,7,0.199,8,0.661,9,1.187,18,1.829,22,0.013,23,0.332,24,0.405,27,1.363,32,1.691,33,0.252,34,0.763,39,1.481,41,0.282,42,0.16,44,0.93,46,0.133,47,0.031,48,0.42,51,1.368,62,0.989,64,0.007,65,0.007,66,0.004,67,0.133,75,0.469,76,0.877,78,0.521,79,0.486,81,0.521,83,0.521,86,0.578,88,1.703,91,1.074,92,1.668,96,1.668,97,1.354,98,0.963,101,1.354,102,1.354,103,0.578,107,0.578,153,0.924,154,0.578,172,0.595,248,1.768,277,2.281,291,1.271,297,1.831,298,1.58,325,1.829,339,2.37,369,0.757,371,1.712,380,2.202,382,1.905,413,2.757,424,1.668,464,1.58,558,1.368,559,1.368,562,0.783,583,2.172,590,1.115,596,1.229,611,2.624,640,1.206,644,1.885,659,1.668,660,2.026,661,2.026,662,2.026,666,2.396,675,2.026,687,2.507,747,1.885,754,2.202,760,3.24,788,2.202,791,2.202,793,2.682,794,1.885,795,1.885,796,1.885,805,2.202,806,2.202,835,1.768,849,2.026,888,4.87,892,1.885,902,1.58,928,3.656,939,1.256,963,1.668,994,1.668,1016,1.368,1028,1.514,1040,1.206,1066,2.438,1080,2.859,1082,2.202,1089,2.438,1104,0.838,1106,1.432,1131,1.768,1258,2.396,1303,4.503,1306,2.438,1308,3.666,1317,1.58,1328,1.768,1349,1.58,1368,2.438,1387,2.202,1396,4.467,1411,2.202,1432,2.438,1433,2.438,1434,2.438,1435,2.438,1449,2.438,1451,2.438,1456,4.467,1491,3.34,1560,2.438,1632,1.885,1677,1.58,1686,1.58,1688,1.58,1747,2.438,1749,1.668,1755,2.026,1767,2.438,1873,1.58,1934,1.885,1935,1.668,1936,1.668,1939,1.668,1944,2.53,1950,2.53,1951,1.668,1953,2.53,1954,1.668,1955,1.668,1956,2.624,1957,1.768,1958,1.668,1959,1.768,1960,1.768,1961,1.502,1962,1.768,1963,1.58,1964,1.58,1965,1.768,1966,1.58,1967,1.768,1968,1.768,1969,1.768,1970,1.768,1971,1.768,1972,1.768,1973,1.768,1974,1.768,1975,1.768,1976,1.668,1977,1.768,1978,1.768,1979,1.768,1980,1.768,1981,1.768,1982,1.768,1983,1.768,1984,1.768,1985,1.768,1986,1.768,1987,1.768,1988,1.768,1989,1.768,1990,1.768,1991,1.768,1992,1.768,1993,1.768,1994,1.768,1995,1.768,1999,1.668,2003,1.885,2004,2.859,2006,2.53,2007,1.668,2008,1.668,2009,1.668,2010,1.668,2011,1.668,2012,1.668,2013,1.768,2048,2.202,2111,1.885,2126,2.026,2229,1.58,2300,2.202,2312,2.438,2428,2.202,2472,2.438,2511,2.438,2582,6.469,2583,5.123,2584,2.438,2585,2.796,2586,2.796,2587,2.796,2588,2.796,2589,2.438,2590,2.796,2591,2.796,2592,6.146,2593,5.123,2594,5.123,2595,2.796,2596,2.796,2597,7.229,2598,4.24,2599,4.24,2600,7.448,2601,5.718,2602,5.718,2603,5.718,2604,5.718,2605,5.718,2606,5.718,2607,6.924,2608,5.718,2609,5.718,2610,5.718,2611,5.718,2612,5.718,2613,4.24,2614,4.24,2615,2.796,2616,2.796,2617,2.796,2618,2.796,2619,2.796,2620,2.796,2621,2.796,2622,2.796,2623,2.796,2624,2.796,2625,2.796,2626,2.796,2627,2.796,2628,2.796,2629,2.796,2630,2.796,2631,2.796,2632,2.796,2633,4.24,2634,6.146,2635,2.796,2636,2.796,2637,2.796,2638,2.796,2639,2.796,2640,5.123,2641,4.24,2642,4.24,2643,2.796,2644,4.24,2645,4.24,2646,2.796,2647,2.796,2648,2.796,2649,5.123,2650,2.796,2651,2.796,2652,2.796,2653,2.796,2654,2.796,2655,2.796,2656,2.796,2657,4.24,2658,2.796,2659,2.796,2660,2.796,2661,2.796,2662,2.796,2663,2.796,2664,2.796,2665,2.796,2666,2.796,2667,2.796,2668,2.796,2669,2.796,2670,2.796,2671,2.796,2672,2.796,2673,2.796,2674,2.796,2675,2.796,2676,2.796,2677,2.796,2678,2.796,2679,2.796,2680,2.796,2681,2.796,2682,2.796,2683,2.796,2684,2.796,2685,2.796,2686,2.796,2687,2.796,2688,2.796,2689,4.24,2690,2.796,2691,2.796,2692,2.796,2693,2.796,2694,2.796,2695,2.796,2696,2.796,2697,2.796,2698,2.796,2699,2.438,2700,2.796,2701,2.796,2702,2.796,2703,2.796]],["title/components/UserProfileComponent.html",[67,0.127,171,0.841]],["body/components/UserProfileComponent.html",[3,0.117,4,0.104,5,0.091,7,0.13,8,0.816,9,0.72,12,0.569,16,0.353,19,0.584,21,0.569,22,0.013,23,0.324,24,0.299,25,0.473,33,0.473,34,0.942,41,0.252,42,0.213,46,0.117,47,0.041,48,0.56,64,0.006,65,0.008,66,0.006,67,0.189,68,0.798,69,1.12,70,0.913,71,0.944,72,0.913,73,0.913,75,0.877,76,1.25,77,0.883,78,1.574,79,1.463,81,0.976,83,0.976,86,1.356,87,2.514,88,2.381,91,1.432,96,2.224,97,1.239,99,3.309,100,1.876,101,1.239,102,1.239,103,0.771,104,1.281,105,1.281,106,0.913,107,1.356,108,0.913,109,0.913,110,0.771,111,0.913,112,0.798,113,1.127,114,1.481,115,0.798,116,1.605,117,0.798,118,1.481,119,0.771,120,0.913,121,0.771,122,0.853,123,0.913,124,0.798,125,0.883,126,1.281,127,0.771,128,0.913,129,0.771,130,1.198,131,0.913,132,0.798,133,0.913,134,0.745,135,1.338,136,0.913,137,0.771,138,1.01,139,0.771,140,0.913,141,0.745,142,0.853,143,0.913,144,0.745,145,0.913,146,0.771,147,1.089,148,0.771,149,0.771,150,0.771,151,0.913,152,0.771,153,1.06,154,0.771,155,0.771,156,0.745,157,1.281,158,0.771,159,0.913,160,0.745,161,0.913,162,0.798,163,0.913,164,0.771,165,0.913,166,0.798,167,1.432,168,0.798,169,0.913,170,0.798,171,1.356,172,0.832,173,1.501,174,0.913,175,0.913,269,5.328,350,4.563,424,2.224,501,4.381,587,1.38,591,2.011,592,1.197,594,2.224,596,1.516,597,2.107,604,2.011,605,2.556,793,2.357,830,2.68,883,3.607,902,2.107,904,1.909,909,2.514,910,2.514,924,2.357,925,1.746,928,2.107,930,4.381,942,2.701,948,3.792,950,2.701,963,2.224,986,4.381,1011,2.701,1012,2.701,1013,2.701,1014,2.701,1015,2.701,1016,1.824,1017,2.701,1018,2.701,1024,1.746,1044,1.824,1289,4.421,1290,3.25,1348,2.936,1349,3.417,1350,3.25,1617,4.751,1768,3.25,2328,5.272,2704,6.412,2705,3.25,2706,6.046,2707,5.233,2708,6.046,2709,5.233,2710,5.233,2711,3.728,2712,3.728,2713,3.728,2714,3.728,2715,3.728,2716,5.233,2717,3.728,2718,3.728,2719,3.728,2720,5.233,2721,3.728,2722,5.233,2723,5.233,2724,5.233,2725,5.233,2726,3.728,2727,3.728,2728,3.728,2729,3.728,2730,3.728,2731,5.233,2732,3.728,2733,3.728]],["title/injectables/UserService.html",[0,0.813,2513,2.948]],["body/injectables/UserService.html",[0,1.215,2,1.856,3,0.146,4,0.129,5,0.113,7,0.162,9,1.476,12,0.661,13,3.366,16,0.441,19,0.608,21,0.81,22,0.013,23,0.369,24,0.41,25,0.673,31,1.603,33,0.649,36,2.456,39,1.065,41,0.286,42,0.266,45,1.444,46,0.146,47,0.052,48,0.699,55,2.5,62,1.439,64,0.007,65,0.009,66,0.007,80,1.856,100,1.887,113,0.868,172,0.484,212,1.929,291,2.292,297,1.819,326,2.007,341,3.437,353,3.437,359,5.303,364,2.383,365,3.68,367,2.849,374,3.437,375,3.648,395,3.437,396,3.86,404,5.303,417,2.383,418,2.383,419,2.5,420,2.63,421,2.18,422,1.929,425,2.18,426,2.383,427,3.47,428,2.5,429,2.5,430,2.5,431,3.174,432,3.372,435,3.437,436,2.63,437,2.277,438,2.18,439,2.63,440,3.437,441,2.63,442,2.63,443,2.63,444,2.63,445,3.115,446,3.268,447,2.63,448,3.115,449,3.366,450,2.63,451,2.63,452,2.63,453,2.5,454,2.63,455,2.63,456,2.63,457,2.63,458,2.5,459,2.63,460,1.787,461,2.63,462,2.63,463,2.63,465,3.665,466,4.057,467,4.057,468,3.665,469,2.849,470,3.437,738,2.776,2513,4.407,2734,3.665,2735,6.082,2736,4.653,2737,4.653,2738,4.653,2739,4.653,2740,6.082,2741,4.653,2742,4.653,2743,4.653,2744,4.653,2745,4.653]],["title/coverage.html",[2746,4.847]],["body/coverage.html",[0,1.549,1,2.321,5,0.072,6,2.569,22,0.013,24,0.168,31,1.015,39,0.675,47,0.076,64,0.005,65,0.007,66,0.005,67,0.258,68,0.63,74,2.569,88,0.98,110,0.609,112,0.63,115,0.63,117,0.63,119,0.609,121,0.609,124,0.63,127,0.609,129,0.609,132,0.63,134,0.589,137,0.609,138,0.569,139,0.609,141,0.589,144,0.589,146,0.609,147,0.53,148,0.609,149,0.609,150,0.609,152,0.609,153,0.476,154,0.609,155,0.609,156,0.589,158,0.609,160,0.589,162,0.63,164,0.609,166,0.63,168,0.63,170,0.63,171,0.609,172,0.459,189,1.987,192,1.509,193,1.987,194,1.987,224,2.135,226,2.321,237,2.321,239,2.321,241,2.321,247,2.975,248,3.976,249,2.135,250,2.135,253,2.135,254,2.135,255,2.135,259,3.344,261,2.135,265,3.751,269,2.135,272,2.135,284,3.197,285,2.135,287,2.135,316,2.569,338,4.624,425,2.067,427,3.604,431,3.432,433,3.73,469,1.38,512,2.135,513,4.165,554,3.475,572,2.135,592,2.119,596,2.494,606,3.832,607,3.832,659,4.197,692,3.832,724,4.165,743,3.475,760,1.863,789,2.321,916,1.509,994,1.758,1020,2.569,1021,2.569,1028,1.575,1059,3.475,1077,1.987,1080,1.987,1104,2.196,1105,1.987,1107,3.959,1108,3.832,1110,1.758,1112,3.503,1148,3.832,1150,2.569,1168,2.569,1169,3.475,1175,2.135,1176,3.475,1177,3.475,1256,2.135,1257,2.569,1275,2.569,1284,2.321,1285,3.847,1289,1.987,1292,1.987,1527,4.624,1553,2.569,1621,3.475,1622,2.569,1632,1.987,1699,2.569,1769,2.569,1873,2.989,1912,4.624,1913,4.624,1930,4.24,1931,4.24,1956,2.708,1961,2.841,1976,3.155,2035,2.569,2047,2.569,2062,3.475,2065,1.583,2075,2.135,2080,3.832,2158,4.165,2173,2.569,2187,2.569,2189,2.569,2190,2.569,2229,4.066,2240,2.135,2241,3.832,2288,2.569,2291,2.569,2305,4.624,2331,2.321,2385,4.24,2396,1.987,2456,4.624,2465,2.569,2482,2.569,2483,2.569,2497,2.569,2508,2.569,2513,2.135,2531,2.569,2532,2.569,2533,2.569,2538,2.569,2541,2.321,2542,2.569,2570,2.321,2571,2.569,2574,2.569,2704,2.569,2705,2.569,2734,4.165,2746,2.569,2747,2.946,2748,2.946,2749,2.946,2750,7.438,2751,8.319,2752,2.569,2753,8.293,2754,2.946,2755,2.946,2756,6.6,2757,2.946,2758,6.288,2759,5.288,2760,2.946,2761,2.946,2762,2.946,2763,7.438,2764,5.288,2765,2.946,2766,6.288,2767,5.288,2768,4.611,2769,6.6,2770,6.288,2771,2.946,2772,2.946,2773,2.946,2774,2.946,2775,2.946,2776,5.288,2777,2.946,2778,4.412,2779,2.946,2780,2.569,2781,2.569,2782,3.847,2783,2.569,2784,2.569,2785,2.946]],["title/dependencies.html",[179,3.096,2786,2.959]],["body/dependencies.html",[22,0.013,42,0.32,44,1.862,45,1.737,64,0.009,65,0.011,66,0.009,179,3.542,181,3.776,202,4.954,203,4.61,209,2.516,367,2.624,423,3.776,437,2.741,449,2.624,1087,5.962,1223,4.883,1650,4.411,1660,4.883,2584,4.883,2787,5.601,2788,8.195,2789,5.601,2790,6.838,2791,5.601,2792,5.601,2793,5.601,2794,4.883,2795,5.601,2796,6.838,2797,5.601,2798,5.601,2799,5.601,2800,5.601,2801,5.601,2802,4.883,2803,5.601,2804,5.601,2805,5.601,2806,5.601,2807,5.601,2808,5.601,2809,5.601,2810,5.601,2811,5.601,2812,5.601,2813,5.601,2814,5.601,2815,5.601,2816,5.601,2817,5.601,2818,5.601,2819,5.601,2820,5.601,2821,5.601,2822,5.601,2823,5.601,2824,5.601,2825,5.601,2826,5.601,2827,5.601,2828,5.601,2829,6.838,2830,5.601,2831,5.601,2832,5.601,2833,5.601,2834,5.601,2835,5.601]],["title/miscellaneous/enumerations.html",[2836,2.146,2837,4.268]],["body/miscellaneous/enumerations.html",[7,0.206,22,0.013,30,2.143,54,3.998,64,0.009,65,0.011,66,0.009,94,3.462,172,0.736,303,4.77,358,4.77,575,4.77,576,4.77,746,3.801,871,4.294,961,3.535,1308,4.22,1351,5.572,1961,3.801,1963,3.349,1964,3.349,1966,3.349,2331,4.667,2350,5.167,2351,5.167,2352,5.167,2353,5.167,2354,5.167,2355,5.167,2356,5.167,2357,5.167,2358,5.167,2836,3.747,2837,5.167,2838,5.926,2839,5.926,2840,5.926,2841,5.926,2842,5.926,2843,5.926,2844,5.926,2845,5.926]],["title/miscellaneous/functions.html",[2836,2.146,2846,4.268]],["body/miscellaneous/functions.html",[7,0.211,21,0.83,22,0.013,23,0.377,25,0.689,33,0.737,39,1.747,64,0.009,65,0.011,66,0.009,172,0.794,248,3.829,265,3.612,371,1.697,659,4.275,1082,4.769,1930,4.083,1931,4.832,1956,3.909,2013,4.827,2014,4.832,2229,3.422,2385,4.083,2699,5.28,2768,7.119,2836,3.829,2846,5.28,2847,5.28,2848,5.28,2849,5.28]],["title/index.html",[7,0.118,1359,2.673,2850,2.959]],["body/index.html",[4,0.137,5,0.17,22,0.01,23,0.244,39,1.129,47,0.055,51,2.413,52,3.573,64,0.008,65,0.01,66,0.008,67,0.197,69,1.055,79,1.097,80,1.967,138,0.952,153,1.021,173,1.129,298,2.787,308,2.526,313,3.573,445,3.762,448,2.526,543,4.973,562,1.381,646,1.894,885,5.722,904,2.526,1016,2.413,1190,6.412,1308,4.155,1315,3.884,1359,3.884,1524,4.3,1525,3.884,1609,5.506,1730,6.074,1755,4.575,2589,4.3,2786,4.3,2794,4.3,2802,4.3,2850,4.3,2851,7.767,2852,4.931,2853,4.931,2854,4.931,2855,4.931,2856,4.931,2857,6.966,2858,4.931,2859,6.314,2860,4.931,2861,4.931,2862,4.3,2863,4.931,2864,4.931,2865,4.931,2866,4.931,2867,4.931,2868,4.931,2869,4.931,2870,4.931,2871,4.931,2872,4.931,2873,6.966,2874,4.931,2875,4.931,2876,4.931,2877,4.931,2878,4.931,2879,4.931,2880,4.931,2881,4.931,2882,4.931,2883,7.997,2884,4.931,2885,4.931,2886,7.344,2887,6.314,2888,4.931,2889,6.314,2890,4.931,2891,4.931,2892,4.931,2893,4.931,2894,4.931,2895,4.931,2896,4.931,2897,6.966,2898,4.931,2899,4.931,2900,7.896,2901,4.931,2902,4.931,2903,4.931,2904,4.931,2905,4.931,2906,4.931,2907,6.074,2908,4.931,2909,4.931,2910,4.931,2911,6.314,2912,4.931,2913,4.931,2914,4.931,2915,6.314,2916,4.931,2917,4.931,2918,4.931,2919,4.931,2920,4.931,2921,6.314,2922,4.931,2923,4.931,2924,4.931,2925,4.931,2926,6.314,2927,4.931,2928,4.931,2929,4.931,2930,6.314,2931,4.931,2932,4.931,2933,6.314,2934,4.931,2935,4.931,2936,4.931,2937,4.931,2938,4.931,2939,4.931,2940,4.931,2941,4.931,2942,4.931,2943,4.931,2944,4.931,2945,4.931,2946,4.931,2947,4.931,2948,4.931,2949,4.931]],["title/modules.html",[178,3.316]],["body/modules.html",[22,0.012,64,0.01,65,0.012,66,0.01,177,4.68,178,3.853,190,4.355,191,4.355,203,5.285,964,5.68,1278,5.631,1647,4.355,2950,7.838,2951,8.053,2952,6.458]],["title/overview.html",[2953,4.847]],["body/overview.html",[2,1.773,22,0.013,64,0.007,65,0.009,66,0.007,68,1.648,69,0.951,88,2.203,103,0.919,110,1.37,112,1.417,115,1.417,117,1.417,119,1.37,121,1.37,124,1.417,127,1.37,129,1.37,132,1.417,134,1.324,137,1.37,139,1.37,141,1.324,144,1.324,146,1.37,148,1.37,149,1.37,150,1.37,152,1.37,154,1.37,155,1.37,156,1.324,158,1.37,160,1.324,162,1.417,164,1.37,166,1.417,168,1.417,170,1.417,171,1.37,176,2.512,177,6.281,178,2.652,179,2.811,180,2.997,181,2.997,182,2.997,183,2.997,184,3.876,185,3.876,186,3.876,187,3.876,188,3.876,189,4.467,190,4.952,191,5.091,192,3.393,193,4.467,194,4.467,195,4.276,196,3.221,197,2.512,278,3.876,279,3.876,282,3.221,315,3.501,413,1.646,469,2.083,655,2.512,1106,2.277,1349,2.512,1633,3.501,1647,5.194,2492,3.876,2493,3.876,2494,3.876,2953,3.876,2954,4.445,2955,4.445,2956,4.445,2957,4.445,2958,4.445]],["title/routes.html",[282,4.028]],["body/routes.html",[22,0.012,64,0.01,65,0.012,66,0.01,282,4.833]],["title/miscellaneous/variables.html",[2836,2.146,2959,4.268]],["body/miscellaneous/variables.html",[7,0.118,22,0.013,24,0.473,27,1.243,29,2.198,30,2.126,32,1.354,39,1.677,64,0.005,65,0.008,66,0.005,138,0.655,211,2.674,248,2.147,265,2.025,274,2.96,275,2.96,276,2.96,277,2.29,297,1.454,327,2.199,338,2.674,367,1.59,425,2.944,427,4.09,428,3.935,429,3.935,430,3.935,431,3.846,432,4.161,433,4.486,434,4.214,445,2.508,513,2.674,562,1.371,659,3.425,724,2.674,739,2.96,743,2.674,789,3.856,790,2.96,1016,2.81,1059,2.674,1083,2.96,1112,2.025,1175,2.46,1176,2.674,1177,3.856,1210,2.96,1241,6.688,1527,2.674,1548,3.856,1549,2.96,1749,3.425,1755,2.46,1912,2.674,1913,4.95,1928,2.96,1930,2.289,1931,3.872,1957,3.631,1958,3.425,1959,3.631,1960,3.631,1961,3.73,1962,3.631,1963,3.245,1964,3.245,1965,3.631,1966,3.245,1967,3.631,1968,3.631,1969,3.631,1970,3.631,1971,3.631,1972,3.631,1973,3.631,1974,3.631,1975,3.631,1976,4.141,1977,3.631,1978,3.631,1979,3.631,1980,3.631,1981,3.631,1982,3.631,1983,3.631,1984,3.631,1985,3.631,1986,3.631,1987,3.631,1988,3.631,1989,3.631,1990,3.631,1991,3.631,1992,3.631,1993,3.631,1994,3.631,1995,3.631,2158,2.674,2172,2.96,2229,1.919,2305,2.674,2327,2.96,2368,2.96,2385,2.289,2456,2.674,2734,2.674,2752,4.269,2780,2.96,2781,2.96,2782,2.96,2783,4.269,2784,4.269,2836,2.147,2847,4.269,2848,4.269,2849,4.269,2862,2.96,2907,5.48,2959,2.96,2960,4.896,2961,5.742,2962,3.395,2963,4.896,2964,5.742,2965,5.742,2966,5.742,2967,5.742,2968,4.896,2969,4.896,2970,3.395,2971,4.896,2972,3.395,2973,3.395,2974,3.395,2975,3.395,2976,3.395,2977,3.395,2978,3.395,2979,4.896,2980,4.896,2981,3.395,2982,3.395]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":596,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["0\").focus",{"_index":845,"title":{},"body":{"components/ChatComponent.html":{}}}],["0.0.1",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["0.0.3",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["0.05rem",{"_index":1898,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["0.10.2",{"_index":2835,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":927,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["0.2",{"_index":1007,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["0.3",{"_index":990,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["0.5em",{"_index":1892,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["0.5rem",{"_index":1899,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["0.7",{"_index":934,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["0.8",{"_index":2600,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["0.9",{"_index":992,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["0/1",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2773,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2770,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":935,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["000000",{"_index":912,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["008cdb",{"_index":1751,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["00:00",{"_index":1344,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["00a8ff",{"_index":2507,"title":{},"body":{"components/SidebarComponent.html":{}}}],["01a.wav",{"_index":1465,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["0px",{"_index":986,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["1",{"_index":413,"title":{"injectables/QuizService-1.html":{},"interfaces/UserData-1.html":{}},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"overview.html":{}}}],["1))].charat(0",{"_index":2017,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["1.10.0",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["1.13.3",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["1.7.3",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["1/32",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2957,"title":{},"body":{"overview.html":{}}}],["10.2.0",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["10.x",{"_index":2875,"title":{},"body":{"index.html":{}}}],["100",{"_index":592,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["100).tostring",{"_index":2020,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["1000",{"_index":1435,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["1000000",{"_index":826,"title":{},"body":{"components/ChatComponent.html":{}}}],["100px",{"_index":597,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{}}}],["1010",{"_index":2055,"title":{},"body":{"classes/Question.html":{}}}],["102",{"_index":2609,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["10px",{"_index":605,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["110px",{"_index":1891,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["11px",{"_index":959,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["122",{"_index":989,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["12px",{"_index":2114,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuizListComponent.html":{}}}],["132",{"_index":2599,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["136px",{"_index":1766,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["144px",{"_index":899,"title":{},"body":{"components/ChatComponent.html":{}}}],["14px",{"_index":2030,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["15",{"_index":2955,"title":{},"body":{"overview.html":{}}}],["150px",{"_index":651,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["159",{"_index":2611,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["15px",{"_index":940,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["162",{"_index":2602,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["16px",{"_index":914,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["179.9deg",{"_index":981,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["17px",{"_index":1788,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["18px",{"_index":937,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["19",{"_index":2958,"title":{},"body":{"overview.html":{}}}],["192",{"_index":2607,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["192.168.17.31",{"_index":2910,"title":{},"body":{"index.html":{}}}],["1ebea5",{"_index":2352,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1px",{"_index":1005,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["1rem",{"_index":1742,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["2",{"_index":1349,"title":{"interfaces/UserData-2.html":{}},"body":{"interfaces/LiveLecture.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/RatingComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["2.2.0",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1208,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"injectables/StudentService.html":{}}}],["200px",{"_index":1758,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["2019",{"_index":2440,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["206",{"_index":2604,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["20px",{"_index":924,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SidebarComponent.html":{},"components/UserProfileComponent.html":{}}}],["210px",{"_index":1056,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["235",{"_index":2603,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["24px",{"_index":926,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["25",{"_index":2033,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["255",{"_index":2610,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["25px",{"_index":931,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["27",{"_index":2442,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["2d2e2e",{"_index":2503,"title":{},"body":{"components/SidebarComponent.html":{}}}],["2px",{"_index":962,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["3",{"_index":1632,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/RatingComponent.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["3.1.4",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1476,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["300px",{"_index":1761,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["30px",{"_index":1057,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["32",{"_index":2954,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":1753,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["3px",{"_index":991,"title":{},"body":{"components/ChatComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["4",{"_index":1633,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/RatingComponent.html":{},"overview.html":{}}}],["4.0.12",{"_index":2877,"title":{},"body":{"index.html":{}}}],["4.1.1",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1218,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/MaterialNavComponent.html":{}}}],["400px",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/SignupComponent.html":{}}}],["401",{"_index":1162,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["403",{"_index":1163,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["45",{"_index":958,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["4px",{"_index":955,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["5",{"_index":1387,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/RatingComponent.html":{},"interfaces/UserData-2.html":{}}}],["5.6.13",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["500px",{"_index":589,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{}}}],["50px",{"_index":1768,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/UserProfileComponent.html":{}}}],["56.25",{"_index":1894,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["576px",{"_index":1015,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["5px",{"_index":884,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["5s",{"_index":966,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["6.5.3",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1318,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/QuizCreateComponent.html":{}}}],["64",{"_index":2612,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["69px",{"_index":879,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["6px",{"_index":1759,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["7",{"_index":2956,"title":{},"body":{"overview.html":{}}}],["767px",{"_index":1018,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["7px",{"_index":954,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["8",{"_index":2441,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["8.1.0",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["8.1.4",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["8.2.5",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["8.x",{"_index":2879,"title":{},"body":{"index.html":{}}}],["85",{"_index":1058,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["86",{"_index":2605,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["8px",{"_index":941,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["90",{"_index":943,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["99",{"_index":2598,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["9da3a4",{"_index":2351,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["_guards/auth/auth.guard",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_guards/role/role.guard",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["_interceptor",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["above",{"_index":2382,"title":{},"body":{"components/RatingComponent.html":{}}}],["absolute",{"_index":903,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["accent",{"_index":2357,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["access",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{}}}],["accessors",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["accordingly",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["account",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["account_circle",{"_index":858,"title":{},"body":{"components/ChatComponent.html":{},"components/MaterialNavComponent.html":{}}}],["action",{"_index":746,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"miscellaneous/enumerations.html":{}}}],["action.joined",{"_index":850,"title":{},"body":{"components/ChatComponent.html":{}}}],["action.rename",{"_index":851,"title":{},"body":{"components/ChatComponent.html":{}}}],["activated",{"_index":2506,"title":{},"body":{"components/SidebarComponent.html":{}}}],["activatedroute",{"_index":666,"title":{},"body":{"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/UserData-2.html":{}}}],["activatedroutesnapshot",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["active",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OnlineUsersComponent.html":{},"injectables/ReportsService.html":{}}}],["actual_component",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["add",{"_index":577,"title":{},"body":{"components/BookComponent.html":{},"components/FacultyAddComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizListComponent.html":{},"components/StudentAddComponent.html":{}}}],["add'},{'name",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["add.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["add.component.html",{"_index":1171,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{}}}],["add.component.scss",{"_index":1170,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{}}}],["add.component.ts",{"_index":1169,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:12",{"_index":1173,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{}}}],["add.component.ts:8",{"_index":1172,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{}}}],["addchoice",{"_index":2083,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["addduration",{"_index":1385,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["added",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["addevent",{"_index":2392,"title":{},"body":{"components/ReportsComponent.html":{}}}],["addevent(type",{"_index":2398,"title":{},"body":{"components/ReportsComponent.html":{}}}],["admin",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"guards/RoleGuard.html":{},"miscellaneous/enumerations.html":{}}}],["again",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["alert",{"_index":50,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["alerts",{"_index":1735,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["alertservice",{"_index":1,"title":{"injectables/AlertService.html":{}},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["align",{"_index":891,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["allowback",{"_index":1311,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["allowreview",{"_index":1312,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["already",{"_index":1248,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{}}}],["amelia",{"_index":1981,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["android",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":2878,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":569,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["angular/cdk/layout",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{}}}],["angular/common",{"_index":1650,"title":{},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData-1.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1660,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/material/badge",{"_index":1652,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":1654,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":1656,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":1658,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":1696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":1698,"title":{},"body":{"modules/MaterialModule.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["angular/material/dialog",{"_index":1117,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["angular/material/expansion",{"_index":1662,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":1664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":1667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":1671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":1673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":1675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":1677,"title":{},"body":{"modules/MaterialModule.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["angular/material/progress",{"_index":1679,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1682,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1684,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":1686,"title":{},"body":{"modules/MaterialModule.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["angular/material/table",{"_index":1688,"title":{},"body":{"modules/MaterialModule.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["angular/material/tabs",{"_index":1690,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":1694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/SafeUrlPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":44,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"guards/RoleGuard.html":{},"components/SignupComponent.html":{},"interfaces/UserData-2.html":{},"dependencies.html":{}}}],["animation",{"_index":978,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["answer",{"_index":1328,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"classes/QuizConfig.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-2.html":{}}}],["answered",{"_index":1316,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/Question.html":{},"classes/QuizConfig.html":{}}}],["answers",{"_index":1496,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/QuizResultModel.html":{}}}],["answers.filter(i",{"_index":1514,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["answers.push",{"_index":1499,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["answerslist",{"_index":2094,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["api",{"_index":562,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData-2.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl}/${id",{"_index":740,"title":{},"body":{"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["apiurl}/course/${id",{"_index":2330,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["apiurl}/last_played",{"_index":2329,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["apiurl}/loggedin",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl}/login",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["apiurl}/signup",{"_index":2743,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":68,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1226,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["application/json",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["applyfilter",{"_index":1937,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["applyfilter(filtervalue",{"_index":1939,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["appmodule",{"_index":177,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":190,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1971,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["args",{"_index":2486,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["array",{"_index":1185,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{}}}],["array.length",{"_index":1270,"title":{},"body":{"injectables/HelperService.html":{}}}],["array[currentindex",{"_index":1273,"title":{},"body":{"injectables/HelperService.html":{}}}],["array[randomindex",{"_index":1274,"title":{},"body":{"injectables/HelperService.html":{}}}],["arthur",{"_index":1992,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":2901,"title":{},"body":{"index.html":{}}}],["asher",{"_index":1978,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["asked",{"_index":1887,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["asp.net",{"_index":2298,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["assessment",{"_index":1731,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["assets/audio/beep",{"_index":1464,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["assign",{"_index":1997,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["assigned",{"_index":2365,"title":{},"body":{"components/RatingComponent.html":{}}}],["attempt",{"_index":1507,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["atticus",{"_index":1980,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["audio",{"_index":1462,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["audio.load",{"_index":1466,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["audio.play",{"_index":1467,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["audio.src",{"_index":1463,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["auth",{"_index":1222,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authenticate",{"_index":1193,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authenticationservice",{"_index":512,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":285,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":567,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{}}}],["author:string",{"_index":635,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["authorised",{"_index":1229,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["authorization",{"_index":1277,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservice",{"_index":88,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"guards/RoleGuard.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":594,"title":{},"body":{"components/BookComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["automatically",{"_index":1315,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{},"index.html":{}}}],["automove",{"_index":1313,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["autoplay",{"_index":1849,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["autosubmit",{"_index":1325,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["available",{"_index":1278,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"modules.html":{}}}],["avatar",{"_index":797,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["avatar:after",{"_index":1002,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["avatar_url",{"_index":789,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["avatar_url}/${randomid}.png",{"_index":798,"title":{},"body":{"components/ChatComponent.html":{}}}],["b",{"_index":2588,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["b51a1a00",{"_index":1757,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["back",{"_index":1883,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["backend",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["backend.ts",{"_index":1177,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend.ts:11",{"_index":1179,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["backend.ts:7",{"_index":1178,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["backface",{"_index":971,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["background",{"_index":904,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["backgroundcolor",{"_index":2594,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["bad",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["bar",{"_index":2652,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["base",{"_index":1960,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["base_receive",{"_index":1001,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["base_sent",{"_index":1003,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["based",{"_index":1635,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/RatingComponent.html":{}}}],["bcrypt",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1228,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["before",{"_index":1329,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["beginatzero:true",{"_index":2669,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["behaviorsubject",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(json.parse(localstorage.getitem('currentuser",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["being",{"_index":2432,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["bellow",{"_index":2884,"title":{},"body":{"index.html":{}}}],["between",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["black",{"_index":1974,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":952,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SidebarComponent.html":{}}}],["blue",{"_index":1972,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["body.classlist.add('iirs",{"_index":1719,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["body.classlist.remove('iirs",{"_index":1721,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["bold",{"_index":1888,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["book",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["book'},{'name",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["book.author",{"_index":682,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.component.css",{"_index":555,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["book.component.html",{"_index":556,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["book.description",{"_index":680,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.isbn",{"_index":681,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.published_year",{"_index":685,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.publisher",{"_index":683,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.title",{"_index":679,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["book.updated_date",{"_index":688,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["bookcomponent",{"_index":110,"title":{"components/BookComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookcreatecomponent",{"_index":112,"title":{"components/BookCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookdatasource",{"_index":572,"title":{"classes/BookDataSource.html":{}},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"coverage.html":{}}}],["bookdatasource(this.api",{"_index":565,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["bookdetailcomponent",{"_index":115,"title":{"components/BookDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookdetails",{"_index":695,"title":{},"body":{"components/BookEditComponent.html":{}}}],["bookeditcomponent",{"_index":117,"title":{"components/BookEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bookform",{"_index":610,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["books",{"_index":557,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["bookservice",{"_index":192,"title":{"injectables/BookService.html":{}},"body":{"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"guards/RoleGuard.html":{},"injectables/ThemeService.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["bootstrap",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":948,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["bordercolor",{"_index":2613,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["borderwidth",{"_index":2661,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["both",{"_index":917,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["bottom",{"_index":654,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["bottom:10px",{"_index":2728,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["bottom:1px",{"_index":2726,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["box",{"_index":909,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["break",{"_index":946,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["breakpoint",{"_index":1121,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["breakpointobserver",{"_index":1627,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{}}}],["breakpoints",{"_index":1641,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{}}}],["breakpointstate",{"_index":1715,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["brightness_2",{"_index":1736,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["browse",{"_index":2951,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"pipes/SafeUrlPipe.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["btn",{"_index":1895,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["build",{"_index":2900,"title":{},"body":{"index.html":{}}}],["builds",{"_index":2013,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/functions.html":{}}}],["button",{"_index":602,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["c",{"_index":2300,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"interfaces/UserData-2.html":{}}}],["calc(100",{"_index":878,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["calc(100vh",{"_index":1765,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["call",{"_index":1191,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["callback",{"_index":2676,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["callbacks",{"_index":2675,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["called",{"_index":2384,"title":{},"body":{"components/RatingComponent.html":{}}}],["calls",{"_index":1872,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["canactivate",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(next",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["cancel",{"_index":1910,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["canvasid",{"_index":2591,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["card",{"_index":691,"title":{},"body":{"components/BookDetailComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SignupComponent.html":{}}}],["card.title",{"_index":1642,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["cards",{"_index":1625,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["case",{"_index":2375,"title":{},"body":{"components/RatingComponent.html":{}}}],["catcherror",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["center",{"_index":893,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SignupComponent.html":{}}}],["change",{"_index":52,"title":{},"body":{"injectables/AlertService.html":{},"components/MaterialNavComponent.html":{},"components/RatingComponent.html":{},"index.html":{}}}],["changes",{"_index":1875,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["changetheme",{"_index":1705,"title":{},"body":{"components/MaterialNavComponent.html":{},"injectables/ThemeService.html":{}}}],["charlotte",{"_index":1983,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["chart",{"_index":2583,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["chart(canvasid",{"_index":2660,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["chart.js",{"_index":2584,"title":{},"body":{"interfaces/UserData-2.html":{},"dependencies.html":{}}}],["chat",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["chat'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["chat.component.html",{"_index":745,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":744,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat/action",{"_index":2290,"title":{},"body":{"interfaces/QuizResultModel.html":{}}}],["chat/user",{"_index":2289,"title":{},"body":{"interfaces/QuizResultModel.html":{}}}],["chat1",{"_index":1740,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["chatapiurl",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["chatcomponent",{"_index":119,"title":{"components/ChatComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chathistorycomponent",{"_index":121,"title":{"components/ChatHistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatservice",{"_index":760,"title":{"injectables/ChatService.html":{}},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["chaturl",{"_index":1060,"title":{},"body":{"injectables/ChatService.html":{}}}],["check",{"_index":1221,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["child",{"_index":969,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["child(n",{"_index":653,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["choice",{"_index":2105,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["choice1",{"_index":2095,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["choice2",{"_index":2096,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["choice3",{"_index":2097,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["choice4",{"_index":2098,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["choiceforms",{"_index":2085,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["choices",{"_index":2100,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["city",{"_index":1946,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{}}}],["class",{"_index":47,"title":{"classes/BookDataSource.html":{},"classes/Option.html":{},"classes/Question.html":{},"classes/QuestionDataSource.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"classes/User.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":655,"title":{},"body":{"classes/BookDataSource.html":{},"classes/Option.html":{},"classes/Question.html":{},"classes/QuestionDataSource.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":49,"title":{},"body":{"injectables/AlertService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["clearinterval(refreshid",{"_index":1442,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["cleartimeout(this.timer",{"_index":1473,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["clicks",{"_index":2360,"title":{},"body":{"components/RatingComponent.html":{}}}],["client",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["close",{"_index":1010,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["closed",{"_index":1130,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["clues",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_providers",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2492,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2494,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2493,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/StudentService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["col",{"_index":595,"title":{},"body":{"components/BookComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["collaborative",{"_index":2853,"title":{},"body":{"index.html":{}}}],["color",{"_index":928,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/RatingComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["color1",{"_index":1748,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["color2",{"_index":1750,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["colors",{"_index":1961,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["colors.accent",{"_index":2380,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors.green",{"_index":2379,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors.grey",{"_index":2374,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors.length",{"_index":2022,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["colors.red",{"_index":2376,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors.warn",{"_index":2377,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors.yellow",{"_index":2378,"title":{},"body":{"components/RatingComponent.html":{}}}],["colors[math.round(math.random",{"_index":2021,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["cols",{"_index":1630,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["column",{"_index":586,"title":{},"body":{"components/BookComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["command",{"_index":2885,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1649,"title":{},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["compiled",{"_index":2930,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2205,"title":{},"body":{"classes/QuizConfig.html":{}}}],["completed",{"_index":1322,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["component",{"_index":67,"title":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["components",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["components/book/book",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["components/book/book/book.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["components/chat",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/chat/chat.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/component",{"_index":2898,"title":{},"body":{"index.html":{}}}],["components/faculty/add/faculty",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["components/index/app.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["components/layout/material",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/layout/sidebar/sidebar.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/offline",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/online",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/question/question",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/question/question/question.component",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quiz/quiz",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quiz/quiz.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/rating/rating.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"interfaces/LiveLecture.html":{}}}],["components/reports/reports.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/student/add/student",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["components/student/details/student",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["components/student/list/student",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["components/user",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["config",{"_index":1310,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/Quiz.html":{},"guards/RoleGuard.html":{}}}],["config.ts",{"_index":2190,"title":{},"body":{"classes/QuizConfig.html":{},"coverage.html":{}}}],["config.ts:10",{"_index":2203,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:11",{"_index":2202,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:12",{"_index":2200,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:13",{"_index":2201,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:14",{"_index":2191,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:2",{"_index":2192,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:3",{"_index":2193,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:4",{"_index":2194,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:5",{"_index":2196,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:6",{"_index":2195,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:7",{"_index":2197,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:8",{"_index":2198,"title":{},"body":{"classes/QuizConfig.html":{}}}],["config.ts:9",{"_index":2199,"title":{},"body":{"classes/QuizConfig.html":{}}}],["connect",{"_index":575,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":1369,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.error",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["console.error('an",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["console.log(\"index",{"_index":2568,"title":{},"body":{"injectables/StudentService.html":{}}}],["console.log('addduration",{"_index":1389,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('answers",{"_index":1517,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('authguard",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log('authguard',res",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{},"components/MaterialNavComponent.html":{}}}],["console.log('connected",{"_index":818,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["console.log('correctanswercount",{"_index":1518,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('courseid",{"_index":1147,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log('courseid',this.courseid",{"_index":2249,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["console.log('curentuser.admin",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('diff",{"_index":1471,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('disconnected",{"_index":820,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["console.log('expectedrole",{"_index":2471,"title":{},"body":{"guards/RoleGuard.html":{}}}],["console.log('getchathistory",{"_index":822,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["console.log('getlivelacture",{"_index":800,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["console.log('getloginuser",{"_index":1350,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/UserProfileComponent.html":{}}}],["console.log('getofflinesession",{"_index":1857,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log('getofflinesessionfilter',res",{"_index":1139,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["console.log('getquizreportfrommongo',res",{"_index":2449,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log('getvideolecturelogbyid",{"_index":1418,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["console.log('gomeetstatus",{"_index":1439,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('handraise",{"_index":1429,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('hi",{"_index":1551,"title":{},"body":{"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["console.log('hii",{"_index":1550,"title":{},"body":{"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["console.log('i",{"_index":2655,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('id",{"_index":2697,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('in",{"_index":1472,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('isbetween",{"_index":1394,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('isloggedin",{"_index":1493,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('last",{"_index":1380,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('last_active",{"_index":2684,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('lectureid",{"_index":1871,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log('lecturelist",{"_index":1047,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["console.log('live_lecture",{"_index":1422,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('message",{"_index":809,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log('not",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('onplayerstatechange",{"_index":1876,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log('question",{"_index":2654,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('quiz',quiz",{"_index":1402,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('quizdate",{"_index":2443,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log('quizresult",{"_index":2620,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('quizresults",{"_index":2628,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('ratethissession",{"_index":1424,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["console.log('result",{"_index":1140,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["console.log('session",{"_index":1834,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log('study_material",{"_index":2719,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log('submitattendance",{"_index":1416,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('the",{"_index":1129,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["console.log('this.live_lecture",{"_index":827,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["console.log('this.quiz',this.quiz",{"_index":1451,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["console.log('this.quiz.duration",{"_index":2693,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log('this.replyid',this.parent_id",{"_index":846,"title":{},"body":{"components/ChatComponent.html":{}}}],["console.log('this.start",{"_index":1390,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('this.user",{"_index":1425,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log('this.user',this.user",{"_index":1368,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["console.log('videoloddata",{"_index":1867,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log((res",{"_index":2251,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["console.log(`${type",{"_index":2437,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log(`self",{"_index":2436,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log(courseid",{"_index":2691,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log(data",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"components/BookDetailComponent.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/UserData-2.html":{}}}],["console.log(err",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["console.log(event",{"_index":1879,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log(event.data",{"_index":1877,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log(form",{"_index":2108,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["console.log(form.username",{"_index":2524,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log(labels",{"_index":2658,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["console.log(loginurl",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["console.log(message",{"_index":1092,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(res",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["console.log(res.courses",{"_index":1042,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log(res.errors",{"_index":2110,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["console.log(res.last_active",{"_index":2002,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{}}}],["console.log(res.message",{"_index":2526,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log(signupurl",{"_index":2744,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(this.courseid",{"_index":1045,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["console.log(this.date",{"_index":2427,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["console.log(this.lectureid",{"_index":1050,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["console.log(this.quiz",{"_index":1497,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log(this.session",{"_index":1869,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["console.log(this.starttime",{"_index":1447,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log(this.user",{"_index":1356,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log(this.user.courses.includes(quiz.courseid",{"_index":1403,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["console.log(tokenpayload.role",{"_index":2478,"title":{},"body":{"guards/RoleGuard.html":{}}}],["console.log(url",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OfflineSessionService.html":{}}}],["const",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":1957,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData-1.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["constructor(api",{"_index":560,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/OfflineSessionComponent.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuizListComponent.html":{}}}],["constructor(authservice",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/OnlineUsersComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(breakpointobserver",{"_index":1626,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{}}}],["constructor(chatservice",{"_index":759,"title":{},"body":{"components/ChatComponent.html":{}}}],["constructor(data",{"_index":2037,"title":{},"body":{"classes/Option.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{}}}],["constructor(dialogref",{"_index":1901,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["constructor(http",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":48,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SignupComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["constructor(quizservice",{"_index":2395,"title":{},"body":{"components/ReportsComponent.html":{}}}],["constructor(route",{"_index":665,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["constructor(router",{"_index":17,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"guards/RoleGuard.html":{},"components/SignupComponent.html":{}}}],["contain",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["container",{"_index":582,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["container:after",{"_index":915,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["contains",{"_index":1512,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["content",{"_index":830,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizResultModel.html":{},"components/UserProfileComponent.html":{}}}],["content/uploads/2018/04/isro.jpg",{"_index":1619,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["context",{"_index":2783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":1850,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["convenience",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{}}}],["conversation",{"_index":872,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["conversations",{"_index":919,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["cookie",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["copy",{"_index":2859,"title":{},"body":{"index.html":{}}}],["cora",{"_index":1989,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["cordova",{"_index":2802,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova\\server",{"_index":2912,"title":{},"body":{"index.html":{}}}],["cordova\\src\\app\\components",{"_index":2939,"title":{},"body":{"index.html":{}}}],["core",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1491,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-2.html":{}}}],["correct').length",{"_index":1516,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["correctanswer",{"_index":2595,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["correctanswercount",{"_index":1513,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizResultModel.html":{}}}],["cors",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":1339,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["course",{"_index":2235,"title":{},"body":{"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{}}}],["course.fullname",{"_index":1054,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["course.id",{"_index":1053,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["course_id",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["courseid",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["courselist",{"_index":1024,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"components/UserProfileComponent.html":{}}}],["courses",{"_index":2328,"title":{},"body":{"injectables/QuizService-1.html":{},"components/UserProfileComponent.html":{}}}],["courses:res.courses",{"_index":1354,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["cover",{"_index":1620,"title":{},"body":{"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/SignupComponent.html":{}}}],["coverage",{"_index":2746,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookCreateComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["create.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":609,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create.component.scss",{"_index":608,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create.component.ts",{"_index":607,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:13",{"_index":624,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:14",{"_index":626,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create.component.ts:15",{"_index":628,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create.component.ts:16",{"_index":625,"title":{},"body":{"components/BookCreateComponent.html":{},"components/QuizCreateComponent.html":{}}}],["create.component.ts:17",{"_index":622,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:18",{"_index":627,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:19",{"_index":616,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:20",{"_index":2232,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:21",{"_index":2089,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["create.component.ts:23",{"_index":617,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:34",{"_index":620,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["create.component.ts:37",{"_index":2092,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["create.component.ts:41",{"_index":2086,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["create.component.ts:45",{"_index":2233,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["create.component.ts:51",{"_index":2088,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["create.component.ts:55",{"_index":2090,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["create/book",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/BookCreateComponent.html":{},"coverage.html":{}}}],["create/question",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionCreateComponent.html":{},"coverage.html":{}}}],["create/quiz",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":2069,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionEditComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{}}}],["created:string",{"_index":2147,"title":{},"body":{"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["created_at",{"_index":835,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizResultModel.html":{},"interfaces/UserData-2.html":{}}}],["created_by",{"_index":2188,"title":{},"body":{"interfaces/QuizChatModel.html":{},"interfaces/QuizResultModel.html":{}}}],["createnewuser",{"_index":2768,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createnewuser(id",{"_index":2014,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"miscellaneous/functions.html":{}}}],["createnewuser(quizresult",{"_index":2699,"title":{},"body":{"interfaces/UserData-2.html":{},"miscellaneous/functions.html":{}}}],["creator",{"_index":2262,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["credentials",{"_index":1199,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["criteria",{"_index":2372,"title":{},"body":{"components/RatingComponent.html":{}}}],["curentuser",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["curentuser.admin",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["current",{"_index":2383,"title":{},"body":{"components/RatingComponent.html":{}}}],["currentindex",{"_index":1269,"title":{},"body":{"injectables/HelperService.html":{}}}],["currentuser",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/JwtInterceptor.html":{}}}],["currentuser.token",{"_index":1280,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["currentusersubject",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["currentuservalue",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["cursor",{"_index":921,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["custom",{"_index":1756,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["d",{"_index":2428,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["d:\\angular\\ng8",{"_index":2911,"title":{},"body":{"index.html":{}}}],["dark",{"_index":1720,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["dashboard",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialDashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.html",{"_index":1624,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1623,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1622,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:12",{"_index":1634,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["dashboard.component.ts:30",{"_index":1628,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["dashboard/material",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MaterialDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/BookDetailComponent.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"guards/RoleGuard.html":{},"injectables/StudentService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data._id",{"_index":714,"title":{},"body":{"components/BookEditComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"components/QuizEditComponent.html":{}}}],["data.allowback",{"_index":2207,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.allowreview",{"_index":2209,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.author",{"_index":719,"title":{},"body":{"components/BookEditComponent.html":{}}}],["data.automove",{"_index":2211,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.autosubmit",{"_index":2214,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.courseid",{"_index":2180,"title":{},"body":{"classes/Quiz.html":{},"components/QuizEditComponent.html":{}}}],["data.created",{"_index":2155,"title":{},"body":{"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["data.creator",{"_index":2266,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["data.description",{"_index":718,"title":{},"body":{"components/BookEditComponent.html":{},"classes/Quiz.html":{},"components/QuizEditComponent.html":{}}}],["data.duration",{"_index":2212,"title":{},"body":{"classes/QuizConfig.html":{},"components/QuizEditComponent.html":{}}}],["data.isanswer",{"_index":2046,"title":{},"body":{"classes/Option.html":{}}}],["data.isbn",{"_index":716,"title":{},"body":{"components/BookEditComponent.html":{}}}],["data.message",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.name",{"_index":1909,"title":{},"body":{"components/OfflineSessionDialog.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"components/QuizEditComponent.html":{}}}],["data.offlinesessions",{"_index":1858,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["data.offlinesessions.course_id",{"_index":1864,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["data.offlinesessions.lecture_id",{"_index":1863,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["data.offlinesessions.off_lecture_url",{"_index":1860,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["data.options",{"_index":2152,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["data.options.foreach(o",{"_index":2059,"title":{},"body":{"classes/Question.html":{}}}],["data.pagesize",{"_index":2216,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.published_year",{"_index":721,"title":{},"body":{"components/BookEditComponent.html":{}}}],["data.publisher",{"_index":720,"title":{},"body":{"components/BookEditComponent.html":{}}}],["data.qoption[tooltipitem[0].index",{"_index":2681,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["data.questionid",{"_index":2044,"title":{},"body":{"classes/Option.html":{}}}],["data.questions",{"_index":2265,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["data.questions.foreach(q",{"_index":2184,"title":{},"body":{"classes/Quiz.html":{}}}],["data.questiontypeid",{"_index":2057,"title":{},"body":{"classes/Question.html":{}}}],["data.quiz_id",{"_index":2151,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["data.requiredall",{"_index":2218,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.richtext",{"_index":2220,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.showclock",{"_index":2226,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.showpager",{"_index":2228,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.shuffleoptions",{"_index":2224,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.shufflequestions",{"_index":2222,"title":{},"body":{"classes/QuizConfig.html":{}}}],["data.status",{"_index":2154,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["data.success",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["data.title",{"_index":717,"title":{},"body":{"components/BookEditComponent.html":{}}}],["data.type",{"_index":2153,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["data/aspnet.json",{"_index":2297,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["data/csharp.json",{"_index":2299,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["data/designpatterns.json",{"_index":2302,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["databse",{"_index":2917,"title":{},"body":{"index.html":{}}}],["datachart",{"_index":2633,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["datachart[qi",{"_index":2640,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["datachart[qi][index",{"_index":2649,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["datasets",{"_index":2593,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["datasource",{"_index":558,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["date",{"_index":687,"title":{},"body":{"components/BookDetailComponent.html":{},"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["date()).toisostring",{"_index":2417,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["date(res.last_played",{"_index":1376,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["date(this.user.lastactive",{"_index":1378,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["date:'h:mm",{"_index":870,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["date:'h:mm:ss",{"_index":2029,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{}}}],["date:\\'h:mm",{"_index":1019,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["date:\\'h:mm:ss",{"_index":2034,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{}}}],["dd",{"_index":1890,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["dd2c00",{"_index":2354,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decode",{"_index":2474,"title":{},"body":{"guards/RoleGuard.html":{}}}],["decode(token",{"_index":2477,"title":{},"body":{"guards/RoleGuard.html":{}}}],["decorators",{"_index":1905,"title":{},"body":{"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["deep",{"_index":886,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["default",{"_index":29,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1181,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delayed",{"_index":1188,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["delete",{"_index":690,"title":{},"body":{"components/BookDetailComponent.html":{},"components/ChatComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{}}}],["delete_forever",{"_index":866,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["deletebook",{"_index":663,"title":{},"body":{"components/BookDetailComponent.html":{},"injectables/BookService.html":{}}}],["deletebook(id",{"_index":668,"title":{},"body":{"components/BookDetailComponent.html":{},"injectables/BookService.html":{}}}],["deletechoice",{"_index":2084,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["deletechoice(i",{"_index":2087,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["deletemessage",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["deletemessage(lecture_id",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["deletequestion",{"_index":2118,"title":{},"body":{"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["deletequestion(id",{"_index":2120,"title":{},"body":{"components/QuestionDetailComponent.html":{},"injectables/QuestionService.html":{}}}],["deletequiz",{"_index":2306,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["deletequiz(id",{"_index":2312,"title":{},"body":{"injectables/QuizService-1.html":{},"interfaces/UserData-2.html":{}}}],["deletequizlog",{"_index":1528,"title":{},"body":{"injectables/LogService.html":{}}}],["deletequizlog(id",{"_index":1535,"title":{},"body":{"injectables/LogService.html":{}}}],["deletesession",{"_index":1914,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["deletesession(id",{"_index":1919,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["deletestudent",{"_index":2543,"title":{},"body":{"injectables/StudentService.html":{}}}],["deletestudent(index",{"_index":2549,"title":{},"body":{"injectables/StudentService.html":{}}}],["dematerialize",{"_index":1184,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["dependencies",{"_index":179,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":2369,"title":{},"body":{"components/RatingComponent.html":{}}}],["deploy",{"_index":2868,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2866,"title":{},"body":{"index.html":{}}}],["description",{"_index":611,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"interfaces/UserData-2.html":{}}}],["description:string",{"_index":634,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["design",{"_index":2303,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["detail",{"_index":660,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["detail'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["detail.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":662,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["detail.component.scss",{"_index":661,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["detail.component.ts",{"_index":659,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["detail.component.ts:113",{"_index":1799,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:12",{"_index":667,"title":{},"body":{"components/BookDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":1798,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:140",{"_index":1809,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:15",{"_index":1810,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1808,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:16",{"_index":672,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:164",{"_index":1806,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:17",{"_index":1818,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:175",{"_index":1802,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:18",{"_index":1811,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":1812,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":671,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":1814,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":1815,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":1817,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":1820,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":1813,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1819,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":669,"title":{},"body":{"components/BookDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":1816,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":1797,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:46",{"_index":1803,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:56",{"_index":1804,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail.component.ts:84",{"_index":1801,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["detail/book",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/BookDetailComponent.html":{},"coverage.html":{}}}],["detail/question",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionDetailComponent.html":{},"coverage.html":{}}}],["detail/quiz",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"components/StudentDetailsComponent.html":{}}}],["details'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["details.component",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.html",{"_index":2535,"title":{},"body":{"components/StudentDetailsComponent.html":{}}}],["details.component.scss",{"_index":2534,"title":{},"body":{"components/StudentDetailsComponent.html":{}}}],["details.component.ts",{"_index":2533,"title":{},"body":{"components/StudentDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:12",{"_index":2537,"title":{},"body":{"components/StudentDetailsComponent.html":{}}}],["details.component.ts:8",{"_index":2536,"title":{},"body":{"components/StudentDetailsComponent.html":{}}}],["details/:id",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dev",{"_index":2891,"title":{},"body":{"index.html":{}}}],["development",{"_index":2862,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devices",{"_index":1012,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog",{"_index":1122,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["dialog'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.html",{"_index":1141,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["dialogdata",{"_index":1105,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"coverage.html":{}}}],["dialogref",{"_index":1142,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["diff",{"_index":1468,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["direction",{"_index":585,"title":{},"body":{"components/BookComponent.html":{},"components/OfflineSessionComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["directive",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2899,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2904,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1734,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["disabled",{"_index":1345,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["disconnect",{"_index":576,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"miscellaneous/enumerations.html":{}}}],["display",{"_index":583,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{},"components/SidebarComponent.html":{},"interfaces/UserData-2.html":{}}}],["displayedcolumns",{"_index":559,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["dist",{"_index":2903,"title":{},"body":{"index.html":{}}}],["div",{"_index":1787,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["divider",{"_index":889,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["doc",{"_index":1821,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["doc.body.appendchild(playerapiscript",{"_index":1829,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["doc.createelement('script",{"_index":1824,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["document.getelementbyid(\"mat",{"_index":843,"title":{},"body":{"components/ChatComponent.html":{}}}],["document.getelementbyid('conv",{"_index":812,"title":{},"body":{"components/ChatComponent.html":{}}}],["document.getelementbyid(id",{"_index":841,"title":{},"body":{"components/ChatComponent.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":1718,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["document.getelementsbytagname('script')[0",{"_index":1831,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["documentation",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["domsanitizer",{"_index":2489,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["doregisterstudent",{"_index":2544,"title":{},"body":{"injectables/StudentService.html":{}}}],["doregisterstudent(data",{"_index":2551,"title":{},"body":{"injectables/StudentService.html":{}}}],["download",{"_index":2881,"title":{},"body":{"index.html":{}}}],["drawer",{"_index":882,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["drawer.mat",{"_index":881,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["dt",{"_index":1375,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["dt.getdate",{"_index":2424,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["dt.getfullyear",{"_index":2422,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["dt.getminutes()}:${dt.getseconds",{"_index":1382,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["dt.getmonth",{"_index":2423,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["dt::after",{"_index":1889,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["duplicateuser",{"_index":1245,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["duration",{"_index":1317,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/UserData-2.html":{}}}],["dynamic",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2589,"title":{},"body":{"interfaces/UserData-2.html":{},"index.html":{}}}],["e1ffc7",{"_index":999,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["ease",{"_index":967,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["easy",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{}}}],["edit",{"_index":689,"title":{},"body":{"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["edit.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit.component.html",{"_index":694,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.scss",{"_index":693,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts",{"_index":692,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:13",{"_index":704,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:14",{"_index":706,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:15",{"_index":707,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:16",{"_index":709,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:17",{"_index":705,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:18",{"_index":703,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:19",{"_index":708,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:20",{"_index":697,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:21",{"_index":2141,"title":{},"body":{"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["edit.component.ts:22",{"_index":2133,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:24",{"_index":701,"title":{},"body":{"components/BookEditComponent.html":{}}}],["edit.component.ts:25",{"_index":2257,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["edit.component.ts:26",{"_index":2138,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:36",{"_index":700,"title":{},"body":{"components/BookEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2137,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2256,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["edit.component.ts:50",{"_index":702,"title":{},"body":{"components/BookEditComponent.html":{}}}],["edit.component.ts:59",{"_index":2142,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:61",{"_index":698,"title":{},"body":{"components/BookEditComponent.html":{}}}],["edit.component.ts:62",{"_index":2258,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["edit.component.ts:63",{"_index":2134,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:73",{"_index":2135,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:75",{"_index":2259,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["edit.component.ts:77",{"_index":2139,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit.component.ts:91",{"_index":2140,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["edit/:id",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["edit/book",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/BookEditComponent.html":{},"coverage.html":{}}}],["edit/question",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuestionEditComponent.html":{},"coverage.html":{}}}],["edit/quiz",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QuizEditComponent.html":{},"coverage.html":{}}}],["edusat_lms",{"_index":2919,"title":{},"body":{"index.html":{}}}],["efe7dd",{"_index":905,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["ejidxofupc4",{"_index":1882,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["electronic",{"_index":2852,"title":{},"body":{"index.html":{}}}],["element",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["element.author",{"_index":580,"title":{},"body":{"components/BookComponent.html":{}}}],["element.created",{"_index":2079,"title":{},"body":{"components/QuestionComponent.html":{}}}],["element.isbn",{"_index":578,"title":{},"body":{"components/BookComponent.html":{}}}],["element.name",{"_index":2076,"title":{},"body":{"components/QuestionComponent.html":{}}}],["element.status",{"_index":2078,"title":{},"body":{"components/QuestionComponent.html":{}}}],["element.title",{"_index":579,"title":{},"body":{"components/BookComponent.html":{}}}],["element.type",{"_index":2077,"title":{},"body":{"components/QuestionComponent.html":{}}}],["elizabeth",{"_index":1995,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["ellapsedtime",{"_index":1343,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["elmnt",{"_index":840,"title":{},"body":{"components/ChatComponent.html":{}}}],["elmnt.scrollintoview",{"_index":842,"title":{},"body":{"components/ChatComponent.html":{}}}],["email",{"_index":2511,"title":{},"body":{"components/SignupComponent.html":{},"interfaces/UserData-2.html":{}}}],["email:quiz.from.email",{"_index":1407,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["email:res.user.email",{"_index":1353,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["email:string",{"_index":2522,"title":{},"body":{"components/SignupComponent.html":{}}}],["embedurl",{"_index":1299,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["empty",{"_index":890,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["enablejsapi=1&rel=0",{"_index":1861,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["end",{"_index":1004,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["endtime",{"_index":1342,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["enter",{"_index":647,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["entrycomponents",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":2349,"title":{},"body":{"components/RatingComponent.html":{}}}],["enumerations",{"_index":2837,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":738,"title":{},"body":{"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["environment.apiurl}/book",{"_index":739,"title":{},"body":{"injectables/BookService.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/chat",{"_index":1083,"title":{},"body":{"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/chat/${lecture_id}/${course_id",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/chat/${lecture_id}/${course_id}/${id",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/log",{"_index":1548,"title":{},"body":{"injectables/LogService.html":{},"injectables/ReportsService.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/offline",{"_index":1928,"title":{},"body":{"injectables/OfflineSessionService.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/question",{"_index":2172,"title":{},"body":{"injectables/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/quiz",{"_index":2327,"title":{},"body":{"injectables/QuizService-1.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/users",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["environment.phpapiurl",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"miscellaneous/variables.html":{}}}],["environment.phpapiurl}/log",{"_index":1549,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":2367,"title":{},"body":{"components/RatingComponent.html":{}}}],["err",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["err.error.message",{"_index":1165,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.status",{"_index":1161,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":1166,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":13,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["error(message",{"_index":26,"title":{},"body":{"injectables/AlertService.html":{}}}],["error.error",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["error.error.message",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["error.status",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["errorevent",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["errorinterceptor",{"_index":193,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["event",{"_index":54,"title":{},"body":{"injectables/AlertService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/ReportsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["event.target.cuevideobyid",{"_index":1880,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["event.target.innerwidth",{"_index":1128,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["event.target.playvideo",{"_index":1881,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["event.value",{"_index":2438,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["event.value.getdate",{"_index":2435,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["event.value.getfullyear",{"_index":2433,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["event.value.getmonth",{"_index":2434,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["eventemitter",{"_index":2341,"title":{},"body":{"components/RatingComponent.html":{}}}],["events",{"_index":1841,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["example",{"_index":581,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{}}}],["exclude",{"_index":2621,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["expand",{"_index":1644,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["expand_more",{"_index":865,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["expectedrole",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuard.html":{}}}],["expiration",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresat",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{}}}],["export",{"_index":46,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["extend",{"_index":1259,"title":{},"body":{"injectables/HelperService.html":{}}}],["extend(out",{"_index":1262,"title":{},"body":{"injectables/HelperService.html":{}}}],["extends",{"_index":573,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["extractdata",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["extractdata(res",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["f",{"_index":1560,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/UserData-2.html":{}}}],["f1f1f1",{"_index":2727,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["f44336",{"_index":2356,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fab",{"_index":1785,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["facing",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["faculty",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["facultyaddcomponent",{"_index":124,"title":{"components/FacultyAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fafafa",{"_index":929,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["fake",{"_index":1210,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fakebackendinterceptor",{"_index":1175,"title":{"interceptors/FakeBackendInterceptor.html":{}},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fakebackendprovider",{"_index":2752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":32,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"guards/RoleGuard.html":{},"injectables/ThemeService.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1743,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["fetched",{"_index":2564,"title":{},"body":{"injectables/StudentService.html":{}}}],["ff4081",{"_index":2358,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ffca28",{"_index":2353,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fff",{"_index":984,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SidebarComponent.html":{}}}],["ffffff",{"_index":2733,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["fiber_manual_recordlive",{"_index":1885,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["field",{"_index":1665,"title":{},"body":{"modules/MaterialModule.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["fields",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["file_download",{"_index":2725,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["files",{"_index":2895,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1959,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":1911,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["filter_list",{"_index":1783,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["filteredusers",{"_index":1200,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["filteredusers.length",{"_index":1206,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["filteredusers[0",{"_index":1211,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["filtervalue",{"_index":1941,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["filtervalue.trim().tolowercase",{"_index":2011,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["find",{"_index":1197,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["fingerprint",{"_index":1724,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["first",{"_index":1576,"title":{},"body":{"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{}}}],["firstname",{"_index":1213,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"classes/User.html":{}}}],["firstscripttag",{"_index":1830,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["firstscripttag.parentnode.insertbefore(playerapiscript",{"_index":1832,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["fixed",{"_index":923,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["flag",{"_index":2906,"title":{},"body":{"index.html":{}}}],["flex",{"_index":584,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["float",{"_index":953,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["folder",{"_index":2886,"title":{},"body":{"index.html":{}}}],["following",{"_index":2371,"title":{},"body":{"components/RatingComponent.html":{}}}],["font",{"_index":938,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["footer",{"_index":1767,"title":{},"body":{"components/MaterialNavComponent.html":{},"interfaces/UserData-2.html":{}}}],["footerfontstyle",{"_index":2682,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["forces",{"_index":2670,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["forgot",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":621,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{}}}],["formarray",{"_index":2093,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{}}}],["formbuilder",{"_index":615,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["formcontrol",{"_index":629,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData-1.html":{}}}],["formcontrol((new",{"_index":2416,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["formcontrol(new",{"_index":2408,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["formgroup",{"_index":623,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["formgroupdirective",{"_index":630,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["formsmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forum",{"_index":856,"title":{},"body":{"components/ChatComponent.html":{}}}],["fs",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["fuchsia",{"_index":1968,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{}}}],["function",{"_index":1873,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["function(tooltipitem",{"_index":2680,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["functions",{"_index":2846,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2590,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["game",{"_index":2623,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["generaded",{"_index":2931,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2897,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2932,"title":{},"body":{"index.html":{}}}],["generaterandomid",{"_index":2545,"title":{},"body":{"injectables/StudentService.html":{}}}],["get(url",{"_index":2294,"title":{},"body":{"injectables/QuizService.html":{}}}],["getall",{"_index":2292,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["getallstudents",{"_index":2546,"title":{},"body":{"injectables/StudentService.html":{}}}],["getbook",{"_index":696,"title":{},"body":{"components/BookEditComponent.html":{},"injectables/BookService.html":{}}}],["getbook(id",{"_index":699,"title":{},"body":{"components/BookEditComponent.html":{},"injectables/BookService.html":{}}}],["getbookdetails",{"_index":664,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["getbookdetails(id",{"_index":670,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["getbooks",{"_index":725,"title":{},"body":{"injectables/BookService.html":{}}}],["getchart(canvasid",{"_index":2656,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["getchathistory",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["getchathistory(lecture_id",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{}}}],["getchoiceforms",{"_index":2091,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["getcolor",{"_index":2334,"title":{},"body":{"components/RatingComponent.html":{}}}],["getcolor(index",{"_index":2342,"title":{},"body":{"components/RatingComponent.html":{}}}],["getcourses",{"_index":2307,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["getcurrentuservalue",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getexpiration",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["getf",{"_index":1574,"title":{},"body":{"components/LoginComponent.html":{}}}],["getlastactiveuserbycourseid",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReportsService.html":{}}}],["getlastactiveuserbycourseid(courseid",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-2.html":{}}}],["getlastactiveusers",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{}}}],["getlastplayedquiz",{"_index":1373,"title":{},"body":{"interfaces/LiveLecture.html":{},"injectables/QuizService-1.html":{}}}],["getlecturesbycourseid",{"_index":1027,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["getlivelectureurl",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["getlogininfofromedusatlms",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["getloginuser",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["getmessage",{"_index":14,"title":{},"body":{"injectables/AlertService.html":{}}}],["getofflinesession",{"_index":1915,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["getofflinesession(id",{"_index":1922,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["getofflinesessiondetail",{"_index":1792,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["getofflinesessiondetail(id",{"_index":1800,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["getofflinesessionfilter",{"_index":1916,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["getofflinesessionfilter(data",{"_index":1924,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["getofflinesessions",{"_index":1917,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["getpublishedlecturebycourseid",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpublishedlecturebycourseid(course_id",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["getquestion",{"_index":2131,"title":{},"body":{"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestion(id",{"_index":2136,"title":{},"body":{"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{}}}],["getquestiondetails",{"_index":2119,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["getquestiondetails(id",{"_index":2121,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["getquestions",{"_index":2159,"title":{},"body":{"injectables/QuestionService.html":{}}}],["getquiz",{"_index":2253,"title":{},"body":{"components/QuizEditComponent.html":{},"injectables/QuizService-1.html":{}}}],["getquiz(id",{"_index":2255,"title":{},"body":{"components/QuizEditComponent.html":{},"injectables/QuizService-1.html":{}}}],["getquizbycourseid",{"_index":2248,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"injectables/QuizService-1.html":{}}}],["getquizbycourseid(id",{"_index":2319,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["getquizdetails(id",{"_index":2687,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["getquizlog",{"_index":1529,"title":{},"body":{"injectables/LogService.html":{}}}],["getquizlog(id",{"_index":1538,"title":{},"body":{"injectables/LogService.html":{}}}],["getquizlogs",{"_index":1530,"title":{},"body":{"injectables/LogService.html":{}}}],["getquizreport",{"_index":2393,"title":{},"body":{"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{}}}],["getquizreport(date",{"_index":2460,"title":{},"body":{"injectables/ReportsService.html":{}}}],["getquizreportfrommongo",{"_index":2394,"title":{},"body":{"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{}}}],["getquizreportfrommongo(date",{"_index":2462,"title":{},"body":{"injectables/ReportsService.html":{}}}],["getquizs",{"_index":2308,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["getrandomid",{"_index":753,"title":{},"body":{"components/ChatComponent.html":{}}}],["getsessionbycourseid",{"_index":1900,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["getsessionbycourseid(course_id",{"_index":1146,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["getstudentdetails",{"_index":2547,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudentdetails(index",{"_index":2555,"title":{},"body":{"injectables/StudentService.html":{}}}],["getstudymaterialbycourselist",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"components/UserProfileComponent.html":{}}}],["getstudymaterialbycourselist(courselist",{"_index":2710,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getstudymaterialbycourselist(data",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["getter",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{}}}],["getting",{"_index":2850,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuserroles",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuserroles(user",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvideo",{"_index":1793,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["getvideolecturelogbyid",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{}}}],["getvideolecturelogbyid(data",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["globally",{"_index":2922,"title":{},"body":{"index.html":{}}}],["goto(index",{"_index":1487,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["gotomeeting",{"_index":1347,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["graph",{"_index":2952,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1975,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["greater",{"_index":2364,"title":{},"body":{"components/RatingComponent.html":{}}}],["green",{"_index":1966,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grey",{"_index":2350,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["grid",{"_index":1646,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["group",{"_index":1897,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["guard",{"_index":284,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["guards",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["guide",{"_index":2937,"title":{},"body":{"index.html":{}}}],["h1",{"_index":918,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["h2",{"_index":896,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["hand",{"_index":1426,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["hand_raise",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["handle",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["handleerror",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["handleerror(error",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["handraise",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{}}}],["handraise(data",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["handraisewaiting",{"_index":1346,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["happened",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":895,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SignupComponent.html":{}}}],["headers",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":588,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{},"components/SidebarComponent.html":{}}}],["height:250px",{"_index":2732,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["helperservice",{"_index":1256,"title":{"injectables/HelperService.html":{}},"body":{"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"coverage.html":{}}}],["here",{"_index":1511,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{}}}],["hi",{"_index":1908,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["hidden",{"_index":913,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["hide",{"_index":1556,"title":{},"body":{"components/LoginComponent.html":{}}}],["history",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"index.html":{}}}],["history'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["history.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["history.component.html",{"_index":1023,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.scss",{"_index":1022,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts",{"_index":1021,"title":{},"body":{"components/ChatHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:13",{"_index":1033,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:14",{"_index":1038,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:15",{"_index":1039,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:16",{"_index":1034,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:17",{"_index":1035,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:18",{"_index":1036,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:19",{"_index":1037,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:20",{"_index":1029,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:24",{"_index":1032,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:45",{"_index":1031,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.component.ts:57",{"_index":1030,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["history.mat",{"_index":898,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["history/chat",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatHistoryComponent.html":{},"coverage.html":{}}}],["home",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{}}}],["home/ubuntu/angular/ng8",{"_index":2913,"title":{},"body":{"index.html":{}}}],["host",{"_index":2908,"title":{},"body":{"index.html":{}}}],["html",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["http",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["http://192.168.17.35/quizapi/public/api",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://192.168.17.35:3000",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2893,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["httperrorresponse",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["httpevent",{"_index":1158,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":1155,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheaders",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["httpheaders({'content",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":1159,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpoptions",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions).pipe",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{}}}],["httprequest",{"_index":1154,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpresponse",{"_index":1180,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"injectables/QuizService.html":{}}}],["https://api.adorable.io/avatars/285",{"_index":790,"title":{},"body":{"components/ChatComponent.html":{},"miscellaneous/variables.html":{}}}],["https://eclass.iirs.gov.in/quizapi/public/api",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://eclass.iirs.gov.in:3000",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/embed",{"_index":1300,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1828,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["i['answered",{"_index":1515,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["icon",{"_index":932,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["id",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/functions.html":{}}}],["id.tostring",{"_index":2018,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["id:string",{"_index":710,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["identifier",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["if(index",{"_index":2569,"title":{},"body":{"injectables/StudentService.html":{}}}],["if(item.isanswer",{"_index":2648,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["if(item.selected",{"_index":2650,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["if(localstorage.getitem('students",{"_index":2561,"title":{},"body":{"injectables/StudentService.html":{}}}],["iframe",{"_index":1893,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["iirs",{"_index":2527,"title":{},"body":{"components/SignupComponent.html":{}}}],["image",{"_index":1617,"title":{},"body":{"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["img",{"_index":2731,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["img.center",{"_index":1616,"title":{},"body":{"components/LoginComponent.html":{}}}],["implemented",{"_index":1224,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["implements",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["import",{"_index":41,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["import_contacts",{"_index":1727,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["important",{"_index":598,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["imports",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":1219,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2636,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["indian",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["indicates",{"_index":1319,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["initialize",{"_index":1716,"title":{},"body":{"components/MaterialNavComponent.html":{},"injectables/ThemeService.html":{}}}],["initioconnection",{"_index":754,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["inject",{"_index":1109,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["inject(mat_dialog_data",{"_index":1143,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/HelperService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/HelperService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":951,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["input",{"_index":844,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/RatingComponent.html":{}}}],["inputmessage.value.length}}/640",{"_index":876,"title":{},"body":{"components/ChatComponent.html":{}}}],["inputs",{"_index":2336,"title":{},"body":{"components/RatingComponent.html":{}}}],["inset",{"_index":911,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["inside",{"_index":2933,"title":{},"body":{"index.html":{}}}],["install",{"_index":2873,"title":{},"body":{"index.html":{}}}],["installand",{"_index":2888,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2921,"title":{},"body":{"index.html":{}}}],["installing",{"_index":2880,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":55,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["institute",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{}}}],["instructions",{"_index":2858,"title":{},"body":{"index.html":{}}}],["interaction",{"_index":1732,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["intercept",{"_index":1151,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":1153,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":1148,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1149,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interface",{"_index":1104,"title":{"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"interfaces/QuizResultModel.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}},"body":{"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["interfaces",{"_index":1106,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"interfaces/QuizResultModel.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"overview.html":{}}}],["invalid",{"_index":1230,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["io",{"_index":1086,"title":{},"body":{"injectables/ChatService.html":{}}}],["io(this.url",{"_index":1091,"title":{},"body":{"injectables/ChatService.html":{}}}],["ioconnection",{"_index":747,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData-2.html":{}}}],["ip",{"_index":2909,"title":{},"body":{"index.html":{}}}],["isabella",{"_index":1987,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["isaboverating",{"_index":2335,"title":{},"body":{"components/RatingComponent.html":{}}}],["isaboverating(index",{"_index":2344,"title":{},"body":{"components/RatingComponent.html":{}}}],["isadmin",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["isanswer",{"_index":2036,"title":{},"body":{"classes/Option.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["isbetween",{"_index":1392,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["isbn",{"_index":566,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["isbn:string",{"_index":632,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["iscorrect(question",{"_index":1488,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["isdarktheme",{"_index":1703,"title":{},"body":{"components/MaterialNavComponent.html":{},"injectables/ThemeService.html":{}}}],["ishandset",{"_index":1704,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["isla",{"_index":1985,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["isloggedin",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedout",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["isro",{"_index":2528,"title":{},"body":{"components/SignupComponent.html":{}}}],["item",{"_index":920,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["item.name",{"_index":2647,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["items",{"_index":892,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["items.questions.foreach((question",{"_index":2637,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["jack",{"_index":1982,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["jasper",{"_index":1988,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["joined",{"_index":871,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["json.parse",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(expiration",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":1279,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["json.parse(localstorage.getitem('students",{"_index":2566,"title":{},"body":{"injectables/StudentService.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":1187,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["json.stringify(expiresat.valueof",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(user",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["json.stringify(users",{"_index":1254,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["jsonwebtoken",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":894,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["jwt",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["jwtinterceptor",{"_index":194,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":57,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthenticationService.html":{}}}],["keepafternavigationchange",{"_index":10,"title":{},"body":{"injectables/AlertService.html":{}}}],["kept",{"_index":2882,"title":{},"body":{"index.html":{}}}],["keys).length",{"_index":860,"title":{},"body":{"components/ChatComponent.html":{}}}],["knowledge",{"_index":2855,"title":{},"body":{"index.html":{}}}],["label",{"_index":888,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["labels",{"_index":2592,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["labelschart",{"_index":2632,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["labelschart[qi",{"_index":2641,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["labelschart[qi][index",{"_index":2644,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["labelstring",{"_index":2666,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["landscape",{"_index":1013,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["last",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"interfaces/LiveLecture.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"injectables/ReportsService.html":{}}}],["last_active",{"_index":1947,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{}}}],["last_played",{"_index":2695,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["lastactive:res.user.last_active",{"_index":1355,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["lastmessage",{"_index":836,"title":{},"body":{"components/ChatComponent.html":{}}}],["lastname",{"_index":1215,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"classes/User.html":{}}}],["later",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["layoutmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["learning",{"_index":2854,"title":{},"body":{"index.html":{}}}],["lecture",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["lecture.session_name",{"_index":1055,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["lecture_id",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["lecture_url",{"_index":1286,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["lectureid",{"_index":1025,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["lecturelist",{"_index":1026,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["left",{"_index":961,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["length",{"_index":1247,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["less",{"_index":2368,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/variables.html":{}}}],["levi",{"_index":1990,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":2505,"title":{},"body":{"components/SidebarComponent.html":{}}}],["lime",{"_index":1969,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":936,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["list",{"_index":646,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/SidebarComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"index.html":{}}}],["list'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["list.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.html",{"_index":2242,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/StudentListComponent.html":{}}}],["list.component.scss",{"_index":2243,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/StudentListComponent.html":{}}}],["list.component.ts",{"_index":2241,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/StudentListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":2540,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:26",{"_index":2280,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:27",{"_index":2278,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:28",{"_index":2274,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:29",{"_index":2273,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:30",{"_index":2281,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:31",{"_index":2277,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:32",{"_index":2276,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:35",{"_index":2275,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:37",{"_index":2279,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:38",{"_index":2268,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:55",{"_index":2272,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:67",{"_index":2270,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:77",{"_index":2271,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.component.ts:8",{"_index":2539,"title":{},"body":{"components/StudentListComponent.html":{}}}],["list.component.ts:91",{"_index":2269,"title":{},"body":{"components/QuizListComponent.html":{}}}],["list.session_name",{"_index":2724,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["list/quiz",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"coverage.html":{}}}],["live",{"_index":2869,"title":{},"body":{"index.html":{}}}],["live_lecture",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["live_lecture_url",{"_index":1298,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["livelecture",{"_index":1284,"title":{"interfaces/LiveLecture.html":{}},"body":{"interfaces/LiveLecture.html":{},"coverage.html":{}}}],["loading",{"_index":1557,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadquiz(quizid",{"_index":1444,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["local",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"index.html":{}}}],["locally",{"_index":2928,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(\"currentuser",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem(\"expires_at",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('id_token",{"_index":2473,"title":{},"body":{"guards/RoleGuard.html":{}}}],["localstorage.getitem('students",{"_index":2562,"title":{},"body":{"injectables/StudentService.html":{}}}],["localstorage.removeitem(\"currentuser",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(\"expires_at",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem(\"id_token",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(\"expires_at",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('currentuser",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('id_token",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('users",{"_index":1253,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["located",{"_index":2915,"title":{},"body":{"index.html":{}}}],["location",{"_index":59,"title":{},"body":{"injectables/AlertService.html":{}}}],["location.reload(true",{"_index":1164,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["log",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/UserProfileComponent.html":{}}}],["logged",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{}}}],["loggedin",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{}}}],["login'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(username",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.html",{"_index":1555,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1554,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":127,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1558,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginurl",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["loginuser",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["logout",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"components/MaterialNavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["logservice",{"_index":1289,"title":{"injectables/LogService.html":{}},"body":{"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["machine",{"_index":2861,"title":{},"body":{"index.html":{}}}],["maia",{"_index":1977,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":2729,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["map",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["map(result",{"_index":1712,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["map(roles",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(this.extractdata",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{}}}],["margin",{"_index":604,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["maroon",{"_index":1962,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":880,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["mat_dialog_data",{"_index":1116,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["matbadgemodule",{"_index":1651,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1653,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":1655,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcheckboxmodule",{"_index":1657,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matchedusers",{"_index":1236,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matchedusers.length",{"_index":1237,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matchedusers[0",{"_index":1238,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["matches",{"_index":1198,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/MaterialDashboardComponent.html":{}}}],["matching",{"_index":65,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickerinputevent",{"_index":2399,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["matdatepickermodule",{"_index":1697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":1114,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["matdialogmodule",{"_index":1659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":1115,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["material",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["material/material.module",{"_index":2496,"title":{},"body":{"modules/SharedModule.html":{}}}],["materialdashboardcomponent",{"_index":129,"title":{"components/MaterialDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["materialize",{"_index":1183,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["materialmodule",{"_index":1647,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["materialnavcomponent",{"_index":132,"title":{"components/MaterialNavComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matexpansionmodule",{"_index":1661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":1663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":1666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["math.floor(math.random",{"_index":825,"title":{},"body":{"components/ChatComponent.html":{},"injectables/HelperService.html":{}}}],["math.floor(totalseconds",{"_index":1480,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["math.round(math.random",{"_index":2019,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["math.round(totalseconds",{"_index":1481,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["maticonmodule",{"_index":1668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginator",{"_index":1950,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["matpaginatormodule",{"_index":1676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1678,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":1681,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1683,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsort",{"_index":1953,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["matsortmodule",{"_index":1685,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabledatasource",{"_index":1944,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["mattabledatasource(res",{"_index":2247,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["mattabledatasource(res.last_active",{"_index":2005,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{}}}],["mattabledatasource(res.reports",{"_index":2447,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["mattabledatasource(this.quizs",{"_index":2252,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["mattabledatasource(this.resultstable",{"_index":2627,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["mattabledatasource(users",{"_index":2000,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["mattablemodule",{"_index":1687,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":1689,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1691,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattreemodule",{"_index":1693,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":587,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["mdlnew",{"_index":2918,"title":{},"body":{"index.html":{}}}],["means",{"_index":1323,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["media",{"_index":1017,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["members",{"_index":861,"title":{},"body":{"components/ChatComponent.html":{}}}],["menu",{"_index":1723,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["mergemap",{"_index":1182,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["message",{"_index":31,"title":{"interfaces/Message.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"components/SidebarComponent.html":{},"injectables/StudentService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["message.content",{"_index":868,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.content.previoususername",{"_index":873,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.content.username",{"_index":875,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.created_at",{"_index":869,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.from.name",{"_index":867,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.parent_message.parent_content",{"_index":863,"title":{},"body":{"components/ChatComponent.html":{}}}],["message.parent_message.parent_name",{"_index":862,"title":{},"body":{"components/ChatComponent.html":{}}}],["message.received",{"_index":983,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.received:after",{"_index":996,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.sent",{"_index":998,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message.sent:after",{"_index":1000,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message:after",{"_index":947,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message:first",{"_index":982,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["message:string",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["messagecontent",{"_index":748,"title":{},"body":{"components/ChatComponent.html":{}}}],["messages",{"_index":749,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["metadata",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":12,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["mia",{"_index":1993,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":590,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData-2.html":{}}}],["mins",{"_index":1479,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["minute",{"_index":2686,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["miscellaneous",{"_index":2836,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1306,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["models",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["models/chat/action",{"_index":785,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["models/chat/event",{"_index":786,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{}}}],["models/chat/message",{"_index":787,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["models/chat/quiz",{"_index":1088,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{}}}],["models/chat/user",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["models/index",{"_index":1293,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["models/socket/quiz",{"_index":1089,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/UserData-2.html":{}}}],["modestbranding",{"_index":1851,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["module",{"_index":176,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":178,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["moment().isbefore(addduration",{"_index":1391,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["moment().isbefore(this.getexpiration",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment().utcoffset(\"+05:30\").add(user.expiresin,'hours",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["moment(expiresat",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment(res.last_played).add((res.duration",{"_index":1386,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["moment(this.user.lastactive).isbetween(res.last_played",{"_index":1393,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["mongodb",{"_index":2876,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":2821,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":993,"title":{},"body":{"components/ChatComponent.html":{},"components/MaterialDashboardComponent.html":{}}}],["more_vert",{"_index":1643,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{}}}],["morgan",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["move",{"_index":1314,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["multi",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["myfilter",{"_index":2388,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["n",{"_index":1379,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["n.getminutes()}:${n.getseconds",{"_index":1384,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["name",{"_index":23,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":2260,"title":{},"body":{"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["named",{"_index":2914,"title":{},"body":{"index.html":{}}}],["names",{"_index":1976,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["names.length",{"_index":2016,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["names[math.round(math.random",{"_index":2015,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["nav",{"_index":1700,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/SidebarComponent.html":{}}}],["nav'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["nav.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":1702,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.scss",{"_index":1701,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts",{"_index":1699,"title":{},"body":{"components/MaterialNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:14",{"_index":1710,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts:15",{"_index":1714,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts:18",{"_index":1706,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts:20",{"_index":1709,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts:21",{"_index":1707,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav.component.ts:32",{"_index":1708,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["nav/material",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/MaterialNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2892,"title":{},"body":{"index.html":{}}}],["navigationstart",{"_index":43,"title":{},"body":{"injectables/AlertService.html":{}}}],["navy",{"_index":1973,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":2872,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1321,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["network",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["neue\",sans",{"_index":1745,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["new",{"_index":39,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":1242,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["newuser.id",{"_index":1250,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["newuser.username",{"_index":1246,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["next",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{},"guards/RoleGuard.html":{}}}],["next.data.expectedrole",{"_index":2470,"title":{},"body":{"guards/RoleGuard.html":{}}}],["next.handle(request",{"_index":1283,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(err",{"_index":1160,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":885,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1794,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["ngform",{"_index":619,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{}}}],["ngoninit",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":2924,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":2794,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nodemon",{"_index":2920,"title":{},"body":{"index.html":{}}}],["nodemonor",{"_index":2923,"title":{},"body":{"index.html":{}}}],["none",{"_index":1337,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/SidebarComponent.html":{}}}],["normal",{"_index":1747,"title":{},"body":{"components/MaterialNavComponent.html":{},"interfaces/UserData-2.html":{}}}],["note",{"_index":1754,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["notes",{"_index":2867,"title":{},"body":{"index.html":{}}}],["notifications_off",{"_index":1733,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["now",{"_index":874,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["now.gettime",{"_index":1469,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["npm",{"_index":2887,"title":{},"body":{"index.html":{}}}],["null",{"_index":640,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData-2.html":{}}}],["number",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/StudentService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["number(res.videolecturelog.star",{"_index":1421,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["numberofactivesockets",{"_index":1302,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["numofstudent",{"_index":2657,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["numtochar",{"_index":2587,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["object",{"_index":1241,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":36,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/MaterialNavComponent.html":{},"injectables/OfflineSessionService.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{}}}],["observable(observer",{"_index":1096,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next",{"_index":1103,"title":{},"body":{"injectables/ChatService.html":{}}}],["observer.next(data",{"_index":1098,"title":{},"body":{"injectables/ChatService.html":{}}}],["occurred",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["of(new",{"_index":1217,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["of(null).pipe(mergemap",{"_index":1192,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["offline",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["offlinesessioncomponent",{"_index":134,"title":{"components/OfflineSessionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["offlinesessiondetailcomponent",{"_index":137,"title":{"components/OfflineSessionDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["offlinesessiondialog",{"_index":139,"title":{"components/OfflineSessionDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["offlinesessionservice",{"_index":1110,"title":{"injectables/OfflineSessionService.html":{}},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"coverage.html":{}}}],["ok",{"_index":1209,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/OfflineSessionDialog.html":{}}}],["olive",{"_index":1965,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["oliver",{"_index":1986,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["olivia",{"_index":1979,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["on_create",{"_index":2411,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["one",{"_index":1639,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["onevent",{"_index":1062,"title":{},"body":{"injectables/ChatService.html":{}}}],["onevent(event",{"_index":1069,"title":{},"body":{"injectables/ChatService.html":{}}}],["onformsubmit",{"_index":614,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["onformsubmit(form",{"_index":618,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["onformsubmit(form:ngform",{"_index":642,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["oninit",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["online",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"components/UserProfileComponent.html":{}}}],["onlineusers",{"_index":1934,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{}}}],["onlineuserscomponent",{"_index":141,"title":{"components/OnlineUsersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["onmessage",{"_index":1063,"title":{},"body":{"injectables/ChatService.html":{}}}],["onnoclick",{"_index":1144,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["onplayerready",{"_index":1795,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onplayerready(event",{"_index":1805,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onplayerstatechange",{"_index":1796,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onplayerstatechange(event",{"_index":1807,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onquizstart",{"_index":1064,"title":{},"body":{"injectables/ChatService.html":{}}}],["onquizsubmit",{"_index":1065,"title":{},"body":{"injectables/ChatService.html":{}}}],["onready",{"_index":1842,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onresize",{"_index":1770,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["onresize(event",{"_index":1127,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["onstatechange",{"_index":1844,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["onsubmit",{"_index":1492,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["opacity",{"_index":933,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["openfilterdialog",{"_index":1771,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["option",{"_index":994,"title":{"classes/Option.html":{}},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"classes/Option.html":{},"classes/Question.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["option(o",{"_index":2061,"title":{},"body":{"classes/Question.html":{}}}],["option.id",{"_index":1483,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["option.name",{"_index":2128,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"classes/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2048,"title":{},"body":{"classes/Question.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["orange",{"_index":1749,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/HelperService.html":{},"components/OfflineSessionDetailComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":2348,"title":{},"body":{"components/RatingComponent.html":{}}}],["outputs",{"_index":2337,"title":{},"body":{"components/RatingComponent.html":{}}}],["overflow",{"_index":593,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["overview",{"_index":2953,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":897,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["package",{"_index":2786,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":883,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/SidebarComponent.html":{},"components/UserProfileComponent.html":{}}}],["page",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{}}}],["pager",{"_index":1338,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["pagesize",{"_index":1326,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["paginator",{"_index":1935,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["param",{"_index":2689,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":775,"title":{},"body":{"components/ChatComponent.html":{}}}],["params.previoususername",{"_index":854,"title":{},"body":{"components/ChatComponent.html":{}}}],["parent",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["parent_content",{"_index":750,"title":{},"body":{"components/ChatComponent.html":{}}}],["parent_id",{"_index":751,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{}}}],["parent_message",{"_index":832,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/Message.html":{}}}],["parent_name",{"_index":752,"title":{},"body":{"components/ChatComponent.html":{}}}],["parseint(urlparts[urlparts.length",{"_index":1235,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["parser",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["parsetime(totalseconds",{"_index":1478,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["participant",{"_index":2667,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["passed",{"_index":2468,"title":{},"body":{"guards/RoleGuard.html":{}}}],["password",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["password:string",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["path",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterns",{"_index":2304,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["payload",{"_index":2475,"title":{},"body":{"guards/RoleGuard.html":{}}}],["per",{"_index":1640,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["perfect",{"_index":1009,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["perspective(800px",{"_index":974,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["phones",{"_index":1014,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["php",{"_index":1525,"title":{},"body":{"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"index.html":{}}}],["phpapiurl",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":469,"title":{"pipes/SafeUrlPipe.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"components/MaterialNavComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"pipes/SafeUrlPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(first",{"_index":1599,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(user",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pipe/safe",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes",{"_index":2481,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["pipetransform",{"_index":2488,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["place",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["play",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{}}}],["playaudio",{"_index":1461,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["playe",{"_index":1358,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["played",{"_index":1381,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["player",{"_index":1790,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["player's",{"_index":1874,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["playerapiscript",{"_index":1823,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["playerapiscript.src",{"_index":1827,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["playerapiscript.type",{"_index":1825,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["playervars",{"_index":1848,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["playlist",{"_index":1852,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["please",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"components/SignupComponent.html":{},"injectables/UserService.html":{}}}],["pm2",{"_index":2926,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":922,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["position",{"_index":902,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["post",{"_index":1196,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{}}}],["postbook",{"_index":726,"title":{},"body":{"injectables/BookService.html":{}}}],["postbook(data",{"_index":734,"title":{},"body":{"injectables/BookService.html":{}}}],["postlogin",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["postlogin(data",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["postquestion",{"_index":2160,"title":{},"body":{"injectables/QuestionService.html":{}}}],["postquestion(data",{"_index":2168,"title":{},"body":{"injectables/QuestionService.html":{}}}],["postquiz",{"_index":2309,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["postquiz(data",{"_index":2323,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["postquizapiphplog",{"_index":1531,"title":{},"body":{"injectables/LogService.html":{}}}],["postquizapiphplog(data",{"_index":1542,"title":{},"body":{"injectables/LogService.html":{}}}],["postquizlog",{"_index":1532,"title":{},"body":{"injectables/LogService.html":{}}}],["postquizlog(data",{"_index":1544,"title":{},"body":{"injectables/LogService.html":{}}}],["postrate",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["postrate(data",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["postsignup",{"_index":2735,"title":{},"body":{"injectables/UserService.html":{}}}],["postsignup(data",{"_index":2740,"title":{},"body":{"injectables/UserService.html":{}}}],["preparechart(quizresults",{"_index":2631,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["prerequisites",{"_index":2870,"title":{},"body":{"index.html":{}}}],["presentation",{"_index":1287,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["presenter",{"_index":1884,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["prevent",{"_index":2429,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["previoususername",{"_index":853,"title":{},"body":{"components/ChatComponent.html":{}}}],["primary",{"_index":1763,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"components/SignupComponent.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":2905,"title":{},"body":{"index.html":{}}}],["prodmongodb",{"_index":2935,"title":{},"body":{"index.html":{}}}],["production",{"_index":2907,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["profile.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.html",{"_index":2707,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":2706,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":2705,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:13",{"_index":2714,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:14",{"_index":2713,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:15",{"_index":2709,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":2712,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":2711,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["progress",{"_index":2582,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["project",{"_index":2851,"title":{},"body":{"index.html":{}}}],["promise",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["property",{"_index":2469,"title":{},"body":{"guards/RoleGuard.html":{}}}],["provide",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/LiveLecture.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["publish",{"_index":684,"title":{},"body":{"components/BookDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["published",{"_index":648,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["published_year",{"_index":612,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["published_year:string",{"_index":637,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["publisher",{"_index":613,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{}}}],["publisher:string",{"_index":636,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["purple",{"_index":1967,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["purposes",{"_index":2864,"title":{},"body":{"index.html":{}}}],["qi",{"_index":2638,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["qoption",{"_index":2634,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["qoption[qi",{"_index":2642,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["qoption[qi][index",{"_index":2646,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["query_builder",{"_index":1725,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["queryparams",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{}}}],["question",{"_index":147,"title":{"classes/Question.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["question'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["question(q",{"_index":2186,"title":{},"body":{"classes/Quiz.html":{}}}],["question.component.html",{"_index":2064,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["question.component.scss",{"_index":2063,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["question.created",{"_index":2130,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["question.description",{"_index":2127,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["question.name",{"_index":2126,"title":{},"body":{"components/QuestionDetailComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/UserData-2.html":{}}}],["question.options.every(x",{"_index":1489,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["question.options.foreach((item",{"_index":2643,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["question.status",{"_index":2129,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["question:string",{"_index":2144,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["question_answer",{"_index":1728,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["questioncomponent",{"_index":144,"title":{"components/QuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questioncreatecomponent",{"_index":146,"title":{"components/QuestionCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questiondatasource",{"_index":2075,"title":{"classes/QuestionDataSource.html":{}},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"coverage.html":{}}}],["questiondatasource(this.api",{"_index":2068,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["questiondetailcomponent",{"_index":148,"title":{"components/QuestionDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questiondetails",{"_index":2132,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["questioneditcomponent",{"_index":149,"title":{"components/QuestionEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionform",{"_index":2081,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["questionid",{"_index":1501,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/Option.html":{}}}],["questionlist",{"_index":2230,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["questionname",{"_index":1502,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["questions",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/LiveLecture.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/QuizResultModel.html":{}}}],["questionservice",{"_index":2065,"title":{"injectables/QuestionService.html":{}},"body":{"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"coverage.html":{}}}],["questiontypeid",{"_index":2049,"title":{},"body":{"classes/Question.html":{}}}],["quite",{"_index":1008,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["quiz",{"_index":153,"title":{"classes/Quiz.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["quiz'},{'name",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["quiz(null",{"_index":1304,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz(res",{"_index":1450,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.component.html",{"_index":1294,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.component.scss",{"_index":1295,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.duration",{"_index":1404,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.from.name",{"_index":1406,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.from.userid",{"_index":1405,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.id",{"_index":1409,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz.name",{"_index":2113,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["quiz.start",{"_index":1413,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quiz:string",{"_index":2143,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["quiz_by",{"_index":1521,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quizapi",{"_index":1524,"title":{},"body":{"interfaces/LiveLecture.html":{},"index.html":{}}}],["quizby",{"_index":1309,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quizchat",{"_index":1305,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quizchatmodel",{"_index":1077,"title":{"interfaces/QuizChatModel.html":{}},"body":{"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{},"interfaces/QuizChatModel.html":{},"coverage.html":{}}}],["quizcomponent",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizconfig",{"_index":1292,"title":{"classes/QuizConfig.html":{}},"body":{"interfaces/LiveLecture.html":{},"classes/Quiz.html":{},"classes/QuizConfig.html":{},"coverage.html":{}}}],["quizconfig(data.config",{"_index":2183,"title":{},"body":{"classes/Quiz.html":{}}}],["quizcreatecomponent",{"_index":152,"title":{"components/QuizCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdata",{"_index":2240,"title":{"interfaces/QuizData.html":{}},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"coverage.html":{}}}],["quizdatasource(this.api",{"_index":2244,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["quizdate",{"_index":2389,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["quizdetailcomponent",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizdetails",{"_index":2254,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["quizeditcomponent",{"_index":155,"title":{"components/QuizEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizes",{"_index":1296,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quizform",{"_index":2231,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["quizid",{"_index":1303,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/Message.html":{},"interfaces/UserData-2.html":{}}}],["quizlist",{"_index":2082,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["quizlistcomponent",{"_index":156,"title":{"components/QuizListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["quizname",{"_index":1307,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["quizresult",{"_index":1082,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/UserData-2.html":{},"miscellaneous/functions.html":{}}}],["quizresult.correctanswercount",{"_index":2702,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresult.created_at",{"_index":2703,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresult.from.name",{"_index":2701,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresult.from.userid",{"_index":2624,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresult.id.tostring",{"_index":2700,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresultmodel",{"_index":1080,"title":{"interfaces/QuizResultModel.html":{}},"body":{"injectables/ChatService.html":{},"interfaces/QuizResultModel.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["quizresults",{"_index":2585,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizresults.foreach((items",{"_index":2635,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["quizs",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["quizservice",{"_index":1028,"title":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{}}}],["quoted",{"_index":987,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["radius",{"_index":985,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["raise",{"_index":1427,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["randomid",{"_index":791,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["randomindex",{"_index":1272,"title":{},"body":{"injectables/HelperService.html":{}}}],["rate",{"_index":1886,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{},"components/RatingComponent.html":{}}}],["rate(index",{"_index":2346,"title":{},"body":{"components/RatingComponent.html":{}}}],["rate_session",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["ratethissession",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["ratethissession(data",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["rating",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"interfaces/LiveLecture.html":{},"components/RatingComponent.html":{}}}],["rating'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["rating.component.html",{"_index":2333,"title":{},"body":{"components/RatingComponent.html":{}}}],["rating.component.scss",{"_index":2332,"title":{},"body":{"components/RatingComponent.html":{}}}],["rating_status",{"_index":1288,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["ratingchange",{"_index":2338,"title":{},"body":{"components/RatingComponent.html":{}}}],["ratingcomponent",{"_index":158,"title":{"components/RatingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactiveformsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ready",{"_index":1878,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["real",{"_index":1225,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["red",{"_index":1963,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["redirect",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirectto",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refrence",{"_index":2949,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":2023,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["refreshes",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["refreshid",{"_index":1436,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["register",{"_index":1239,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{}}}],["registered",{"_index":1186,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["registraion",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["rel",{"_index":1854,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["rel=0",{"_index":1365,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["relative",{"_index":942,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["reload",{"_index":2894,"title":{},"body":{"index.html":{}}}],["remote",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["remove",{"_index":1645,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["rename",{"_index":2843,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["render",{"_index":1998,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{}}}],["repeat",{"_index":907,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["reply",{"_index":755,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["reply(parent_id",{"_index":767,"title":{},"body":{"components/ChatComponent.html":{}}}],["reports",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MaterialNavComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{}}}],["reports'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["reports.component.html",{"_index":2387,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["reports.component.scss",{"_index":2386,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["reportscomponent",{"_index":160,"title":{"components/ReportsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData-1.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reportsservice",{"_index":2396,"title":{"injectables/ReportsService.html":{}},"body":{"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData-1.html":{},"coverage.html":{}}}],["request",{"_index":1157,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["request.body",{"_index":1243,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.body.password",{"_index":1205,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.body.username",{"_index":1203,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.clone",{"_index":1281,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["request.headers.get('authorization",{"_index":1227,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.method",{"_index":1195,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users",{"_index":1220,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users/authenticate",{"_index":1194,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.endswith('/users/register",{"_index":1240,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.match(/\\/users\\/\\d",{"_index":1232,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["request.url.split",{"_index":1234,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["require",{"_index":2784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredall",{"_index":1327,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["res",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{}}}],["res.courses",{"_index":1044,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"components/UserProfileComponent.html":{}}}],["res.data",{"_index":1048,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["res.duration",{"_index":1398,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res.errors",{"_index":2111,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/UserData-2.html":{}}}],["res.hand_raise.gomeetstatus",{"_index":1440,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res.hand_raise.handraisestatus",{"_index":1443,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res.last_active",{"_index":2004,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{}}}],["res.live_url",{"_index":801,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["res.live_url.lecture_url",{"_index":1362,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res.message",{"_index":823,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["res.offlinesessions",{"_index":1126,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["res.reports",{"_index":2446,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["res.study_material",{"_index":2720,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.success",{"_index":1430,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/SignupComponent.html":{}}}],["res.user",{"_index":2715,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["res.user.email",{"_index":2615,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["res.user.id",{"_index":795,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["res.user.name",{"_index":796,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["res.user.role",{"_index":1352,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res.videolecturelog.star",{"_index":1419,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["res['_id",{"_index":644,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"interfaces/UserData-2.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["respond",{"_index":1255,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["response",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["responsive",{"_index":2662,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["result",{"_index":64,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.course_id",{"_index":1133,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["result.matches",{"_index":1713,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["result.name",{"_index":1135,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["results",{"_index":66,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultstable",{"_index":2586,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["return",{"_index":62,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"injectables/StudentService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"injectables/UserService.html":{}}}],["returndata",{"_index":2567,"title":{},"body":{"injectables/StudentService.html":{}}}],["returned",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":33,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reverse",{"_index":1786,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["rgb(124",{"_index":995,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rgba(0",{"_index":957,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rgba(0,0,0,.24",{"_index":1760,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["rgba(124",{"_index":988,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rgba(153",{"_index":2608,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["rgba(255",{"_index":2597,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["rgba(255,99,132,1",{"_index":2614,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["rgba(54",{"_index":2601,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["rgba(75",{"_index":2606,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["rgba(black",{"_index":1006,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["richtext",{"_index":1331,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["right",{"_index":925,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizListComponent.html":{},"components/UserProfileComponent.html":{}}}],["roboto,\"helvetica",{"_index":1744,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["role",{"_index":1351,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["roleguard",{"_index":287,"title":{"guards/RoleGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["root",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["root'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["rotatey",{"_index":980,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rotatey(0",{"_index":979,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rotatey(0deg",{"_index":977,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["rotatey(180deg",{"_index":975,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["route",{"_index":51,"title":{},"body":{"injectables/AlertService.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{},"guards/RoleGuard.html":{},"interfaces/UserData-2.html":{},"index.html":{}}}],["router",{"_index":18,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"guards/RoleGuard.html":{},"components/SignupComponent.html":{},"interfaces/UserData-2.html":{}}}],["router.events.subscribe(event",{"_index":53,"title":{},"body":{"injectables/AlertService.html":{}}}],["routermodule",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["routes",{"_index":282,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":603,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["row.city",{"_index":2027,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["row.courseid",{"_index":2282,"title":{},"body":{"components/QuizListComponent.html":{}}}],["row.created",{"_index":2287,"title":{},"body":{"components/QuizListComponent.html":{}}}],["row.description",{"_index":2284,"title":{},"body":{"components/QuizListComponent.html":{}}}],["row.duration",{"_index":2285,"title":{},"body":{"components/QuizListComponent.html":{}}}],["row.firstname",{"_index":2025,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["row.id",{"_index":2024,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{}}}],["row.last_active",{"_index":2028,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["row.lastname",{"_index":2026,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["row.name",{"_index":2283,"title":{},"body":{"components/QuizListComponent.html":{}}}],["row.on_create",{"_index":2455,"title":{},"body":{"components/ReportsComponent.html":{}}}],["row.total_marks",{"_index":2454,"title":{},"body":{"components/ReportsComponent.html":{}}}],["row.total_no_question",{"_index":2453,"title":{},"body":{"components/ReportsComponent.html":{}}}],["row.user_name",{"_index":2452,"title":{},"body":{"components/ReportsComponent.html":{}}}],["rows",{"_index":1631,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["run",{"_index":2883,"title":{},"body":{"index.html":{}}}],["running",{"_index":2860,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":45,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"classes/BookDataSource.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/LogService.html":{},"components/MaterialNavComponent.html":{},"injectables/OfflineSessionService.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["safeurl",{"_index":2484,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["safeurlpipe",{"_index":189,"title":{"pipes/SafeUrlPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/SafeUrlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["sanitizer",{"_index":2490,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["saturday",{"_index":2430,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["save",{"_index":650,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["scaffolding",{"_index":2896,"title":{},"body":{"index.html":{}}}],["scalelabel",{"_index":2665,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["scales",{"_index":2663,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["school",{"_index":1730,"title":{},"body":{"components/MaterialNavComponent.html":{},"index.html":{}}}],["screen",{"_index":1636,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["screenshot",{"_index":2936,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":2938,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":901,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["scrollelem",{"_index":811,"title":{},"body":{"components/ChatComponent.html":{}}}],["scrollelem.scrollheight",{"_index":814,"title":{},"body":{"components/ChatComponent.html":{}}}],["scrollelem.scrolltop",{"_index":813,"title":{},"body":{"components/ChatComponent.html":{}}}],["scrollto",{"_index":756,"title":{},"body":{"components/ChatComponent.html":{}}}],["scrollto(id",{"_index":769,"title":{},"body":{"components/ChatComponent.html":{}}}],["search",{"_index":1136,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["sec",{"_index":2286,"title":{},"body":{"components/QuizListComponent.html":{}}}],["secction",{"_index":2730,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["second",{"_index":1738,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["seconds",{"_index":1388,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["secs",{"_index":1320,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["section",{"_index":930,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["security",{"_index":1223,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"dependencies.html":{}}}],["see",{"_index":2865,"title":{},"body":{"index.html":{}}}],["selected",{"_index":1509,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/Option.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["selectedconversation.display_name",{"_index":857,"title":{},"body":{"components/ChatComponent.html":{}}}],["selectedconversation.members",{"_index":859,"title":{},"body":{"components/ChatComponent.html":{}}}],["selector",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["send",{"_index":877,"title":{},"body":{"components/ChatComponent.html":{},"injectables/ChatService.html":{}}}],["send(message",{"_index":1074,"title":{},"body":{"injectables/ChatService.html":{}}}],["sender",{"_index":2622,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["sendmessage",{"_index":757,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendmessage(message",{"_index":771,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendnotification",{"_index":758,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendnotification(params",{"_index":773,"title":{},"body":{"components/ChatComponent.html":{}}}],["sensing",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["serializeddate",{"_index":2390,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["serif",{"_index":1746,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["serve",{"_index":2889,"title":{},"body":{"index.html":{}}}],["serveand",{"_index":2929,"title":{},"body":{"index.html":{}}}],["servedevelopment",{"_index":2890,"title":{},"body":{"index.html":{}}}],["server",{"_index":1190,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"index.html":{}}}],["server/bin/wwwand",{"_index":2925,"title":{},"body":{"index.html":{}}}],["server/bin/wwwclient",{"_index":2927,"title":{},"body":{"index.html":{}}}],["service",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/auth/auth.service",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"guards/RoleGuard.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["services/auth/authentication.service",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{}}}],["services/book/book.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{}}}],["services/chat.service",{"_index":788,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["services/helper/helper.service",{"_index":1291,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["services/log/log.service",{"_index":1290,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/UserProfileComponent.html":{}}}],["services/offline",{"_index":1111,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["services/question/question.service",{"_index":2072,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{}}}],["services/quiz/quiz.service",{"_index":1040,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["services/reports/reports.service",{"_index":2420,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["services/user/user.service",{"_index":2521,"title":{},"body":{"components/SignupComponent.html":{}}}],["session",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["session'},{'name",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["session.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["session.component.html",{"_index":1118,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["session.component.scss",{"_index":1119,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["session.component.ts",{"_index":1108,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"coverage.html":{}}}],["session.component.ts:17",{"_index":1779,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:18",{"_index":1776,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:20",{"_index":1777,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:21",{"_index":1772,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:23",{"_index":1778,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:25",{"_index":1773,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:36",{"_index":1774,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:40",{"_index":1775,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.component.ts:76",{"_index":1902,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["session.component.ts:78",{"_index":1907,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["session.component.ts:79",{"_index":1906,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["session.component.ts:89",{"_index":1904,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["session.component.ts:93",{"_index":1903,"title":{},"body":{"components/OfflineSessionDialog.html":{}}}],["session.date",{"_index":1782,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["session.presentation",{"_index":1781,"title":{},"body":{"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["session.service",{"_index":1113,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["session.service.ts",{"_index":1913,"title":{},"body":{"injectables/OfflineSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.service.ts:17",{"_index":1918,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:21",{"_index":1927,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:37",{"_index":1921,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:42",{"_index":1926,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:49",{"_index":1923,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:56",{"_index":1925,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.service.ts:65",{"_index":1920,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session.session_name",{"_index":1780,"title":{},"body":{"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["session/'+id",{"_index":1929,"title":{},"body":{"injectables/OfflineSessionService.html":{}}}],["session/:id",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["session/detail/offline",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OfflineSessionDetailComponent.html":{},"coverage.html":{}}}],["session/list/offline",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"coverage.html":{}}}],["session/offline",{"_index":1112,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionrating",{"_index":1297,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["sessions",{"_index":1120,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["set",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":1282,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setinterval",{"_index":1437,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["settimeout",{"_index":1432,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["setuserlastactive",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuserlastactive(status",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["shadow",{"_index":910,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":191,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2856,"title":{},"body":{"index.html":{}}}],["sharp",{"_index":2301,"title":{},"body":{"injectables/QuizService.html":{},"injectables/QuizService-1.html":{}}}],["show",{"_index":723,"title":{},"body":{"components/BookEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["showclock",{"_index":1334,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["showinfo",{"_index":1855,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["showing",{"_index":2678,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["showpager",{"_index":1335,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["shuffle",{"_index":1260,"title":{},"body":{"injectables/HelperService.html":{}}}],["shuffle(array",{"_index":1264,"title":{},"body":{"injectables/HelperService.html":{}}}],["shuffleoptions",{"_index":1333,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["shufflequestions",{"_index":1332,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["side",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"components/OfflineSessionDetailComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["sidebar",{"_index":2498,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["sidebar.component.html",{"_index":2500,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2499,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":162,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenav",{"_index":1741,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["signup",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SignupComponent.html":{}}}],["signup'},{'name",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["signup.component.html",{"_index":2510,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.scss",{"_index":2509,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":164,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupform",{"_index":2512,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupurl",{"_index":2742,"title":{},"body":{"injectables/UserService.html":{}}}],["simulate",{"_index":1189,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["single",{"_index":58,"title":{},"body":{"injectables/AlertService.html":{}}}],["size",{"_index":939,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData-2.html":{}}}],["slice:0:50",{"_index":864,"title":{},"body":{"components/ChatComponent.html":{}}}],["sm",{"_index":1896,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["small",{"_index":1011,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["socket",{"_index":1061,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/LiveLecture.html":{}}}],["socket.io",{"_index":1087,"title":{},"body":{"injectables/ChatService.html":{},"dependencies.html":{}}}],["software",{"_index":2874,"title":{},"body":{"index.html":{}}}],["solid",{"_index":950,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["sort",{"_index":1936,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/HelperService.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"modules/MaterialModule.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":600,"title":{},"body":{"components/BookComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["spec\\.ts",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1680,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../action.ts",{"_index":2838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.service.ts",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../book.service.ts",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat.component.ts",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chat.service.ts",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event.ts",{"_index":2840,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../fake",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.service.ts",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2847,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../question.service.ts",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quiz",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../quiz.service.ts",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rating.component.ts",{"_index":2839,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../reports.component.ts",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../reports.service.ts",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.ts",{"_index":2841,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_guards/auth/auth.guard.ts",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/_guards/auth/auth.guard.ts:12",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/auth/auth.guard.ts:9",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/role/role.guard.ts",{"_index":2465,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/_guards/role/role.guard.ts:10",{"_index":2466,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/_guards/role/role.guard.ts:12",{"_index":2467,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/_interceptor/error.interceptor.ts",{"_index":1150,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_interceptor/error.interceptor.ts:12",{"_index":1156,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_interceptor/error.interceptor.ts:9",{"_index":1152,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_interceptor/fake",{"_index":1176,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_interceptor/jwt.interceptor.ts",{"_index":1275,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"coverage.html":{}}}],["src/app/_interceptor/jwt.interceptor.ts:7",{"_index":1276,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/app",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.ts",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/book/book",{"_index":606,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"coverage.html":{}}}],["src/app/components/book/book/book.component.ts",{"_index":554,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"coverage.html":{}}}],["src/app/components/book/book/book.component.ts:13",{"_index":564,"title":{},"body":{"components/BookComponent.html":{}}}],["src/app/components/book/book/book.component.ts:14",{"_index":568,"title":{},"body":{"components/BookComponent.html":{}}}],["src/app/components/book/book/book.component.ts:15",{"_index":561,"title":{},"body":{"components/BookComponent.html":{}}}],["src/app/components/book/book/book.component.ts:19",{"_index":563,"title":{},"body":{"components/BookComponent.html":{}}}],["src/app/components/book/book/book.component.ts:30",{"_index":656,"title":{},"body":{"classes/BookDataSource.html":{}}}],["src/app/components/book/book/book.component.ts:35",{"_index":657,"title":{},"body":{"classes/BookDataSource.html":{}}}],["src/app/components/book/book/book.component.ts:39",{"_index":658,"title":{},"body":{"classes/BookDataSource.html":{}}}],["src/app/components/chat",{"_index":1020,"title":{},"body":{"components/ChatHistoryComponent.html":{},"coverage.html":{}}}],["src/app/components/chat/chat.component.ts",{"_index":743,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/chat/chat.component.ts:122",{"_index":770,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:127",{"_index":768,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:135",{"_index":762,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:148",{"_index":774,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:17",{"_index":776,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:18",{"_index":778,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:19",{"_index":784,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:20",{"_index":777,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:21",{"_index":780,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:22",{"_index":779,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:23",{"_index":782,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:24",{"_index":783,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:25",{"_index":781,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:26",{"_index":761,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:30",{"_index":766,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:56",{"_index":765,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:78",{"_index":763,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:92",{"_index":764,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/chat/chat.component.ts:96",{"_index":772,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/components/faculty/add/faculty",{"_index":1168,"title":{},"body":{"components/FacultyAddComponent.html":{},"coverage.html":{}}}],["src/app/components/index/app.component.ts",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/index/app.component.ts:11",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/index/app.component.ts:14",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/layout/material",{"_index":1621,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"coverage.html":{}}}],["src/app/components/layout/sidebar/sidebar.component.ts",{"_index":2497,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/components/layout/sidebar/sidebar.component.ts:12",{"_index":2502,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/layout/sidebar/sidebar.component.ts:8",{"_index":2501,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1553,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1564,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1565,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1572,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:19",{"_index":1567,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1566,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1571,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":1570,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1573,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":1569,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1568,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":1561,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":1562,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:54",{"_index":1563,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/offline",{"_index":1107,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"coverage.html":{}}}],["src/app/components/online",{"_index":1930,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/question/question",{"_index":2080,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"coverage.html":{}}}],["src/app/components/question/question/question.component.ts",{"_index":2062,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"coverage.html":{}}}],["src/app/components/question/question/question.component.ts:13",{"_index":2071,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question/question.component.ts:14",{"_index":2070,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question/question.component.ts:15",{"_index":2066,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question/question.component.ts:19",{"_index":2067,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/components/question/question/question.component.ts:30",{"_index":2115,"title":{},"body":{"classes/QuestionDataSource.html":{}}}],["src/app/components/question/question/question.component.ts:35",{"_index":2116,"title":{},"body":{"classes/QuestionDataSource.html":{}}}],["src/app/components/question/question/question.component.ts:39",{"_index":2117,"title":{},"body":{"classes/QuestionDataSource.html":{}}}],["src/app/components/quiz/quiz",{"_index":2229,"title":{},"body":{"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/quiz/quiz.component.ts",{"_index":1285,"title":{},"body":{"interfaces/LiveLecture.html":{},"coverage.html":{}}}],["src/app/components/rating/rating.component.ts",{"_index":2331,"title":{},"body":{"components/RatingComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/rating/rating.component.ts:19",{"_index":2340,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/components/rating/rating.component.ts:21",{"_index":2339,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/components/rating/rating.component.ts:28",{"_index":2347,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/components/rating/rating.component.ts:42",{"_index":2343,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/components/rating/rating.component.ts:63",{"_index":2345,"title":{},"body":{"components/RatingComponent.html":{}}}],["src/app/components/reports/reports.component.ts",{"_index":2385,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/reports/reports.component.ts:113",{"_index":2401,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:34",{"_index":2419,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:35",{"_index":2406,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:36",{"_index":2412,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:37",{"_index":2407,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:38",{"_index":2415,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:39",{"_index":2405,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:41",{"_index":2409,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:42",{"_index":2418,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:44",{"_index":2414,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:45",{"_index":2397,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:58",{"_index":2404,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:67",{"_index":2413,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:72",{"_index":2400,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:80",{"_index":2402,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/reports/reports.component.ts:98",{"_index":2403,"title":{},"body":{"components/ReportsComponent.html":{}}}],["src/app/components/signup/signup.component.ts",{"_index":2508,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/components/signup/signup.component.ts:13",{"_index":2519,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:14",{"_index":2518,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:15",{"_index":2517,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:16",{"_index":2520,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:17",{"_index":2514,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:21",{"_index":2515,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/signup/signup.component.ts:30",{"_index":2516,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/components/student/add/student",{"_index":2531,"title":{},"body":{"components/StudentAddComponent.html":{},"coverage.html":{}}}],["src/app/components/student/details/student",{"_index":2532,"title":{},"body":{"components/StudentDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/student/list/student",{"_index":2538,"title":{},"body":{"components/StudentListComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":2704,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/models/chat/action.ts",{"_index":2842,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/chat/event.ts",{"_index":2844,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/chat/message.ts",{"_index":1769,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/models/chat/quiz.ts",{"_index":2187,"title":{},"body":{"interfaces/QuizChatModel.html":{},"coverage.html":{}}}],["src/app/models/chat/user.ts",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["src/app/models/option.ts",{"_index":2035,"title":{},"body":{"classes/Option.html":{},"coverage.html":{}}}],["src/app/models/option.ts:2",{"_index":2039,"title":{},"body":{"classes/Option.html":{}}}],["src/app/models/option.ts:3",{"_index":2042,"title":{},"body":{"classes/Option.html":{}}}],["src/app/models/option.ts:4",{"_index":2041,"title":{},"body":{"classes/Option.html":{}}}],["src/app/models/option.ts:5",{"_index":2040,"title":{},"body":{"classes/Option.html":{}}}],["src/app/models/option.ts:6",{"_index":2038,"title":{},"body":{"classes/Option.html":{}}}],["src/app/models/question.ts",{"_index":2047,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["src/app/models/question.ts:4",{"_index":2051,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:5",{"_index":2052,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:6",{"_index":2054,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:7",{"_index":2053,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/question.ts:8",{"_index":2050,"title":{},"body":{"classes/Question.html":{}}}],["src/app/models/quiz",{"_index":2189,"title":{},"body":{"classes/QuizConfig.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts",{"_index":2173,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{}}}],["src/app/models/quiz.ts:10",{"_index":2174,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:5",{"_index":2178,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:6",{"_index":2179,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:7",{"_index":2176,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:8",{"_index":2177,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/quiz.ts:9",{"_index":2175,"title":{},"body":{"classes/Quiz.html":{}}}],["src/app/models/role.ts",{"_index":2845,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/socket/quiz.ts",{"_index":2288,"title":{},"body":{"interfaces/QuizResultModel.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":2574,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":2580,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:4",{"_index":2576,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:5",{"_index":2581,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":2578,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":2575,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":2577,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":2579,"title":{},"body":{"classes/User.html":{}}}],["src/app/pipe/safe",{"_index":2482,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts",{"_index":6,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:25",{"_index":38,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:30",{"_index":28,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:35",{"_index":35,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:7",{"_index":40,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:8",{"_index":20,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/auth.service.ts:105",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:114",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:123",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:130",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:135",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:141",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:147",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:153",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:162",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:169",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:177",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:183",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:193",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:200",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:207",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:23",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:24",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:28",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:43",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:48",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:59",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:69",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:80",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:89",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:94",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:98",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/authentication.service.ts",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth/authentication.service.ts:20",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth/authentication.service.ts:21",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth/authentication.service.ts:22",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth/authentication.service.ts:30",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth/authentication.service.ts:35",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/auth/authentication.service.ts:53",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/book/book.service.ts",{"_index":724,"title":{},"body":{"injectables/BookService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/book/book.service.ts:19",{"_index":728,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:23",{"_index":733,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:38",{"_index":730,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:43",{"_index":732,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:49",{"_index":731,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:56",{"_index":735,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:63",{"_index":737,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/book/book.service.ts:71",{"_index":729,"title":{},"body":{"injectables/BookService.html":{}}}],["src/app/services/chat.service.ts",{"_index":1059,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/chat.service.ts:19",{"_index":1085,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:20",{"_index":1084,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:21",{"_index":1068,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:27",{"_index":1075,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:31",{"_index":1078,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:35",{"_index":1081,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:39",{"_index":1071,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:49",{"_index":1072,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:59",{"_index":1073,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/chat.service.ts:69",{"_index":1070,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/app/services/helper/helper.service.ts",{"_index":1257,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{}}}],["src/app/services/helper/helper.service.ts:13",{"_index":1265,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:26",{"_index":1263,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper/helper.service.ts:5",{"_index":1267,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/log/log.service.ts",{"_index":1527,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/log/log.service.ts:20",{"_index":1534,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:24",{"_index":1541,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:47",{"_index":1537,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:52",{"_index":1540,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:59",{"_index":1545,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:68",{"_index":1543,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:76",{"_index":1539,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:83",{"_index":1547,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/log/log.service.ts:91",{"_index":1536,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/services/offline",{"_index":1912,"title":{},"body":{"injectables/OfflineSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/question/question.service.ts",{"_index":2158,"title":{},"body":{"injectables/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/question/question.service.ts:19",{"_index":2162,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:23",{"_index":2167,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:46",{"_index":2164,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:51",{"_index":2166,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:57",{"_index":2165,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:64",{"_index":2169,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:71",{"_index":2171,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/question/question.service.ts:79",{"_index":2163,"title":{},"body":{"injectables/QuestionService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":2291,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:11",{"_index":2295,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:15",{"_index":2296,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:7",{"_index":2293,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz/quiz.service.ts",{"_index":2305,"title":{},"body":{"injectables/QuizService-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/quiz/quiz.service.ts:100",{"_index":2326,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:108",{"_index":2313,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:20",{"_index":2311,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:24",{"_index":2322,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:47",{"_index":2314,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:52",{"_index":2315,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:60",{"_index":2316,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:66",{"_index":2321,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:72",{"_index":2317,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:79",{"_index":2318,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:86",{"_index":2320,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/quiz/quiz.service.ts:93",{"_index":2324,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["src/app/services/reports/reports.service.ts",{"_index":2456,"title":{},"body":{"injectables/ReportsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/reports/reports.service.ts:20",{"_index":2457,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/reports/reports.service.ts:24",{"_index":2464,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/reports/reports.service.ts:39",{"_index":2458,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/reports/reports.service.ts:44",{"_index":2461,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/reports/reports.service.ts:51",{"_index":2463,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/reports/reports.service.ts:58",{"_index":2459,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/app/services/student/student.service.ts",{"_index":2542,"title":{},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["src/app/services/student/student.service.ts:10",{"_index":2548,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/student/student.service.ts:101",{"_index":2556,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/student/student.service.ts:114",{"_index":2553,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/student/student.service.ts:15",{"_index":2554,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/student/student.service.ts:33",{"_index":2552,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/student/student.service.ts:83",{"_index":2550,"title":{},"body":{"injectables/StudentService.html":{}}}],["src/app/services/theme.service.ts",{"_index":2571,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme.service.ts:11",{"_index":2572,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:9",{"_index":2573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/user/user.service.ts",{"_index":2734,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user/user.service.ts:19",{"_index":2736,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:23",{"_index":2738,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:38",{"_index":2737,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:43",{"_index":2739,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user/user.service.ts:52",{"_index":2741,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/material/material.module.ts",{"_index":1648,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2495,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src\\app\\components\\chat",{"_index":2948,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\login",{"_index":2940,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\offline",{"_index":2942,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\online",{"_index":2946,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\question",{"_index":2945,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\quiz",{"_index":2941,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\quiz\\quiz",{"_index":2944,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\reports",{"_index":2947,"title":{},"body":{"index.html":{}}}],["src\\app\\components\\user",{"_index":2943,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1638,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["star",{"_index":2361,"title":{},"body":{"components/RatingComponent.html":{}}}],["stars",{"_index":2363,"title":{},"body":{"components/RatingComponent.html":{}}}],["start",{"_index":1308,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/QuizChatModel.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData-2.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["started",{"_index":1359,"title":{"index.html":{}},"body":{"interfaces/LiveLecture.html":{},"index.html":{}}}],["startquiz",{"_index":1066,"title":{},"body":{"injectables/ChatService.html":{},"interfaces/UserData-2.html":{}}}],["startquiz(courseid",{"_index":2690,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["startquiz(quiz",{"_index":1076,"title":{},"body":{"injectables/ChatService.html":{}}}],["starttime",{"_index":1341,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["state",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"components/OfflineSessionDetailComponent.html":{},"guards/RoleGuard.html":{}}}],["state.url",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1258,"title":{},"body":{"injectables/HelperService.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["status",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["status:string",{"_index":2146,"title":{},"body":{"components/QuestionEditComponent.html":{},"components/QuizEditComponent.html":{}}}],["step",{"_index":2671,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["stepsize",{"_index":2673,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["sticky",{"_index":1764,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["stop",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{}}}],["storage",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/StudentService.html":{}}}],["store",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["stored",{"_index":2902,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["student",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["studentaddcomponent",{"_index":166,"title":{"components/StudentAddComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentdata",{"_index":2557,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentdetailscomponent",{"_index":168,"title":{"components/StudentDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["studentlist",{"_index":2563,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentlist:any",{"_index":2560,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentlistcomponent",{"_index":170,"title":{"components/StudentListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["students",{"_index":2558,"title":{},"body":{"injectables/StudentService.html":{}}}],["studentservice",{"_index":2541,"title":{"injectables/StudentService.html":{}},"body":{"injectables/StudentService.html":{},"coverage.html":{}}}],["study",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/MaterialNavComponent.html":{}}}],["study_material",{"_index":2708,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["style",{"_index":949,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/SidebarComponent.html":{}}}],["styles",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["subject",{"_index":11,"title":{},"body":{"injectables/AlertService.html":{}}}],["submit",{"_index":2204,"title":{},"body":{"classes/QuizConfig.html":{}}}],["submit_attendance",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["submitattendance",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LiveLecture.html":{}}}],["submitattendance(data",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["submitquiz",{"_index":1067,"title":{},"body":{"injectables/ChatService.html":{}}}],["submitquiz(quizresult",{"_index":1079,"title":{},"body":{"injectables/ChatService.html":{}}}],["submitted",{"_index":1559,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitting",{"_index":1330,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["subscribe",{"_index":817,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{}}}],["subscribe((data",{"_index":1372,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["subscribe((message",{"_index":808,"title":{},"body":{"components/ChatComponent.html":{}}}],["subscribe((numberofactivesockets",{"_index":1370,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["subscribe((quiz",{"_index":1401,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["subscribe((quizresult",{"_index":2619,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["subscribe((res",{"_index":1138,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["subscribe(data",{"_index":675,"title":{},"body":{"components/BookDetailComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["subscribe(res",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":15,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{}}}],["success(message",{"_index":37,"title":{},"body":{"injectables/AlertService.html":{}}}],["successful",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["successfully",{"_index":2565,"title":{},"body":{"injectables/StudentService.html":{}}}],["sum",{"_index":2677,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["sunday",{"_index":2431,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["super",{"_index":574,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{},"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["supervised_user_circle",{"_index":1729,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/SidebarComponent.html":{}}}],["support",{"_index":2950,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":964,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"modules.html":{}}}],["svg:first",{"_index":968,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["svg:last",{"_index":976,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["switch",{"_index":1637,"title":{},"body":{"components/MaterialDashboardComponent.html":{},"components/RatingComponent.html":{}}}],["system",{"_index":2857,"title":{},"body":{"index.html":{}}}],["t&c",{"_index":2530,"title":{},"body":{"components/SignupComponent.html":{}}}],["tab",{"_index":887,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["table",{"_index":916,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1249,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["tap",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["td",{"_index":2031,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["teal",{"_index":1970,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["temp",{"_index":1271,"title":{},"body":{"injectables/HelperService.html":{}}}],["template",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["testing",{"_index":2863,"title":{},"body":{"index.html":{}}}],["text",{"_index":61,"title":{},"body":{"injectables/AlertService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["text/javascript",{"_index":1826,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["th",{"_index":2032,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{}}}],["theme",{"_index":1336,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"classes/QuizConfig.html":{}}}],["themeservice",{"_index":2570,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["theodore",{"_index":1984,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["there's",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["things",{"_index":2871,"title":{},"body":{"index.html":{}}}],["third",{"_index":1739,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["this.alert",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.allowback",{"_index":2206,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.allowreview",{"_index":2208,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.api.deletebook(id",{"_index":677,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["this.api.deletequestion(id",{"_index":2125,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.api.deletequiz(id",{"_index":2698,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.api.getbook(id",{"_index":674,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["this.api.getbook(id).subscribe(data",{"_index":712,"title":{},"body":{"components/BookEditComponent.html":{}}}],["this.api.getbooks",{"_index":570,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["this.api.getcourses",{"_index":2236,"title":{},"body":{"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{}}}],["this.api.getofflinesession(id",{"_index":1856,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.api.getofflinesessionfilter(data",{"_index":1137,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["this.api.getquestion(id",{"_index":2123,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.api.getquestion(id).subscribe(data",{"_index":2149,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["this.api.getquestions",{"_index":2073,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{}}}],["this.api.getquiz(id",{"_index":2688,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.api.getquiz(id).subscribe(data",{"_index":2263,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["this.api.getquizbycourseid(this.courseid",{"_index":2250,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["this.api.getquizs",{"_index":2245,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["this.api.postbook(form",{"_index":643,"title":{},"body":{"components/BookCreateComponent.html":{}}}],["this.api.postquestion(form",{"_index":2109,"title":{},"body":{"components/QuestionCreateComponent.html":{}}}],["this.api.postquiz(form",{"_index":2239,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.api.postsignup(form",{"_index":2525,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.api.updatebook(this.id",{"_index":722,"title":{},"body":{"components/BookEditComponent.html":{}}}],["this.api.updatequestion(this.id",{"_index":2156,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["this.api.updatequiz(quizid",{"_index":2694,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.api.updatequiz(this.id",{"_index":2267,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.login(this.f.username.value",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.deletemessage(lecture_id",{"_index":847,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.authservice.getchathistory(lecture_id",{"_index":821,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.authservice.getchathistory(this.lectureid",{"_index":1051,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.authservice.getlastactiveuserbycourseid(courseid",{"_index":2683,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.authservice.getlastactiveusers",{"_index":2001,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{}}}],["this.authservice.getlivelectureurl",{"_index":799,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.authservice.getlogininfofromedusatlms",{"_index":1438,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.authservice.getloginuser",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.getpublishedlecturebycourseid(this.courseid",{"_index":1046,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["this.authservice.getstudymaterialbycourselist(courselist",{"_index":2718,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.authservice.getvideolecturelogbyid(data",{"_index":1417,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.authservice.getvideolecturelogbyid(videoloddata",{"_index":1868,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.authservice.handraise(data",{"_index":1428,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.authservice.isadmin",{"_index":2472,"title":{},"body":{"guards/RoleGuard.html":{},"interfaces/UserData-2.html":{}}}],["this.authservice.isloggedin",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"guards/RoleGuard.html":{},"interfaces/UserData-2.html":{}}}],["this.authservice.logout",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/MaterialNavComponent.html":{}}}],["this.authservice.ratethissession(data",{"_index":1423,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.authservice.setuserlastactive",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.setuserlastactive(0",{"_index":1722,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["this.authservice.submitattendance(data",{"_index":1415,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.automove",{"_index":2210,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.autosubmit",{"_index":2213,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.book",{"_index":676,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["this.bookform",{"_index":638,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["this.bookform.setvalue",{"_index":715,"title":{},"body":{"components/BookEditComponent.html":{}}}],["this.books",{"_index":571,"title":{},"body":{"components/BookComponent.html":{},"classes/BookDataSource.html":{}}}],["this.breakpoint",{"_index":1123,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":1711,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset).pipe",{"_index":1629,"title":{},"body":{"components/MaterialDashboardComponent.html":{}}}],["this.chart",{"_index":2659,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.chatservice.onevent(event.connect",{"_index":816,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.chatservice.onevent(event.disconnect",{"_index":819,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.chatservice.onmessage",{"_index":807,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatservice.onquizstart",{"_index":1400,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.chatservice.onquizsubmit",{"_index":2618,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.chatservice.send",{"_index":829,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatservice.send(message",{"_index":855,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatservice.startquiz",{"_index":2692,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.chatservice.submitquiz(data",{"_index":1522,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.choiceforms.push(choice",{"_index":2106,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.choiceforms.removeat(i",{"_index":2107,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.config",{"_index":2182,"title":{},"body":{"classes/Quiz.html":{}}}],["this.config.automove",{"_index":1485,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.config.autosubmit",{"_index":1474,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.config.duration",{"_index":1397,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.course_id",{"_index":1132,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["this.courseid",{"_index":1052,"title":{},"body":{"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"classes/Quiz.html":{},"components/QuizEditComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.courselist",{"_index":1043,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.courses",{"_index":2716,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.currentuser",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.asobservable",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.next(null",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.next(user",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.currentusersubject.value",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.datasets",{"_index":2596,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.datasource",{"_index":1999,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.datasource.filter",{"_index":2010,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.datasource.paginator",{"_index":2006,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.datasource.paginator.firstpage",{"_index":2012,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.datasource.sort",{"_index":2008,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.date",{"_index":2439,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.description",{"_index":2181,"title":{},"body":{"classes/Quiz.html":{}}}],["this.dialogref.close",{"_index":1145,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["this.disabled",{"_index":1448,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.duration",{"_index":1455,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["this.ellapsedtime",{"_index":1457,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.embedurl",{"_index":1364,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.error",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.password.value",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formbuilder.array",{"_index":2101,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.formbuilder.group",{"_index":639,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["this.getbook(this.route.snapshot.params['id",{"_index":711,"title":{},"body":{"components/BookEditComponent.html":{}}}],["this.getbookdetails(this.route.snapshot.params['id",{"_index":673,"title":{},"body":{"components/BookDetailComponent.html":{}}}],["this.getchart(question.id",{"_index":2651,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.getchathistory",{"_index":1865,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.getchathistory(this.live_lecture.lecture_id",{"_index":803,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.getlastactiveuserbycourseid(this.quiz.courseid",{"_index":2617,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.getlastactiveusers",{"_index":1996,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{}}}],["this.getlastplayedquiz",{"_index":1360,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.getofflinesessiondetail(this.route.snapshot.params['id",{"_index":1833,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.getquestion(this.route.snapshot.params['id",{"_index":2148,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["this.getquestiondetails(this.route.snapshot.params['id",{"_index":2122,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.getquiz(this.route.snapshot.params['id",{"_index":2261,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["this.getquizdetails(this.route.snapshot.params['id",{"_index":2616,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.getquizreport",{"_index":2425,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.getquizreportfrommongo",{"_index":2426,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.getrandomid",{"_index":792,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.getstudymaterialbycourselist({courselist",{"_index":2717,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.getvideo",{"_index":1840,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.getvideolecturelogbyid",{"_index":1366,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.goto(this.pager.index",{"_index":1486,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.gotomeeting",{"_index":1441,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.handraisewaiting",{"_index":1431,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.http.delete(url",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["this.http.get(apiurl",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["this.http.get(chatapiurl",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(url",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{}}}],["this.http.post(apiurl",{"_index":741,"title":{},"body":{"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["this.http.post(loginurl",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["this.http.post(phpapiurl",{"_index":1552,"title":{},"body":{"injectables/LogService.html":{}}}],["this.http.post(signupurl",{"_index":2745,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(url",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OfflineSessionService.html":{}}}],["this.http.put(url",{"_index":742,"title":{},"body":{"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["this.id",{"_index":713,"title":{},"body":{"components/BookEditComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionEditComponent.html":{},"classes/Quiz.html":{},"components/QuizEditComponent.html":{}}}],["this.initioconnection",{"_index":805,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.ioconnection",{"_index":806,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.isaboverating(index",{"_index":2373,"title":{},"body":{"components/RatingComponent.html":{}}}],["this.isanswer",{"_index":2045,"title":{},"body":{"classes/Option.html":{}}}],["this.isdarktheme",{"_index":1717,"title":{},"body":{"components/MaterialNavComponent.html":{},"injectables/ThemeService.html":{}}}],["this.isloggedin",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keepafternavigationchange",{"_index":56,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.lectureid",{"_index":1862,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.lecturelist",{"_index":1049,"title":{},"body":{"components/ChatHistoryComponent.html":{}}}],["this.live_lecture",{"_index":802,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.live_lecture.course_id",{"_index":804,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.live_lecture.lecture_id",{"_index":828,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.live_lecture_url",{"_index":1361,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.loading",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loadquiz(quiz.id",{"_index":1414,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.loadquiz(res._id",{"_index":1399,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.log.postquizapiphplog(data",{"_index":1526,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.log.postquizlog(data",{"_index":1523,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.loginform",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginuser",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.message",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messagecontent",{"_index":839,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messages",{"_index":824,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.messages.push(message",{"_index":810,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messages.splice(index",{"_index":848,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.messages[this.messages.length",{"_index":837,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.mode",{"_index":1433,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.name",{"_index":1134,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"classes/Option.html":{},"classes/Question.html":{},"classes/Quiz.html":{}}}],["this.numberofactivesockets",{"_index":1371,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.numtochar[index",{"_index":2645,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.onlineusers",{"_index":2003,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-2.html":{}}}],["this.onplayerready",{"_index":1843,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.onplayerready(event",{"_index":1846,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.onplayerstatechange",{"_index":1845,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.onplayerstatechange(event",{"_index":1847,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.onsubmit",{"_index":1475,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.options",{"_index":2058,"title":{},"body":{"classes/Question.html":{}}}],["this.options.push(new",{"_index":2060,"title":{},"body":{"classes/Question.html":{}}}],["this.pager.count",{"_index":1452,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.pagesize",{"_index":2215,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.paginator",{"_index":2007,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.parent_content",{"_index":834,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.parent_id",{"_index":831,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.parent_name",{"_index":833,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.parsetime(diff",{"_index":1477,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.parsetime(this.config.duration",{"_index":1460,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.playaudio",{"_index":1445,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.player",{"_index":1837,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.preparechart(res",{"_index":2450,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.preparechart(this.quizresults",{"_index":2630,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.question",{"_index":2124,"title":{},"body":{"components/QuestionDetailComponent.html":{}}}],["this.questionform",{"_index":2099,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.questionform.get('choices",{"_index":2104,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.questionform.setvalue",{"_index":2150,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["this.questionid",{"_index":2043,"title":{},"body":{"classes/Option.html":{}}}],["this.questionlist",{"_index":2238,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questions",{"_index":2074,"title":{},"body":{"components/QuestionComponent.html":{},"classes/QuestionDataSource.html":{},"classes/Quiz.html":{}}}],["this.questions.push(new",{"_index":2185,"title":{},"body":{"classes/Quiz.html":{}}}],["this.questionservice.getquestions",{"_index":2237,"title":{},"body":{"components/QuizCreateComponent.html":{}}}],["this.questiontypeid",{"_index":2056,"title":{},"body":{"classes/Question.html":{}}}],["this.quiz",{"_index":1449,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.quiz.courseid",{"_index":1519,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quiz.duration",{"_index":1456,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.quiz.id",{"_index":1500,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quiz.last_played",{"_index":2696,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.quiz.questions",{"_index":1520,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quiz.questions.foreach(x",{"_index":1498,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quiz.questions.length",{"_index":1453,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizby",{"_index":1357,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizby.userid",{"_index":1412,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizdate",{"_index":2421,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.quizform",{"_index":2234,"title":{},"body":{"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["this.quizform.setvalue",{"_index":2264,"title":{},"body":{"components/QuizEditComponent.html":{}}}],["this.quizid",{"_index":1408,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizlist",{"_index":2103,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.quizresults",{"_index":2629,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.quizresults.length",{"_index":2653,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.quizresults.push(quizresult",{"_index":2625,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.quizs",{"_index":2246,"title":{},"body":{"interfaces/QuizData.html":{},"components/QuizListComponent.html":{}}}],["this.quizservice.getcourses",{"_index":1041,"title":{},"body":{"components/ChatHistoryComponent.html":{},"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.quizservice.getlastplayedquiz",{"_index":1374,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizservice.getquiz(quizid).subscribe(res",{"_index":1446,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.quizservice.getquizs",{"_index":2102,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{}}}],["this.rating",{"_index":1348,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/RatingComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.ratingchange.emit(this.rating",{"_index":2362,"title":{},"body":{"components/RatingComponent.html":{}}}],["this.reportsservice.getquizreport(this.quizdate",{"_index":2444,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.reportsservice.getquizreportfrommongo(this.quizdate",{"_index":2448,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.requiredall",{"_index":2217,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.resultstable.push(createnewuser(quizresult",{"_index":2626,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["this.returnurl",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.richtext",{"_index":2219,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/quiz",{"_index":1434,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.router.navigate(['/book",{"_index":645,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["this.router.navigate(['/books",{"_index":678,"title":{},"body":{"components/BookDetailComponent.html":{},"components/SignupComponent.html":{}}}],["this.router.navigate(['/login",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LogService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{}}}],["this.router.navigate(['/question",{"_index":2157,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["this.router.navigate(['/questions",{"_index":2112,"title":{},"body":{"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["this.router.navigate(['/quiz",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{},"components/QuizEditComponent.html":{}}}],["this.router.navigate(['/quizs",{"_index":849,"title":{},"body":{"components/ChatComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuizCreateComponent.html":{},"interfaces/UserData-2.html":{}}}],["this.router.navigate(['login",{"_index":2480,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.navigate([this.returnurl",{"_index":1600,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2491,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["this.scrollto('scrolltobottom",{"_index":815,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.scrollto(lastmessage._id",{"_index":838,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.session",{"_index":1835,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.sessionrating",{"_index":1420,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.sessions",{"_index":1125,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["this.showclock",{"_index":2225,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.showpager",{"_index":2227,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.shuffleoptions",{"_index":2223,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.shufflequestions",{"_index":2221,"title":{},"body":{"classes/QuizConfig.html":{}}}],["this.signupform",{"_index":2523,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.socket",{"_index":1090,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.disconnect",{"_index":1099,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.emit('message",{"_index":1093,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.emit('quiz",{"_index":1094,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.emit('quizresult",{"_index":1095,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.on('message",{"_index":1097,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.on('quiz",{"_index":1100,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.on('quizresult",{"_index":1101,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.socket.on(event",{"_index":1102,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.sort",{"_index":2009,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["this.start",{"_index":1396,"title":{},"body":{"interfaces/LiveLecture.html":{},"interfaces/UserData-2.html":{}}}],["this.starttime",{"_index":1454,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.starttime.gettime",{"_index":1470,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.study_material",{"_index":2721,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.subject.asobservable",{"_index":63,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.subject.next",{"_index":60,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.submitattendance",{"_index":1367,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.submitted",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.tick",{"_index":1459,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.timer",{"_index":1458,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.totalquizresponse",{"_index":2445,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["this.url",{"_index":1870,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["this.user",{"_index":793,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["this.user.courses.includes(quiz.courseid",{"_index":1410,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.user.courses.includes(res.courseid",{"_index":1395,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.user.lastactive",{"_index":1494,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.user.lastactive.gettime",{"_index":1495,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["this.user.name",{"_index":852,"title":{},"body":{"components/ChatComponent.html":{},"interfaces/LiveLecture.html":{}}}],["this.user.userid",{"_index":1411,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["this.videourl",{"_index":1363,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["this.youtubeid",{"_index":1859,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["thomas",{"_index":1994,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["those",{"_index":2366,"title":{},"body":{"components/RatingComponent.html":{}}}],["throwerror",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["throwerror('something",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["throwerror(error",{"_index":1167,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thumb_up",{"_index":1737,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["tick",{"_index":960,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["ticks",{"_index":2668,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["time",{"_index":956,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"classes/QuizConfig.html":{},"components/ReportsComponent.html":{}}}],["timer",{"_index":1340,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{}}}],["title",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookEditComponent.html":{},"components/MaterialDashboardComponent.html":{},"interfaces/UserData-2.html":{},"index.html":{}}}],["title:string",{"_index":633,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{}}}],["toastr",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["tobool",{"_index":1261,"title":{},"body":{"injectables/HelperService.html":{}}}],["tobool(val",{"_index":1266,"title":{},"body":{"injectables/HelperService.html":{}}}],["toggler",{"_index":1789,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["token",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"guards/RoleGuard.html":{},"classes/User.html":{}}}],["tokenpayload",{"_index":2476,"title":{},"body":{"guards/RoleGuard.html":{}}}],["tokenpayload.role",{"_index":2479,"title":{},"body":{"guards/RoleGuard.html":{}}}],["toolbar.mat",{"_index":1762,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["tooltip",{"_index":2679,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["tooltips",{"_index":2674,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["top",{"_index":963,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["total",{"_index":2451,"title":{},"body":{"components/ReportsComponent.html":{}}}],["total_marks",{"_index":2410,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["totalquizresponse",{"_index":2391,"title":{},"body":{"components/ReportsComponent.html":{},"interfaces/UserData-1.html":{}}}],["transform",{"_index":973,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"pipes/SafeUrlPipe.html":{}}}],["transform(url",{"_index":2485,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["transition",{"_index":965,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["transparent",{"_index":997,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["tree",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["triggered",{"_index":2359,"title":{},"body":{"components/RatingComponent.html":{}}}],["true",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"guards/RoleGuard.html":{},"injectables/ThemeService.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["twig",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/FakeBackendInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"classes/Option.html":{},"classes/Question.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"classes/Quiz.html":{},"interfaces/QuizChatModel.html":{},"classes/QuizConfig.html":{},"components/QuizCreateComponent.html":{},"interfaces/QuizData.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"guards/RoleGuard.html":{},"pipes/SafeUrlPipe.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"injectables/StudentService.html":{},"injectables/ThemeService.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type:string",{"_index":2145,"title":{},"body":{"components/QuestionEditComponent.html":{}}}],["typeof",{"_index":2639,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["ug3sfzktcqi,alzhf5uqnu4,x9zkc3ogi78",{"_index":1853,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["ul",{"_index":2504,"title":{},"body":{"components/SidebarComponent.html":{}}}],["unauthorised",{"_index":1231,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["undefined",{"_index":1131,"title":{},"body":{"interfaces/DialogData.html":{},"injectables/HelperService.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{},"interfaces/UserData-2.html":{}}}],["units",{"_index":2672,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["unlimited",{"_index":1324,"title":{},"body":{"interfaces/LiveLecture.html":{},"classes/QuizConfig.html":{}}}],["unset",{"_index":601,"title":{},"body":{"components/BookComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["unsuccessful",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["up",{"_index":1016,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":686,"title":{},"body":{"components/BookDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["updatebook",{"_index":727,"title":{},"body":{"injectables/BookService.html":{}}}],["updatebook(id",{"_index":736,"title":{},"body":{"injectables/BookService.html":{}}}],["updatequestion",{"_index":2161,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updatequestion(id",{"_index":2170,"title":{},"body":{"injectables/QuestionService.html":{}}}],["updatequiz",{"_index":2310,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["updatequiz(id",{"_index":2325,"title":{},"body":{"injectables/QuizService-1.html":{}}}],["updatequizlog",{"_index":1533,"title":{},"body":{"injectables/LogService.html":{}}}],["updatequizlog(id",{"_index":1546,"title":{},"body":{"injectables/LogService.html":{}}}],["url",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/ChatService.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"pipes/SafeUrlPipe.html":{},"miscellaneous/variables.html":{}}}],["url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg",{"_index":906,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["url('https://blog.wonderslate.com/wp",{"_index":1618,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":1784,"title":{},"body":{"components/OfflineSessionComponent.html":{}}}],["url.pipe",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["url.pipe.ts",{"_index":2483,"title":{},"body":{"pipes/SafeUrlPipe.html":{},"coverage.html":{}}}],["url.pipe.ts:10",{"_index":2487,"title":{},"body":{"pipes/SafeUrlPipe.html":{}}}],["urlparts",{"_index":1233,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["use",{"_index":1755,"title":{},"body":{"components/MaterialNavComponent.html":{},"interfaces/UserData-2.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":1958,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":172,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"injectables/BookService.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"interfaces/Message.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"injectables/OfflineSessionService.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"injectables/QuestionService.html":{},"interfaces/QuizChatModel.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"interfaces/QuizResultModel.html":{},"injectables/QuizService-1.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"injectables/ReportsService.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"classes/User.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["user.email",{"_index":2723,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.firstname",{"_index":1214,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.id",{"_index":1212,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.lastname",{"_index":1216,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.name",{"_index":2722,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.password",{"_index":1204,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["user.token",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.username",{"_index":1202,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["userdata",{"_index":1956,"title":{"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["userid",{"_index":794,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{},"interfaces/UserData-2.html":{}}}],["username",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChatComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["username/email",{"_index":2529,"title":{},"body":{"components/SignupComponent.html":{}}}],["username:string",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["userprofilecomponent",{"_index":171,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/FakeBackendInterceptor.html":{},"interfaces/LiveLecture.html":{},"components/MaterialNavComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuizListComponent.html":{},"injectables/ReportsService.html":{},"interfaces/UserData.html":{},"index.html":{}}}],["users'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"components/UserProfileComponent.html":{}}}],["users.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["users.component.html",{"_index":1933,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{}}}],["users.component.scss",{"_index":1932,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{}}}],["users.component.ts",{"_index":1931,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["users.component.ts:31",{"_index":1949,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:32",{"_index":1948,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:33",{"_index":1945,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:35",{"_index":1952,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:36",{"_index":1938,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:45",{"_index":1943,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:49",{"_index":1942,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.component.ts:62",{"_index":1940,"title":{},"body":{"components/OnlineUsersComponent.html":{}}}],["users.filter(user",{"_index":1201,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users.length",{"_index":1251,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users.push(newuser",{"_index":1252,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["users/online",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OnlineUsersComponent.html":{},"interfaces/UserData.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":2513,"title":{"injectables/UserService.html":{}},"body":{"components/SignupComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":2370,"title":{},"body":{"components/RatingComponent.html":{}}}],["ut",{"_index":1377,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["ut.getminutes()}:${ut.getseconds",{"_index":1383,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["val",{"_index":1268,"title":{},"body":{"injectables/HelperService.html":{}}}],["valid",{"_index":1207,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["validation",{"_index":1244,"title":{},"body":{"interceptors/FakeBackendInterceptor.html":{}}}],["validators",{"_index":631,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["validators.required",{"_index":641,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/LoginComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/SignupComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialDashboardComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/StudentService.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["var/www/html/quizapi",{"_index":2916,"title":{},"body":{"index.html":{}}}],["variable",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2959,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2559,"title":{},"body":{"injectables/StudentService.html":{}}}],["video",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["video_library",{"_index":1726,"title":{},"body":{"components/MaterialNavComponent.html":{}}}],["videoid",{"_index":1839,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["videoloddata",{"_index":1866,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["videourl",{"_index":1301,"title":{},"body":{"interfaces/LiveLecture.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["viewchild",{"_index":1955,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["viewchild(matpaginator",{"_index":1951,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["viewchild(matsort",{"_index":1954,"title":{},"body":{"components/OnlineUsersComponent.html":{},"interfaces/QuizData.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{}}}],["violet",{"_index":1991,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/variables.html":{}}}],["visibility",{"_index":972,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["visibility_off",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":34,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthenticationService.html":{},"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"classes/BookDataSource.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"injectables/ChatService.html":{},"interfaces/DialogData.html":{},"components/FacultyAddComponent.html":{},"interfaces/LiveLecture.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OfflineSessionDialog.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"classes/QuestionDataSource.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"components/SidebarComponent.html":{},"components/SignupComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{},"injectables/ThemeService.html":{},"interfaces/UserData-2.html":{},"components/UserProfileComponent.html":{}}}],["warn",{"_index":2355,"title":{},"body":{"components/RatingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webkit",{"_index":970,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["weight",{"_index":1752,"title":{},"body":{"components/MaterialNavComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["went",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["whether",{"_index":2381,"title":{},"body":{"components/RatingComponent.html":{}}}],["white",{"_index":599,"title":{},"body":{"components/BookComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/QuestionComponent.html":{},"components/QuizListComponent.html":{}}}],["width",{"_index":591,"title":{},"body":{"components/BookComponent.html":{},"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/LoginComponent.html":{},"components/MaterialNavComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{},"components/OnlineUsersComponent.html":{},"components/QuestionComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionDetailComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{},"components/QuizListComponent.html":{},"components/ReportsComponent.html":{},"components/SignupComponent.html":{},"components/UserProfileComponent.html":{}}}],["width:nth",{"_index":652,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookEditComponent.html":{},"components/QuestionCreateComponent.html":{},"components/QuestionEditComponent.html":{},"components/QuizCreateComponent.html":{},"components/QuizEditComponent.html":{}}}],["window).document",{"_index":1822,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["window).onyoutubeiframeapiready",{"_index":1836,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["window).yt.player('player",{"_index":1838,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["window.innerwidth",{"_index":1124,"title":{},"body":{"interfaces/DialogData.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDialog.html":{}}}],["within",{"_index":2685,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["word",{"_index":944,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["works",{"_index":1174,"title":{},"body":{"components/FacultyAddComponent.html":{},"components/StudentAddComponent.html":{},"components/StudentDetailsComponent.html":{},"components/StudentListComponent.html":{}}}],["wrap",{"_index":945,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"interceptors/FakeBackendInterceptor.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["wrong",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BookService.html":{},"interfaces/LiveLecture.html":{},"injectables/LogService.html":{},"injectables/OfflineSessionService.html":{},"injectables/QuestionService.html":{},"injectables/QuizService-1.html":{},"injectables/ReportsService.html":{},"injectables/UserService.html":{}}}],["www",{"_index":2934,"title":{},"body":{"index.html":{}}}],["x",{"_index":900,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["x.id",{"_index":1482,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.isanswer",{"_index":1490,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.name",{"_index":1503,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.options.every(y",{"_index":1504,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.options.find((y",{"_index":1510,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.options.find(y",{"_index":1508,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["x.selected",{"_index":1484,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["y.isanswer",{"_index":1506,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["y.selected",{"_index":1505,"title":{},"body":{"interfaces/LiveLecture.html":{}}}],["yaxes",{"_index":2664,"title":{},"body":{"interfaces/UserData-2.html":{}}}],["year",{"_index":649,"title":{},"body":{"components/BookCreateComponent.html":{},"components/BookDetailComponent.html":{},"components/BookEditComponent.html":{},"components/QuestionDetailComponent.html":{}}}],["yellow",{"_index":1964,"title":{},"body":{"components/OnlineUsersComponent.html":{},"components/RatingComponent.html":{},"components/ReportsComponent.html":{},"interfaces/UserData.html":{},"interfaces/UserData-1.html":{},"interfaces/UserData-2.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["youtubeid",{"_index":1791,"title":{},"body":{"components/OfflineSessionDetailComponent.html":{}}}],["z",{"_index":908,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatHistoryComponent.html":{},"components/OfflineSessionComponent.html":{},"components/OfflineSessionDetailComponent.html":{}}}],["zone.js",{"_index":2834,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keepAfterNavigationChange\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                getMessage\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, keepAfterNavigationChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, keepAfterNavigationChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    keepAfterNavigationChange\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keepAfterNavigationChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable {\n        return this.subject.asObservable();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/index/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/index/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/index/app.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/index/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  loginUser: any;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\n    if (!this.authService.isLoggedIn()) {\n      console.log('not login')\n      this.authService.logout();\n    }\n\n    this.authService.getLoginUser()\n      .subscribe(res => {\n        //console.log(res);\n        this.loginUser = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n  \n    \n  \n -->\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookComponent\n\nBookComponent\n\nAppModule -->\n\nBookComponent->AppModule\n\n\n\n\n\nBookCreateComponent\n\nBookCreateComponent\n\nAppModule -->\n\nBookCreateComponent->AppModule\n\n\n\n\n\nBookDetailComponent\n\nBookDetailComponent\n\nAppModule -->\n\nBookDetailComponent->AppModule\n\n\n\n\n\nBookEditComponent\n\nBookEditComponent\n\nAppModule -->\n\nBookEditComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatHistoryComponent\n\nChatHistoryComponent\n\nAppModule -->\n\nChatHistoryComponent->AppModule\n\n\n\n\n\nFacultyAddComponent\n\nFacultyAddComponent\n\nAppModule -->\n\nFacultyAddComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMaterialDashboardComponent\n\nMaterialDashboardComponent\n\nAppModule -->\n\nMaterialDashboardComponent->AppModule\n\n\n\n\n\nMaterialNavComponent\n\nMaterialNavComponent\n\nAppModule -->\n\nMaterialNavComponent->AppModule\n\n\n\n\n\nOfflineSessionComponent\n\nOfflineSessionComponent\n\nAppModule -->\n\nOfflineSessionComponent->AppModule\n\n\n\n\n\nOfflineSessionDetailComponent\n\nOfflineSessionDetailComponent\n\nAppModule -->\n\nOfflineSessionDetailComponent->AppModule\n\n\n\n\n\nOfflineSessionDialog\n\nOfflineSessionDialog\n\nAppModule -->\n\nOfflineSessionDialog->AppModule\n\n\n\n\n\nOnlineUsersComponent\n\nOnlineUsersComponent\n\nAppModule -->\n\nOnlineUsersComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuestionCreateComponent\n\nQuestionCreateComponent\n\nAppModule -->\n\nQuestionCreateComponent->AppModule\n\n\n\n\n\nQuestionDetailComponent\n\nQuestionDetailComponent\n\nAppModule -->\n\nQuestionDetailComponent->AppModule\n\n\n\n\n\nQuestionEditComponent\n\nQuestionEditComponent\n\nAppModule -->\n\nQuestionEditComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizDetailComponent\n\nQuizDetailComponent\n\nAppModule -->\n\nQuizDetailComponent->AppModule\n\n\n\n\n\nQuizEditComponent\n\nQuizEditComponent\n\nAppModule -->\n\nQuizEditComponent->AppModule\n\n\n\n\n\nQuizListComponent\n\nQuizListComponent\n\nAppModule -->\n\nQuizListComponent->AppModule\n\n\n\n\n\nRatingComponent\n\nRatingComponent\n\nAppModule -->\n\nRatingComponent->AppModule\n\n\n\n\n\nReportsComponent\n\nReportsComponent\n\nAppModule -->\n\nReportsComponent->AppModule\n\n\n\n\n\nSafeUrlPipe\n\nSafeUrlPipe\n\nAppModule -->\n\nSafeUrlPipe->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nStudentAddComponent\n\nStudentAddComponent\n\nAppModule -->\n\nStudentAddComponent->AppModule\n\n\n\n\n\nStudentDetailsComponent\n\nStudentDetailsComponent\n\nAppModule -->\n\nStudentDetailsComponent->AppModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nAppModule -->\n\nStudentListComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nBookService\n\nBookService\n\nAppModule -->\n\nBookService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BookComponent\n                        \n                        \n                            BookCreateComponent\n                        \n                        \n                            BookDetailComponent\n                        \n                        \n                            BookEditComponent\n                        \n                        \n                            ChatComponent\n                        \n                        \n                            ChatHistoryComponent\n                        \n                        \n                            FacultyAddComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MaterialDashboardComponent\n                        \n                        \n                            MaterialNavComponent\n                        \n                        \n                            OfflineSessionComponent\n                        \n                        \n                            OfflineSessionDetailComponent\n                        \n                        \n                            OfflineSessionDialog\n                        \n                        \n                            OnlineUsersComponent\n                        \n                        \n                            QuestionComponent\n                        \n                        \n                            QuestionCreateComponent\n                        \n                        \n                            QuestionDetailComponent\n                        \n                        \n                            QuestionEditComponent\n                        \n                        \n                            QuizComponent\n                        \n                        \n                            QuizCreateComponent\n                        \n                        \n                            QuizDetailComponent\n                        \n                        \n                            QuizEditComponent\n                        \n                        \n                            QuizListComponent\n                        \n                        \n                            RatingComponent\n                        \n                        \n                            ReportsComponent\n                        \n                        \n                            SafeUrlPipe\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            SignupComponent\n                        \n                        \n                            StudentAddComponent\n                        \n                        \n                            StudentDetailsComponent\n                        \n                        \n                            StudentListComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            OfflineSessionDialog\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BookService\n                        \n                        \n                            ErrorInterceptor\n                        \n                        \n                            JwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BookService } from './services/book/book.service';\n\n//Modules\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { SharedModule } from './shared/shared.module';\n\nimport { JwtInterceptor, ErrorInterceptor } from './_interceptor';\n\n\n// Components\nimport { AppComponent } from './components/index/app.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n//Material\nimport { SidebarComponent } from './components/layout/sidebar/sidebar.component';\nimport { MaterialDashboardComponent } from './components/layout/material-dashboard/material-dashboard.component';\nimport { MaterialNavComponent } from './components/layout/material-nav/material-nav.component';\n//Student\nimport { StudentAddComponent } from './components/student/add/student-add.component';\nimport { StudentDetailsComponent } from './components/student/details/student-details.component';\nimport { StudentListComponent } from './components/student/list/student-list.component';\n// Faculty\nimport { FacultyAddComponent } from './components/faculty/add/faculty-add.component';\n// Book\nimport { BookComponent } from './components/book/book/book.component';\nimport { BookCreateComponent } from './components/book/book-create/book-create.component';\nimport { BookDetailComponent } from './components/book/book-detail/book-detail.component';\nimport { BookEditComponent } from './components/book/book-edit/book-edit.component';\n// Rating\nimport { RatingComponent } from './components/rating/rating.component';\n// Quiz\nimport { QuizComponent } from './components/quiz/quiz.component';\nimport { QuizListComponent } from './components/quiz/quiz-list/quiz-list.component';\nimport { QuizDetailComponent } from './components/quiz/quiz-detail/quiz-detail.component';\nimport { QuizCreateComponent } from './components/quiz/quiz-create/quiz-create.component';\nimport { QuizEditComponent } from './components/quiz/quiz-edit/quiz-edit.component';\n// Question\nimport { QuestionComponent } from './components/question/question/question.component';\nimport { QuestionCreateComponent } from './components/question/question-create/question-create.component';\nimport { QuestionDetailComponent } from './components/question/question-detail/question-detail.component';\nimport { QuestionEditComponent } from './components/question/question-edit/question-edit.component';\n//Chat\nimport { ChatComponent } from './components/chat/chat.component';\n// Added\nimport { OfflineSessionComponent, OfflineSessionDialog } from './components/offline-session/list/offline-session.component';\nimport { OfflineSessionDetailComponent } from './components/offline-session/detail/offline-session-detail.component';\nimport { SafeUrlPipe } from './pipe/safe-url.pipe';\nimport { OnlineUsersComponent } from './components/online-users/online-users.component';\nimport { ReportsComponent } from './components/reports/reports.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { ChatHistoryComponent } from './components/chat-history/chat-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    SidebarComponent,\n    MaterialDashboardComponent,\n    MaterialNavComponent,\n    StudentAddComponent,\n    StudentDetailsComponent,\n    StudentListComponent,\n    FacultyAddComponent,\n    BookComponent,\n    BookCreateComponent,\n    BookDetailComponent,\n    BookEditComponent,\n    RatingComponent,\n    QuizComponent,\n    QuizListComponent,\n    QuizDetailComponent,\n    QuizCreateComponent,\n    QuizEditComponent,\n    QuestionComponent,\n    QuestionCreateComponent,\n    QuestionDetailComponent,\n    QuestionEditComponent,\n    ChatComponent,\n    OfflineSessionComponent,\n    OfflineSessionDialog,\n    OfflineSessionDetailComponent,\n    SafeUrlPipe,\n    OnlineUsersComponent,\n    ReportsComponent,\n    UserProfileComponent,\n    ChatHistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    LayoutModule,\n    BrowserAnimationsModule,\n    SharedModule\n  ],\n  entryComponents: [OfflineSessionDialog],\n  providers: [\n    BookService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nAuthService->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Guard\nimport { AuthGuard } from './_guards/auth/auth.guard';\nimport { RoleGuard } from './_guards/role/role.guard';\n\n// Services\nimport { AuthService } from './services/auth/auth.service';\n\n// Components\nimport { MaterialDashboardComponent } from './components/layout/material-dashboard/material-dashboard.component';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\nimport { OfflineSessionComponent } from './components/offline-session/list/offline-session.component';\nimport { OfflineSessionDetailComponent } from './components/offline-session/detail/offline-session-detail.component';\n\n// Quiz\nimport { QuizComponent } from './components/quiz/quiz.component';\nimport { QuizListComponent } from './components/quiz/quiz-list/quiz-list.component';\nimport { QuizDetailComponent } from './components/quiz/quiz-detail/quiz-detail.component';\nimport { QuizCreateComponent } from './components/quiz/quiz-create/quiz-create.component';\nimport { QuizEditComponent } from './components/quiz/quiz-edit/quiz-edit.component';\n// Question\nimport { QuestionComponent } from './components/question/question/question.component';\nimport { QuestionCreateComponent } from './components/question/question-create/question-create.component';\nimport { QuestionDetailComponent } from './components/question/question-detail/question-detail.component';\nimport { QuestionEditComponent } from './components/question/question-edit/question-edit.component';\n\nimport { OnlineUsersComponent } from './components/online-users/online-users.component';\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\nimport { ReportsComponent } from './components/reports/reports.component';\nimport { ChatHistoryComponent } from './components/chat-history/chat-history.component';\n//Chat\nimport { ChatComponent } from './components/chat/chat.component';\n\n// Parent Routes\nconst routes : Routes = [\n\t\n\t{ path: '', redirectTo: '/quiz', pathMatch: 'full' },\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent\n\t},\n\t{\n\t\tpath: 'profile',\n\t\tcomponent: UserProfileComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: { title: 'User Profile' }\n\t},\n\t{\n\t\tpath: 'quiz',\n\t\tcomponent: QuizComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: { title: 'Play Quiz' }\n\t},\n\t{\n\t\tpath: 'dashboard',\n\t\tcomponent: MaterialDashboardComponent\n\t},\n\t{\n\t\tpath: 'quizs',\n\t\tcomponent: QuizListComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'quiz-details/:id',\n\t\tcomponent: QuizDetailComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'quiz-edit/:id',\n\t\tcomponent: QuizEditComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'quiz-create',\n\t\tcomponent: QuizCreateComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'signup',\n\t\tcomponent: SignupComponent\n\t},\n\t{\n\t\tpath: 'online-users',\n\t\tcomponent: OnlineUsersComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: { title: 'Online Users' }\n\t},\n\t{\n\t\tpath: 'reports',\n\t\tcomponent: ReportsComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'offline-session',\n\t\tcomponent: OfflineSessionComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: { title: 'Offline Session' }\n\t},\n\t{\n\t\tpath: 'offline-session/:id',\n\t\tcomponent: OfflineSessionDetailComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: { title: 'Offline Session Details' }\n\t},\n\t{\n\t\tpath: 'questions',\n\t\tcomponent: QuestionComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'question-details/:id',\n\t\tcomponent: QuestionDetailComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'question-create',\n\t\tcomponent: QuestionCreateComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'question-edit/:id',\n\t\tcomponent: QuestionEditComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t},\n\t{\n\t\tpath: 'chat-history',\n\t\tcomponent: ChatHistoryComponent,\n\t\tcanActivate: [RoleGuard],\n\t\tdata: { expectedRole: 'Admin' }\n\t}\n];\n\n@NgModule({\n  imports: [\n  RouterModule.forRoot(routes), \n  BrowserModule,\n  FormsModule,\n  HttpClientModule],\n  exports: [RouterModule],\n  providers: [AuthService]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/auth/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/auth/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/auth/auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private authService: AuthService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n      let url: string = state.url;\n\n    \tif (this.authService.isLoggedIn()) {\n        this.authService.setUserLastActive()\n        .subscribe(res => {\n          console.log('AuthGuard',res);\n        }, err => {\n          console.log(err);\n        });\n        //console.log('AuthGuard', url)\n    \t\treturn true;\n    \t}\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMessage\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getChatHistory\n                            \n                            \n                                    Public\n                                getExpiration\n                            \n                            \n                                getLastActiveUserByCourseId\n                            \n                            \n                                getLastActiveUsers\n                            \n                            \n                                getLiveLectureUrl\n                            \n                            \n                                getLoginInfoFromEdusatLms\n                            \n                            \n                                    Public\n                                getLoginUser\n                            \n                            \n                                getPublishedLectureByCourseId\n                            \n                            \n                                getStudyMaterialByCourseList\n                            \n                            \n                                getUserRoles\n                            \n                            \n                                getVideoLectureLogById\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                handRaise\n                            \n                            \n                                isAdmin\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                isLoggedOut\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                postLogin\n                            \n                            \n                                    Public\n                                postRate\n                            \n                            \n                                rateThisSession\n                            \n                            \n                                    Public\n                                setUserLastActive\n                            \n                            \n                                submitAttendance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMessage(lecture_id: number, course_id: number, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lecture_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \ngetChatHistory(lecture_id: number, course_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lecture_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getExpiration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getExpiration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastActiveUserByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastActiveUserByCourseId(courseId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastActiveUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastActiveUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLiveLectureUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetLiveLectureUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLoginInfoFromEdusatLms\n                        \n                        \n                    \n                \n            \n            \n                \ngetLoginInfoFromEdusatLms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLoginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLoginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPublishedLectureByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetPublishedLectureByCourseId(course_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStudyMaterialByCourseList\n                        \n                        \n                    \n                \n            \n            \n                \ngetStudyMaterialByCourseList(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserRoles\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserRoles(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVideoLectureLogById\n                        \n                        \n                    \n                \n            \n            \n                \ngetVideoLectureLogById(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handRaise\n                        \n                        \n                    \n                \n            \n            \n                \nhandRaise(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoggedOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postLogin(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRate(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rateThisSession\n                        \n                        \n                    \n                \n            \n            \n                \nrateThisSession(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUserLastActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUserLastActive(status: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitAttendance\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitAttendance(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport * as moment from \"moment\";\nimport { Router } from '@angular/router';\nimport { User } from '../../models/chat/user';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\nconst apiUrl = `${environment.apiUrl}/users`;\nconst phpApiUrl = `${environment.phpApiUrl}`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private user: User;\n  public admin: boolean = false;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred client-side:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  public postLogin(data): Observable {\n    //console.log(data)\n  \t//const loginUrl = `${apiUrl}/login`;\n    const loginUrl = phpApiUrl + '/login';\n  \t//console.log(loginUrl);\n    return this.http.post(loginUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  public getLoginUser(): Observable{\n    //const url = `${apiUrl}/loggedin`;\n    const url = phpApiUrl + '/loggedin';\n    //console.log(loginUrl);\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n      \n  }\n\n  public setUserLastActive(status = 1): Observable{\n    \n    //const url = `${apiUrl}/loggedin`;\n    const url = phpApiUrl + '/set-user-last-active/'+ status;\n    console.log(url);\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n      \n  }       \n\n\tpublic logout() {\n\n    localStorage.removeItem(\"currentUser\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    \n    this.router.navigate(['/login']);\n\t}\n\n\tpublic isLoggedIn() {\n    //return !!localStorage.getItem(\"currentUser\");\n\t  return moment().isBefore(this.getExpiration());\n\t}\n\n\tpublic isLoggedOut() {\n\t    return !this.isLoggedIn();\n\t}\n\n\tpublic getExpiration() {\n\t    const expiration = localStorage.getItem(\"expires_at\");\n\t    const expiresAt = JSON.parse(expiration);\n\t    return moment(expiresAt);\n\t}\n\n\n  isAdmin(){\n    var curentUser = JSON.parse( localStorage.getItem(\"currentUser\") );\n    // console.log('curentUser.admin', curentUser);\n    if (curentUser) {\n      return curentUser.admin;\n    }\n    return false;\n  }\n\n  getUserRoles(user: User): Observable {\n    return this.http.get(apiUrl + '/loggedin')\n     .pipe(\n       map(roles => {\n       user = roles;\n       return user;\n      }));\n  }\n\n  getLiveLectureUrl(): Observable {\n    const url = phpApiUrl +'/live_lecture';\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getVideoLectureLogById(data): Observable {\n    const url = phpApiUrl +'/video-lecture-log';\n    return this.http.post(url, data, httpOptions).pipe(\n      catchError(this.handleError));\n  }\n  getStudyMaterialByCourseList(data): Observable {\n    const url = phpApiUrl +'/study-material';\n    return this.http.post(url, data, httpOptions).pipe(\n      catchError(this.handleError));\n  }\n\n  rateThisSession(data): Observable {\n    const url = phpApiUrl +'/rate_session';\n    return this.http.post(url, data, httpOptions).pipe(\n      catchError(this.handleError));\n  }\n\n  getLoginInfoFromEdusatLms(): Observable {\n    const url = phpApiUrl +'/hand_raise';\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getPublishedLectureByCourseId(course_id: number): Observable {\n    \n    const url = phpApiUrl +'/lecture/' + course_id;\n    console.log(url);\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getChatHistory(lecture_id: number, course_id: number): Observable {\n    const chatApiUrl = `${environment.apiUrl}/chat/${lecture_id}/${course_id}`;\n    return this.http.get(chatApiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  deleteMessage(lecture_id: number, course_id: number, id: string): Observable {\n    const url = `${environment.apiUrl}/chat/${lecture_id}/${course_id}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  handRaise(data): Observable {\n    const url = phpApiUrl +'/hand_raise';\n    return this.http.post(url, data, httpOptions).pipe(\n      catchError(this.handleError));\n  }\n\n  public postRate(data): Observable {\n\n    const url = phpApiUrl + '/rate_session';\n  \t//console.log(url);\n    return this.http.post(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getLastActiveUsers(): Observable {\n    const url = phpApiUrl +'/last-active-users';\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getLastActiveUserByCourseId(courseId): Observable {\n    const url = phpApiUrl +'/last-active-users/'+ courseId;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  submitAttendance(data) {\n    const url = phpApiUrl + '/submit_attendance';\n  \t//console.log(url);\n    return this.http.post(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                admin\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/authentication.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/authentication.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/authentication.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/authentication.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUserSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/auth/authentication.service.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { User } from '../../models';\nimport * as moment from \"moment\";\n\nimport { environment } from '../../../environments/environment';\n\n\nconst apiUrl = `${environment.apiUrl}/users`;\nconst phpApiUrl = `${environment.phpApiUrl}`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  public admin: boolean = false;\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n\n    this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n\n  }\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n\n  public login(username: string, password: string) {\n    const loginUrl = phpApiUrl + '/login';\n    return this.http.post(loginUrl, { username, password })\n      .pipe(map(user => {\n          // login successful if there's a jwt token in the response\n          if (user && user.token) {\n            const expiresAt = moment().utcOffset(\"+05:30\").add(user.expiresIn,'hours');\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('currentUser', JSON.stringify(user));\n            localStorage.setItem('id_token', user.token);\n            localStorage.setItem(\"expires_at\", JSON.stringify(expiresAt.valueOf()) );\n            this.currentUserSubject.next(user);\n          }\n\n          return user;\n      }));\n  }\n\n\tpublic logout() {\n\n    localStorage.removeItem(\"currentUser\");\n    localStorage.removeItem(\"id_token\");\n    localStorage.removeItem(\"expires_at\");\n    this.currentUserSubject.next(null);\n    this.router.navigate(['/login']);\n\t    \n\t}\n\n\t\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookComponent.html":{"url":"components/BookComponent.html","title":"component - BookComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/book/book/book.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book\n            \n\n            \n                styleUrls\n                ./book.component.css\n            \n\n\n\n            \n                templateUrl\n                ./book.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                books\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/book/book/book.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book/book.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            books\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book/book.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BookDataSource(this.api)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book/book.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['isbn', 'title', 'author']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book/book.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../../../services/book/book.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  books: any;\n  displayedColumns = ['isbn', 'title', 'author'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: BookService) { }\n\n  ngOnInit() {\n    this.api.getBooks()\n      .subscribe(res => {\n        console.log(res);\n        this.books = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class BookDataSource extends DataSource {\n  constructor(private api: BookService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getBooks();\n  }\n\n  disconnect() {\n\n  }\n}\n\n    \n\n    \n        \n  add\n\n\n  \n\n    \n\n    \n    \n       ISBN \n       {{element.isbn}} \n    \n\n    \n    \n       Title \n       {{element.title}} \n    \n\n    \n    \n       Author \n       {{element.author}} \n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./book.component.css\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  min-width: 100%;\n  overflow: auto;\n}\n\n.isbn-col {\n  flex: 0 0 100px !important;\n  white-space: unset !important;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n.example-full-width {\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add                     ISBN        {{element.isbn}}                    Title        {{element.title}}                    Author        {{element.author}}               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookCreateComponent.html":{"url":"components/BookCreateComponent.html","title":"component - BookCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/book/book-create/book-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book-create\n            \n\n            \n                styleUrls\n                ./book-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./book-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                bookForm\n                            \n                            \n                                description\n                            \n                            \n                                isbn\n                            \n                            \n                                published_year\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, api: BookService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/book/book-create/book-create.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-create/book-create.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-create/book-create.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isbn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            published_year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-create/book-create.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookService } from '../../../services/book/book.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.scss']\n})\nexport class BookCreateComponent implements OnInit {\n\n  bookForm: FormGroup;\n  isbn:string='';\n  title:string='';\n  description:string='';\n  author:string='';\n  publisher:string='';\n  published_year:string='';\n\n  constructor(private router: Router, private api: BookService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'publisher' : [null, Validators.required],\n      'published_year' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.postBook(form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n\n    \n\n    \n        \n  list\n\n\n  \n    \n    \n      Please enter ISBN\n    \n  \n  \n    \n    \n      Please enter Book Title\n    \n  \n  \n    \n    \n      Please enter Book Author\n    \n  \n  \n    \n    \n      Please enter Book Description\n    \n  \n  \n    \n    \n      Please enter Publisher\n    \n  \n  \n    \n    \n      Please enter Published Year\n    \n  \n  \n    save\n  \n\n\n    \n\n    \n                \n                    ./book-create.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\n.example-full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list                Please enter ISBN                      Please enter Book Title                      Please enter Book Author                      Please enter Book Description                      Please enter Publisher                      Please enter Published Year            save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDataSource.html":{"url":"classes/BookDataSource.html","title":"class - BookDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/book/book/book.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: BookService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/book/book/book.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book/book.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book/book.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BookService } from '../../../services/book/book.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  books: any;\n  displayedColumns = ['isbn', 'title', 'author'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: BookService) { }\n\n  ngOnInit() {\n    this.api.getBooks()\n      .subscribe(res => {\n        console.log(res);\n        this.books = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class BookDataSource extends DataSource {\n  constructor(private api: BookService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getBooks();\n  }\n\n  disconnect() {\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookDetailComponent.html":{"url":"components/BookDetailComponent.html","title":"component - BookDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/book/book-detail/book-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book-detail\n            \n\n            \n                styleUrls\n                ./book-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./book-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                book\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBook\n                            \n                            \n                                getBookDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, api: BookService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/book/book-detail/book-detail.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBook(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-detail/book-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBookDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetBookDetails(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-detail/book-detail.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-detail/book-detail.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            book\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-detail/book-detail.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookService } from '../../../services/book/book.service';\n\n@Component({\n  selector: 'app-book-detail',\n  templateUrl: './book-detail.component.html',\n  styleUrls: ['./book-detail.component.scss']\n})\nexport class BookDetailComponent implements OnInit {\n\n  book: any = {};\n\n  constructor(private route: ActivatedRoute, private api: BookService, private router: Router) { }\n\n  ngOnInit() {\n    this.getBookDetails(this.route.snapshot.params['id']);\n  }\n\n  getBookDetails(id) {\n    this.api.getBook(id)\n      .subscribe(data => {\n        console.log(data);\n        this.book = data;\n      });\n  }\n\n  deleteBook(id) {\n    this.api.deleteBook(id)\n      .subscribe(res => {\n          this.router.navigate(['/books']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n\n    \n\n    \n        \n  list\n\n\n  \n    {{book.title}}\n    {{book.description}}\n  \n  \n    \n      ISBN:\n      {{book.isbn}}\n      Author:\n      {{book.author}}\n      Publisher:\n      {{book.publisher}}\n      Publish Year:\n      {{book.published_year}}\n      Update Date:\n      {{book.updated_date | date}}\n    \n  \n  \n    edit\n    delete\n  \n\n\n    \n\n    \n                \n                    ./book-detail.component.scss\n                \n                .example-card {\n  max-width: 500px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list      {{book.title}}    {{book.description}}              ISBN:      {{book.isbn}}      Author:      {{book.author}}      Publisher:      {{book.publisher}}      Publish Year:      {{book.published_year}}      Update Date:      {{book.updated_date | date}}            edit    delete  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookEditComponent.html":{"url":"components/BookEditComponent.html","title":"component - BookEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BookEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/book/book-edit/book-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-book-edit\n            \n\n            \n                styleUrls\n                ./book-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./book-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                bookForm\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isbn\n                            \n                            \n                                published_year\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bookDetails\n                            \n                            \n                                getBook\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, api: BookService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/book/book-edit/book-edit.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        BookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bookDetails\n                        \n                        \n                    \n                \n            \n            \n                \nbookDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-edit/book-edit.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBook\n                        \n                        \n                    \n                \n            \n            \n                \ngetBook(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-edit/book-edit.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-edit/book-edit.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/book/book-edit/book-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bookForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isbn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            published_year\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publisher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/book/book-edit/book-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BookService } from '../../../services/book/book.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.scss']\n})\nexport class BookEditComponent implements OnInit {\n\n  bookForm: FormGroup;\n  id:string = '';\n  isbn:string = '';\n  title:string = '';\n  description:string = '';\n  author:string = '';\n  publisher:string = '';\n  published_year:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: BookService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getBook(this.route.snapshot.params['id']);\n    this.bookForm = this.formBuilder.group({\n      'isbn' : [null, Validators.required],\n      'title' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'author' : [null, Validators.required],\n      'publisher' : [null, Validators.required],\n      'published_year' : [null, Validators.required]\n    });\n  }\n\n  getBook(id) {\n    this.api.getBook(id).subscribe(data => {\n      this.id = data._id;\n      this.bookForm.setValue({\n        isbn: data.isbn,\n        title: data.title,\n        description: data.description,\n        author: data.author,\n        publisher: data.publisher,\n        published_year: data.published_year\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.updateBook(this.id, form)\n      .subscribe(res => {\n          let id = res['_id'];\n          this.router.navigate(['/book-details', id]);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  bookDetails() {\n    this.router.navigate(['/book-details', this.id]);\n  }\n}\n\n    \n\n    \n        \n  show\n\n\n  \n    \n    \n      Please enter ISBN\n    \n  \n  \n    \n    \n      Please enter Book Title\n    \n  \n  \n    \n    \n      Please enter Book Author\n    \n  \n  \n    \n    \n      Please enter Book Description\n    \n  \n  \n    \n    \n      Please enter Publisher\n    \n  \n  \n    \n    \n      Please enter Published Year\n    \n  \n  \n    save\n  \n\n\n    \n\n    \n                \n                    ./book-edit.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\n.example-full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  show                Please enter ISBN                      Please enter Book Title                      Please enter Book Author                      Please enter Book Description                      Please enter Publisher                      Please enter Published Year            save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookService.html":{"url":"injectables/BookService.html","title":"injectable - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/book/book.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteBook\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getBook\n                            \n                            \n                                getBooks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postBook\n                            \n                            \n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/book/book.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteBook\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteBook(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBook\n                        \n                        \n                    \n                \n            \n            \n                \ngetBook(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBooks\n                        \n                        \n                    \n                \n            \n            \n                \ngetBooks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postBook\n                        \n                        \n                    \n                \n            \n            \n                \npostBook(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateBook\n                        \n                        \n                    \n                \n            \n            \n                \nupdateBook(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/book/book.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/book`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getBooks(): Observable {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getBook(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postBook(data): Observable {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateBook(id: string, data): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteBook(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat/chat.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n            \n                styleUrls\n                ./chat.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                ioConnection\n                            \n                            \n                                live_lecture\n                            \n                            \n                                loginUser\n                            \n                            \n                                messageContent\n                            \n                            \n                                messages\n                            \n                            \n                                parent_content\n                            \n                            \n                                parent_id\n                            \n                            \n                                parent_name\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMessage\n                            \n                            \n                                getChatHistory\n                            \n                            \n                                    Private\n                                getRandomId\n                            \n                            \n                                    Private\n                                initIoConnection\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                reply\n                            \n                            \n                                    Public\n                                scrollTo\n                            \n                            \n                                    Public\n                                sendMessage\n                            \n                            \n                                    Public\n                                sendNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat/chat.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMessage(lecture_id, course_id, id, index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lecture_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \ngetChatHistory(lecture_id: number, course_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lecture_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRandomId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initIoConnection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initIoConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reply\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reply(parent_id, parent_name, parent_content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent_name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parent_content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            scrollTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollTo(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendNotification(params: any, action: Action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat/chat.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Action\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ioConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            live_lecture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messageContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent_content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat/chat.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Action } from '../../models/chat/action';\nimport { Event } from '../../models/chat/event';\nimport { Message } from '../../models/chat/message';\nimport { User } from '../../models/chat/user';\nimport { ChatService } from '../../services/chat.service';\nimport { AuthService } from '../../services/auth/auth.service';\n\nconst AVATAR_URL = 'https://api.adorable.io/avatars/285';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\taction = Action;\n\tloginUser: any;\n\tuser: User;\n\tlive_lecture: any;\n\tmessages: Message[] = [];\n\tmessageContent: string;\n\tparent_id: any;\n\tparent_name: string;\n\tparent_content: any;\n\tioConnection: any;\n\n  \tconstructor(private chatService: ChatService, private authService: AuthService) { }\n\n\tngOnInit() {\n    \tconst randomId = this.getRandomId();\n\t\tthis.authService.getLoginUser()\n\t      .subscribe(res => {\n\t        console.log(res);\n\t        this.loginUser = res;\n\t        this.user = {\n\t\t      id: randomId,\n\t\t      userId: res.user.id,\n\t\t      name: res.user.name,\n\t\t      avatar: `${AVATAR_URL}/${randomId}.png`\n\t\t    };\n\t      }, err => {\n\t        console.log(err);\n\t\t  });\n\t\t  this.authService.getLiveLectureUrl()\n\t\t\t.subscribe(res => {\n\t\t\t\t//console.log('getLiveLacture', res.live_url);\n\t\t\t\tthis.live_lecture = res.live_url;\n\t\t\t\tthis.getChatHistory(this.live_lecture.lecture_id, this.live_lecture.course_id);\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t  \tthis.initIoConnection();\n\t}\n\n\tprivate initIoConnection(): void {\n\n\t    this.ioConnection = this.chatService.onMessage()\n\t      .subscribe((message: Message) => {\n\t\t\tconsole.log('message', message)\n\t\t\tthis.messages.push(message);\n\t\t\tlet scrollElem = document.getElementById('conv');\n\t\t\tscrollElem.scrollTop = scrollElem.scrollHeight;\n\t\t\t// this.scrollTo('scrollToBottom');\n\t      });\n\n\t    this.chatService.onEvent(Event.CONNECT)\n\t      .subscribe(() => {\n\t        console.log('connected');\n\t      });\n\t      \n\t    this.chatService.onEvent(Event.DISCONNECT)\n\t      .subscribe(() => {\n\t        console.log('disconnected');\n\t      });\n\t}\n\n\tgetChatHistory(lecture_id: number, course_id: number){\n\t\tthis.authService.getChatHistory(lecture_id, course_id)\n\t\t\t.subscribe(res => {\n\t\t\t\tconsole.log('getChatHistory', res);\n\t\t\t\tif (res.message) {\n\t\t\t\t\tthis.messages = res.message;\n\t\t\t\t}\n\t\t\t\t//console.log('getChatHistory', this.messages);\n\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tprivate getRandomId(): number {\n\t    return Math.floor(Math.random() * (1000000)) + 1;\n\t}\n\n\tpublic sendMessage(message: string): void {\n\t    if (!message) {\n\t      return;\n\t    }\n\t\tconsole.log('this.live_lecture ', this.live_lecture.lecture_id );\n\t    this.chatService.send({\n\t      from: this.user,\n\t\t  content: message,\n\t\t  parent_id: this.parent_id,\n\t\t  parent_message: {\n\t\t\t  parent_name: this.parent_name,\n\t\t\t  parent_content: this.parent_content\n\t\t  },\n\t\t  lecture_id: this.live_lecture.lecture_id,\n\t\t  course_id: this.live_lecture.course_id,\n\t      created_at: new Date(),\n\t\t});\n\t\t//let lastMessage = this.messages[this.messages.length - 1]; \n\t\tlet scrollElem = document.getElementById('conv');\n\t\tscrollElem.scrollTop = scrollElem.scrollHeight;\n\n\t\t// this.scrollTo(lastMessage._id);\n\t\tthis.messageContent = null;\n\t\tthis.parent_id = null;\n\t}\n\n\tpublic scrollTo(id) {\n\t\tvar elmnt = document.getElementById(id);\n\t\telmnt.scrollIntoView();\n\t}\n\n\tpublic reply(parent_id, parent_name, parent_content) {\n\t\tthis.parent_id = parent_id;\n\t\tthis.parent_name = parent_name;\n\t\tthis.parent_content = parent_content;\n\t\tdocument.getElementById(\"mat-input-0\").focus();\n\n\t\tconsole.log('this.replyId',this.parent_id);\n\t}\n\tdeleteMessage(lecture_id, course_id, id, index) {\n\t\tthis.authService.deleteMessage(lecture_id, course_id, id)\n\t\t  .subscribe(res => {\n\t\t\t  console.log(res)\n\t\t\t  if (res) {\n\t\t\t\tthis.messages.splice(index, 1);\n\t\t\t  }\n\t\t\t  //this.router.navigate(['/quizs']);\n\t\t\t}, (err) => {\n\t\t\t  console.log(err);\n\t\t\t}\n\t\t);\n\t}\n\tpublic sendNotification(params: any, action: Action): void {\n\t    let message: Message;\n\n\t    if (action === Action.JOINED) {\n\t      message = {\n\t        from: this.user,\n\t        action: action\n\t      }\n\t    } else if (action === Action.RENAME) {\n\t      message = {\n\t        action: action,\n\t        content: {\n\t          username: this.user.name,\n\t          previousUsername: params.previousUsername\n\t        }\n\t      };\n\t    }\n\n\t    this.chatService.send(message);\n\t}\n}\n\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              forum\n              selectedConversation.display_name\n            \n              account_circle\n              (selectedConversation.members | keys).length Members\n           -->\n\n           -->\n          \n          \n            \n              \n              \n                \n                  \n                 -->\n                \n                   -->\n                  \n                      {{message.parent_message.parent_name}} \n                      \n                          {{message.parent_message.parent_content | slice:0:50}} ...\n                      \n                    \n                   -->\n                \n                \n                  \n                    expand_more\n                  \n                  \n                    \n                      reply\n                      Reply\n                    \n                    \n                      edit\n                      Edit\n                     -->\n                    \n                      delete_forever\n                      Delete\n                    \n                                      \n                \n                {{message.from.name}}\n                \n                \n                  {{message.content }}\n                \n                \n                \n                \n                    {{ message.created_at | date:'h:mm a'}}\n                    \n                \n                \n                   {{message.from.name}} joined to the conversation. \n                \n                \n                   {{message.content.previousUsername}} is now {{message.content.username}} \n                \n              \n            \n            \n          \n\n          \n             -->\n            \n              \n                  \n                      clear\n                    \n                  {{parent_name}} \n                  \n                    {{parent_content | slice:0:50}} ...\n                  \n              \n            \n\n            \n               -->\n              \n              {{inputMessage.value.length}}/640\n              send\n            \n\n          \n        \n    \n\n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                /* Chat */\n\n.chat {\n  height: calc(100% - 69px);\n}\n\n.chat-container {\n  height: 100%;\n}\n\n/* Conversation */\n\n.mat-drawer.mat-drawer-side {\n    padding: 0 5px;\n}\n\n.container ::ng-deep .mat-tab-label {\n    min-width: 100px;\n}\n\n\n.divider {\n    width: 100%;\n}\n\n.empty-conversation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n}\n\n.conversation-header h2, .conversation-header p {\n    align-items: center;\n    display: flex;\n}\n\n\n.text-center {\n    text-align: center;\n    width: 100%;\n}\n\n.conversation-history.mat-list {\n    height: calc(100% - 144px);\n    //overflow-x: scroll;\n    position: absolute;\n    width: 100%;\n    background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n    z-index: 0;\n}\n.conversation .conversation-container {\n  height: 100%;\n  box-shadow: inset 0 10px 10px -10px #000000;\n  overflow-x: hidden;\n  padding: 0 16px;\n  margin-bottom: 5px;\n}\n.conversation .conversation-container:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n.conversation-history.mat-list p {\n    margin: 0;\n}\n\n.empty-conversation h1 {\n    margin: 0;\n}\n\n.conversations .mat-list-item {\n    cursor: pointer;\n}\n\n.create-conversation {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n.mat-card {\n    height: 100%;\n    padding: 0 24px;\n    overflow: scroll;\n}\n\n\n.conversation-input {\n    position: absolute;\n    bottom: 0.1em;\n    width: 100%;\n    padding: 5px;\n    //background-color: #fafafa;\n}\n\nsection .mat-list .mat-list-avatar{\n    width: 25px;\n    height: 25px;\n}\n\n.mat-list-avatar {\n    margin: 0 5px;\n}\n\n.right {\n    text-align: right;\n}\n\n.full-width {\n    width: 100%;\n}\n\n.full-width .mat-icon {\n    cursor: pointer;\n}\n\n.all-conversations {\n    opacity: 0.7;\n}\n\n/* Messages */\n\n.message {\n  color: #000;\n  clear: both;\n  line-height: 18px;\n  font-size: 15px;\n  padding: 8px;\n  position: relative;\n  margin: 8px 0;\n  max-width: 90%;\n  // word-wrap: break-word;\n  // z-index: -1;\n}\n\n.message:after {\n  position: absolute;\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n\n\n.metadata {\n  display: inline-block;\n  float: right;\n  padding: 0 0 0 7px;\n  position: relative;\n  bottom: -4px;\n}\n\n.metadata .time {\n  color: rgba(0, 0, 0, .45);\n  font-size: 11px;\n  display: inline-block;\n}\n\n.metadata .tick {\n  display: inline-block;\n  margin-left: 2px;\n  position: relative;\n  top: 4px;\n  height: 16px;\n  width: 16px;\n}\n\n.metadata .tick svg {\n  position: absolute;\n  transition: .5s ease-in-out;\n}\n\n.metadata .tick svg:first-child {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  -webkit-transform: perspective(800px) rotateY(180deg);\n          transform: perspective(800px) rotateY(180deg);\n}\n\n.metadata .tick svg:last-child {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  -webkit-transform: perspective(800px) rotateY(0deg);\n          transform: perspective(800px) rotateY(0deg);\n}\n\n.metadata .tick-animation svg:first-child {\n  -webkit-transform: perspective(800px) rotateY(0);\n          transform: perspective(800px) rotateY(0);\n}\n\n.metadata .tick-animation svg:last-child {\n  -webkit-transform: perspective(800px) rotateY(-179.9deg);\n          transform: perspective(800px) rotateY(-179.9deg);\n}\n\n.message:first-child {\n  margin: 16px 0 8px;\n}\n\n.message.received {\n  background: #fff;\n  border-radius: 0px 5px 5px 5px;\n  float: left;\n}\n.parent-container .parent-quoted{\n  width: 100%;\n  clear: both;\n  background: rgba(124, 122, 122, 0.3);\n  padding:  0 3px;\n  padding-bottom: 3px;\n  border-left: 2px solid rgba(124, 122, 122, 0.9);\n  border-radius: 3px 3px 3px 3px;\n  cursor: pointer;\n}\n.more-option .mat-icon {\n  cursor: pointer;\n}\n.parent-container .message.received {\n  background: rgb(124, 122, 122);\n  border-radius: 5px 5px 0px 0px;\n  width: 100%;\n  float: left;\n}\n\n.message.received .metadata {\n  padding: 0 0 0 16px;\n}\n\n.message.received:after {\n  border-width: 0px 10px 10px 0;\n  border-color: transparent #fff transparent transparent;\n  top: 0;\n  left: -10px;\n}\n\n.message.sent {\n  background: #e1ffc7;\n  border-radius: 5px 0px 5px 5px;\n  float: right;\n}\n\n.message.sent:after {\n  border-width: 0px 0 10px 10px;\n  border-color: transparent transparent transparent #e1ffc7;\n  top: 0;\n  right: -10px;\n}\n\n\nsection .mat-list .mat-list-avatar{\n    width: 25px;\n    height: 25px;\n}\n\n.mat-list-avatar {\n    margin: 0 5px;\n}\n\n.avatar {\n    position: relative;\n}\n.base_receive > .avatar:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 0;\n    height: 0;\n    border: 5px solid #FFF;\n    border-left-color: rgba(0, 0, 0, 0);\n    border-bottom-color: rgba(0, 0, 0, 0);\n}\n\n.base_sent {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n.base_sent > .avatar:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0;\n    height: 0;\n    border: 5px solid white;\n    border-right-color: transparent;\n    border-top-color: transparent;\n    box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close\n}\n\n// Small devices (landscape phones, 576px and up)\n@media (max-width: 767px) { \n  .conversation-history.mat-list {\n    height: 500px;\n    //overflow-x: scroll;\n    position: relative;\n    width: 100%;\n    background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n    z-index: 0;\n  }\n  .conversation .conversation-container {\n    height: 100%;\n    box-shadow: inset 0 10px 10px -10px #000000;\n    overflow-x: hidden;\n    padding: 0 16px;\n    margin-bottom: 5px;\n  }\n\n  .conversation-input {\n    position: relative;\n    bottom: 0.1em;\n    width: 100%;\n    background-color: white !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      forum              selectedConversation.display_name                          account_circle              (selectedConversation.members | keys).length Members           -->           -->                                                                                                               -->                                   -->                                        {{message.parent_message.parent_name}}                                                 {{message.parent_message.parent_content | slice:0:50}} ...                                                             -->                                                                      expand_more                                                                              reply                      Reply                                                              edit                      Edit                     -->                                          delete_forever                      Delete                                                                                          {{message.from.name}}                                                  {{message.content }}                                                                                    {{ message.created_at | date:\\'h:mm a\\'}}                                                                       {{message.from.name}} joined to the conversation.                                                    {{message.content.previousUsername}} is now {{message.content.username}}                                                                                        -->                                                                  clear                                      {{parent_name}}                                       {{parent_content | slice:0:50}} ...                                                                       -->                            {{inputMessage.value.length}}/640              send                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatHistoryComponent.html":{"url":"components/ChatHistoryComponent.html","title":"component - ChatHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/chat-history/chat-history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-history\n            \n\n            \n                styleUrls\n                ./chat-history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                courseId\n                            \n                            \n                                courseList\n                            \n                            \n                                lectureId\n                            \n                            \n                                lectureList\n                            \n                            \n                                loginUser\n                            \n                            \n                                messages\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChatHistory\n                            \n                            \n                                getLecturesByCourseId\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/chat-history/chat-history.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \ngetChatHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-history/chat-history.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLecturesByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetLecturesByCourseId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-history/chat-history.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/chat-history/chat-history.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Action\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lectureId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lectureList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/chat-history/chat-history.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { QuizService } from '../../services/quiz/quiz.service';\nimport { Action } from '../../models/chat/action';\nimport { User } from '../../models/chat/user';\n\n@Component({\n  selector: 'app-chat-history',\n  templateUrl: './chat-history.component.html',\n  styleUrls: ['./chat-history.component.scss']\n})\nexport class ChatHistoryComponent implements OnInit {\n  action = Action;\n  loginUser: any;\n  user: User;\n  courseId: number;\n  courseList: any = [];\n  lectureId: number;\n  lectureList: any = [];\n  messages: any = [];\n\n  constructor(private authService: AuthService, private quizService: QuizService) { }\n\n  ngOnInit() {\n    this.authService.getLoginUser()\n\t      .subscribe(res => {\n\t        console.log(res);\n\t        this.loginUser = res;\n\t        this.user = {\n\t\t      userId: res.user.id,\n\t\t      name: res.user.name\n\t\t    };\n\t      }, err => {\n\t        console.log(err);\n\t\t  });\n    this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  getLecturesByCourseId() {\n    console.log(this.courseId);\n    this.authService.getPublishedLectureByCourseId(this.courseId)\n      .subscribe(res => {\n        console.log('lectureList', res.data);\n        //this.loginUser = res;\n        this.lectureList = res.data;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  getChatHistory(){\n    console.log(this.lectureId);\n\t\tthis.authService.getChatHistory(this.lectureId, this.courseId)\n\t\t\t.subscribe(res => {\n\t\t\t\tconsole.log('getChatHistory', res);\n\t\t\t\tif (res.message) {\n\t\t\t\t\tthis.messages = res.message;\n\t\t\t\t}\n\t\t\t\tconsole.log('getChatHistory', this.messages);\n\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n}\n\n    \n\n    \n        \n    \n      {{course.id}}: {{course.fullname}}\n    \n\n\n    \n      {{lecture.session_name}}\n    \n\n\n -->\n\n\n    \n      \n        \n\n          \n            \n              \n                \n                  \n                 -->\n                {{message.from.name}}\n                \n                  {{message.content}}\n                \n                \n                \n                    {{ message.created_at | date:'h:mm a'}}\n                    \n                \n                \n                   {{message.from.name}} joined to the conversation. \n                \n                \n                   {{message.content.previousUsername}} is now {{message.content.username}} \n                \n              \n            \n            \n          \n        \n    \n\n    \n\n    \n                \n                    ./chat-history.component.scss\n                \n                /* Chat */\n\n.chat {\n    height: calc(100% - 69px);\n  }\n  \n  .chat-container {\n    height: 100%;\n  }\n  \n  /* Conversation */\n  \n  .mat-drawer.mat-drawer-side {\n      padding: 0 5px;\n  }\n  \n  .container ::ng-deep .mat-tab-label {\n      min-width: 100px;\n  }\n  \n  \n  .divider {\n      width: 100%;\n  }\n  \n  .empty-conversation {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100%;\n  }\n  \n  .conversation-header h2, .conversation-header p {\n      align-items: center;\n      display: flex;\n  }\n  \n  \n  .text-center {\n      text-align: center;\n      width: 100%;\n  }\n  \n  .conversation-history.mat-list {\n      height: calc(100% - 210px);\n      //overflow-x: scroll;\n      position: absolute;\n      width: calc(100% - 30px);\n      background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n      z-index: 0;\n  }\n  .conversation .conversation-container {\n    height: 100%;\n    box-shadow: inset 0 10px 10px -10px #000000;\n    overflow-x: hidden;\n    padding: 0 16px;\n    margin-bottom: 5px;\n  }\n  .conversation .conversation-container:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n  .conversation-history.mat-list p {\n      margin: 0;\n  }\n  \n  .empty-conversation h1 {\n      margin: 0;\n  }\n  \n  .conversations .mat-list-item {\n      cursor: pointer;\n  }\n  \n  .create-conversation {\n      position: fixed;\n      bottom: 20px;\n      right: 20px;\n  }\n  \n  .mat-card {\n      height: 100%;\n      padding: 0 24px;\n      overflow: scroll;\n  }\n  \n  \n  .conversation-input {\n      position: absolute;\n      bottom: 0.1em;\n      width: 100%;\n      padding: 5px;\n      //background-color: #fafafa;\n  }\n  \n  section .mat-list .mat-list-avatar{\n      width: 25px;\n      height: 25px;\n  }\n  \n  .mat-list-avatar {\n      margin: 0 5px;\n  }\n  \n  .right {\n      text-align: right;\n  }\n  \n  .full-width {\n      width: 100%;\n  }\n  \n  .full-width .mat-icon {\n      cursor: pointer;\n  }\n  \n  .all-conversations {\n      opacity: 0.7;\n  }\n  \n  /* Messages */\n  \n  .message {\n    color: #000;\n    clear: both;\n    line-height: 18px;\n    font-size: 15px;\n    padding: 8px;\n    position: relative;\n    margin: 8px 0;\n    max-width: 85%;\n    word-wrap: break-word;\n    z-index: -1;\n  }\n  \n  .message:after {\n    position: absolute;\n    content: \"\";\n    width: 0;\n    height: 0;\n    border-style: solid;\n  }\n  \n  \n  .metadata {\n    display: inline-block;\n    float: right;\n    padding: 0 0 0 7px;\n    position: relative;\n    bottom: -4px;\n  }\n  \n  .metadata .time {\n    color: rgba(0, 0, 0, .45);\n    font-size: 11px;\n    display: inline-block;\n  }\n  \n  .metadata .tick {\n    display: inline-block;\n    margin-left: 2px;\n    position: relative;\n    top: 4px;\n    height: 16px;\n    width: 16px;\n  }\n  \n  .metadata .tick svg {\n    position: absolute;\n    transition: .5s ease-in-out;\n  }\n  \n  .metadata .tick svg:first-child {\n    -webkit-backface-visibility: hidden;\n            backface-visibility: hidden;\n    -webkit-transform: perspective(800px) rotateY(180deg);\n            transform: perspective(800px) rotateY(180deg);\n  }\n  \n  .metadata .tick svg:last-child {\n    -webkit-backface-visibility: hidden;\n            backface-visibility: hidden;\n    -webkit-transform: perspective(800px) rotateY(0deg);\n            transform: perspective(800px) rotateY(0deg);\n  }\n  \n  .metadata .tick-animation svg:first-child {\n    -webkit-transform: perspective(800px) rotateY(0);\n            transform: perspective(800px) rotateY(0);\n  }\n  \n  .metadata .tick-animation svg:last-child {\n    -webkit-transform: perspective(800px) rotateY(-179.9deg);\n            transform: perspective(800px) rotateY(-179.9deg);\n  }\n  \n  .message:first-child {\n    margin: 16px 0 8px;\n  }\n  \n  .message.received {\n    background: #fff;\n    border-radius: 0px 5px 5px 5px;\n    float: left;\n  }\n  \n  .message.received .metadata {\n    padding: 0 0 0 16px;\n  }\n  \n  .message.received:after {\n    border-width: 0px 10px 10px 0;\n    border-color: transparent #fff transparent transparent;\n    top: 0;\n    left: -10px;\n  }\n  \n  .message.sent {\n    background: #e1ffc7;\n    border-radius: 5px 0px 5px 5px;\n    float: right;\n  }\n  \n  .message.sent:after {\n    border-width: 0px 0 10px 10px;\n    border-color: transparent transparent transparent #e1ffc7;\n    top: 0;\n    right: -10px;\n  }\n  \n  \n  section .mat-list .mat-list-avatar{\n      width: 25px;\n      height: 25px;\n  }\n  \n  .mat-list-avatar {\n      margin: 0 5px;\n  }\n  \n  .avatar {\n      position: relative;\n  }\n  .base_receive > .avatar:after {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: 0;\n      height: 0;\n      border: 5px solid #FFF;\n      border-left-color: rgba(0, 0, 0, 0);\n      border-bottom-color: rgba(0, 0, 0, 0);\n  }\n  \n  .base_sent {\n    justify-content: flex-end;\n    align-items: flex-end;\n  }\n  .base_sent > .avatar:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 0;\n      height: 0;\n      border: 5px solid white;\n      border-right-color: transparent;\n      border-top-color: transparent;\n      box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close\n  }\n  \n  // Small devices (landscape phones, 576px and up)\n  @media (max-width: 767px) { \n    .conversation-history.mat-list {\n      height: 500px;\n      //overflow-x: scroll;\n      position: relative;\n      width: 100%;\n      background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n      z-index: 0;\n    }\n    .conversation .conversation-container {\n      height: 100%;\n      box-shadow: inset 0 10px 10px -10px #000000;\n      overflow-x: hidden;\n      padding: 0 16px;\n      margin-bottom: 5px;\n    }\n  \n    .conversation-input {\n      position: relative;\n      bottom: 0.1em;\n      width: 100%;\n      background-color: white !important;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{course.id}}: {{course.fullname}}              {{lecture.session_name}}     -->                                                                                                         -->                {{message.from.name}}                                  {{message.content}}                                                                    {{ message.created_at | date:\\'h:mm a\\'}}                                                                       {{message.from.name}} joined to the conversation.                                                    {{message.content.previousUsername}} is now {{message.content.username}}                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/chat.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chatUrl\n                            \n                            \n                                    Private\n                                socket\n                            \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onEvent\n                            \n                            \n                                    Public\n                                onMessage\n                            \n                            \n                                    Public\n                                onQuizStart\n                            \n                            \n                                    Public\n                                onQuizSubmit\n                            \n                            \n                                    Public\n                                send\n                            \n                            \n                                    Public\n                                startQuiz\n                            \n                            \n                                    Public\n                                submitQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/chat.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onEvent(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onQuizStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onQuizStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onQuizSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onQuizSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startQuiz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startQuiz(quiz: QuizChatModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                QuizChatModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitQuiz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitQuiz(quizResult: QuizResultModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/chat.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizResult\n                                    \n                                                QuizResultModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chatUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/chat`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            socket\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/chat.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nimport { Message } from '../models/chat/message';\nimport { QuizChatModel } from '../models/chat/quiz';\nimport { QuizResultModel } from '../models/socket/quiz';\nimport { Event } from '../models/chat/event';\n\nconst apiUrl = `${environment.apiUrl}/chat`;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ChatService {\n\n    private url = environment.apiUrl;\n    private chatUrl = `${environment.apiUrl}/chat`;\n    private socket;\n\n    constructor() {\n\t    this.socket = io(this.url);\n\t}\n\n\tpublic send(message: Message): void {\n        console.log(message);\n        this.socket.emit('message', message);\n    }\n    public startQuiz(quiz: QuizChatModel): void {\n        this.socket.emit('quiz', quiz);\n    }\n\n    public submitQuiz(quizResult: QuizResultModel): void {\n        this.socket.emit('quizResult', quizResult);\n    }\n\n    public onMessage(): Observable {\n        let observable = new Observable(observer => {\n            this.socket.on('message', (data: Message) => observer.next(data));\n            return () => {\n                this.socket.disconnect();\n            };\n        });\n        return observable;\n    }\n\n    public onQuizStart(): Observable {\n        let observable =  new Observable(observer => {\n            this.socket.on('quiz', (data: QuizChatModel) => observer.next(data));\n            return () => {\n                this.socket.disconnect();\n            };\n        });\n        return observable;\n    }\n\n    public onQuizSubmit(): Observable {\n        let observable = new Observable(observer => {\n            this.socket.on('quizResult', (data: QuizResultModel) => observer.next(data));\n            return () => {\n                this.socket.disconnect();\n            };\n        });\n        return observable;\n    }\n\n    public onEvent(event: Event): Observable {\n        return new Observable(observer => {\n            this.socket.on(event, () => observer.next());\n        });\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/offline-session/list/offline-session.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course_id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { OfflineSessionService } from '../../../services/offline-session/offline-session.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { QuizService } from '../../../services/quiz/quiz.service';\n\nexport interface DialogData {\n  course_id: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-offline-session',\n  templateUrl: './offline-session.component.html',\n  styleUrls: ['./offline-session.component.scss']\n})\nexport class OfflineSessionComponent implements OnInit {\n  sessions: any;\n  breakpoint: number;\n\n  course_id: string;\n  name: string;\n\n  constructor(private api: OfflineSessionService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth  {\n        console.log(res);\n        this.sessions = res.offlineSessions;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth  {\n      console.log('The dialog was closed');\n      if ( result !== undefined) {\n\n        this.course_id = result.course_id;\n        this.name = result.name;\n      \n        let data = {\n          course_id: this.course_id,\n          search: this.name\n        }\n        this.api.getOfflineSessionFilter(data)\n        .subscribe((res : any) => {\n          console.log('getOfflineSessionFilter',res);\n          this.sessions = res.offlineSessions;\n        }, err => {\n          console.log(err);\n        });\n        console.log('result', result);\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'offline-session-dialog',\n  templateUrl: 'offline-session-dialog.html',\n})\nexport class OfflineSessionDialog {\n  courseList: any = [];\n  constructor(\n    public dialogRef: MatDialogRef, private quizService: QuizService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getSessionByCourseId(course_id) {\n    console.log('courseID', course_id);\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptor/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_interceptor/error.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptor/error.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService, private router: Router) {}\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401 || err.status === 403 || !this.authService.isLoggedIn()) {\n                // auto logout if 401 response returned from api\n                this.authService.logout();\n                this.router.navigate(['/login']);\n                //location.reload(true);\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FacultyAddComponent.html":{"url":"components/FacultyAddComponent.html","title":"component - FacultyAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FacultyAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/faculty/add/faculty-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faculty-add\n            \n\n            \n                styleUrls\n                ./faculty-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./faculty-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/faculty/add/faculty-add.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/faculty/add/faculty-add.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faculty-add',\n  templateUrl: './faculty-add.component.html',\n  styleUrls: ['./faculty-add.component.scss']\n})\nexport class FacultyAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  faculty-add works!\n\n\n    \n\n    \n                \n                    ./faculty-add.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  faculty-add works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FacultyAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/FakeBackendInterceptor.html":{"url":"interceptors/FakeBackendInterceptor.html","title":"interceptor - FakeBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  FakeBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptor/fake-backend.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_interceptor/fake-backend.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptor/fake-backend.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // array in local storage for registered users\n        let users: any[] = JSON.parse(localStorage.getItem('users')) || [];\n\n        // wrap in delayed observable to simulate server api call\n        return of(null).pipe(mergeMap(() => {\n\n            // authenticate\n            if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n                // find if any user matches login credentials\n                let filteredUsers = users.filter(user => {\n                    return user.username === request.body.username && user.password === request.body.password;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return 200 OK with user details and fake jwt token\n                    let user = filteredUsers[0];\n                    let body = {\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    };\n\n                    return of(new HttpResponse({ status: 200, body: body }));\n                } else {\n                    // else return 400 bad request\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\n                }\n            }\n\n            // get users\n            if (request.url.endsWith('/users') && request.method === 'GET') {\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    return of(new HttpResponse({ status: 200, body: users }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // get user by id\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'GET') {\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    let matchedUsers = users.filter(user => { return user.id === id; });\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\n\n                    return of(new HttpResponse({ status: 200, body: user }));\n                } else {\n                    // return 401 not authorised if token is null or invalid\n                    return throwError({ error: { message: 'Unauthorised' } });\n                }\n            }\n\n            // register user\n            if (request.url.endsWith('/users/register') && request.method === 'POST') {\n                // get new user object from post body\n                let newUser = request.body;\n\n                // validation\n                let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\n                if (duplicateUser) {\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\n                }\n\n                // save new user\n                newUser.id = users.length + 1;\n                users.push(newUser);\n                localStorage.setItem('users', JSON.stringify(users));\n\n                // respond 200 OK\n                return of(new HttpResponse({ status: 200 }));\n            }\n\n            // delete user\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    // find user by id in users array\n                    let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    for (let i = 0; i \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/helper/helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extend\n                            \n                            \n                                    Static\n                                shuffle\n                            \n                            \n                                    Static\n                                toBool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extend\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extend(out)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/helper/helper.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    out\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shuffle(array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/helper/helper.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toBool(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/helper/helper.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HelperService {\n  static toBool(val) {\n    if (val === undefined || val === null || val === '' || val === 'false' || val === 'False') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  static shuffle(array) {\n    let currentIndex = array.length, temp, randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temp = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temp;\n    }\n    return array;\n  }\n  static extend(out) {\n    out = out || {};\n\n    for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptor/jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptor/jwt.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        // add authorization header with jwt token if available\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: { \n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LiveLecture.html":{"url":"interfaces/LiveLecture.html","title":"interface - LiveLecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LiveLecture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/quiz/quiz.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course_id\n                                \n                                \n                                        lecture_id\n                                \n                                \n                                        lecture_url\n                                \n                                \n                                        presentation\n                                \n                                \n                                        rating_status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lecture_id\n                                    \n                                \n                                \n                                    \n                                        lecture_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lecture_url\n                                    \n                                \n                                \n                                    \n                                        lecture_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        presentation\n                                    \n                                \n                                \n                                    \n                                        presentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating_status\n                                    \n                                \n                                \n                                    \n                                        rating_status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { RatingComponent } from '../../components/rating/rating.component';\n\nimport { QuizService } from '../../services/quiz/quiz.service';\nimport { LogService } from '../../services/log/log.service';\nimport { HelperService } from '../../services/helper/helper.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Option, Question, Quiz, QuizConfig } from '../../models/index';\nimport { User } from '../../models/chat/user';\nimport { Event } from '../../models/chat/event';\nimport { QuizChatModel } from '../../models/chat/quiz';\nimport { ChatService } from '../../services/chat.service';\nimport * as moment from \"moment\";\n\ninterface LiveLecture {\n  lecture_id: number;\n  course_id: number;\n  presentation: string;\n  rating_status: number;\n  lecture_url: string;\n}\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.scss'],\n  providers: [QuizService]\n})\nexport class QuizComponent implements OnInit {\n  quizes: any[];\n  sessionRating: number;\n  rating: number;\n  user: User;\n  live_lecture: any;\n  live_lecture_url: string;\n  embedUrl = 'https://www.youtube.com/embed/'\n  videoUrl: string;\n  presentation: string;\n  numberOfActiveSockets: number;\n\n  //quizId: any;\n  quiz: Quiz = new Quiz(null);\n  quizChat: QuizChatModel;\n  mode = 'quiz';\n  quizName: string;\n  start: boolean = false;\n  quizBy: User;\n  ioConnection: any;\n  config: QuizConfig = {\n    'allowBack': true,\n    'allowReview': true,\n    'autoMove': false,  // if true, it will move to next question automatically when answered.\n    'duration': 60,  // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n    'autoSubmit': false,\n    'pageSize': 1,\n    'requiredAll': false,  // indicates if you must answer all the questions before submitting.\n    'richText': false,\n    'shuffleQuestions': false,\n    'shuffleOptions': false,\n    'showClock': false,\n    'showPager': true,\n    'theme': 'none'\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1\n  };\n  timer: any = null;\n  startTime: Date;\n  endTime: Date;\n  ellapsedTime = '00:00';\n  duration = '';\n  disabled = false;\n  handRaiseWaiting = false;\n  goToMeeting = false;\n\n  constructor(private quizService: QuizService, private router: Router, private authService: AuthService, private log: LogService, private chatService: ChatService ) { \n    //this.rating = 2;\n    this.authService.getLoginUser()\n      .subscribe(res => {\n        //console.log('getLoginUser', res);\n        //this.loginUser = res;\n        this.user = {\n          //id: randomId,\n          userId: res.user.id,\n          role: res.user.role,\n          name: res.user.name,\n          email:res.user.email,\n          courses:res.courses,\n          lastActive:res.user.last_active\n        }\n        //console.log(this.user);\n        this.quizBy = {\n          //id: randomId,\n          userId: 1,\n          name: res.user.name,\n          email:res.user.email\n        }\n        // Playe Quiz if Quiz Already started and you have time to play\n        this.getLastPlayedQuiz();\n        \n        \n      }, err => {\n        console.log(err);\n      });\n  \n      this.authService.getLiveLectureUrl()\n      .subscribe(res => {\n        //console.log('getLiveLacture', res.live_url);\n        this.live_lecture = res.live_url;\n        this.live_lecture_url = res.live_url.lecture_url;\n        this.videoUrl =  this.embedUrl + this.live_lecture_url + '?rel=0';\n\n        this.getVideoLectureLogById();\n        \n        if (this.live_lecture_url !== undefined) {\n          this.submitAttendance();\n        }\n\n      }, err => {\n        console.log(err);\n      });\n      \n  }\n\n  ngOnInit() {\n\n    if (this.authService.isLoggedIn()) {\n      //this.submitAttendance();\n      //console.log('this.user',this.user);\n      //Start Socket Connection\n      this.initIoConnection();\n      this.chatService.onEvent(Event.CONNECT)\n        .subscribe((numberOfActiveSockets) => {\n          //this.numberOfActiveSockets = numberOfActiveSockets;\n          console.log('connected', numberOfActiveSockets);\n        });\n        \n      this.chatService.onEvent(Event.DISCONNECT)\n        .subscribe((data) => {\n          console.log('disconnected', data);\n        });\n    }\n  }\n  getLastPlayedQuiz() {\n    this.quizService.getLastPlayedQuiz()\n    .subscribe(res => {\n      let dt = new Date(res.last_played);\n      let ut = new Date(this.user.lastActive);\n      let n = new Date();\n\n      console.log('Last quiz Last Played', `${dt.getMinutes()}:${dt.getSeconds()}`);\n      console.log('Last quiz User Active', `${ut.getMinutes()}:${ut.getSeconds()}`);\n      console.log('Last Client Time', `${n.getMinutes()}:${n.getSeconds()}`);\n\n      let addDuration = moment(res.last_played).add((res.duration + 5), 'seconds');\n      //console.log('addDuration', addDuration);\n      //console.log('this.start moment', moment().isBefore(addDuration));\n      let isBetween = moment(this.user.lastActive).isBetween(res.last_played, addDuration);\n      console.log('isBetween', isBetween);\n\n      if (this.user.courses.includes(res.courseId) && isBetween) {\n        this.start = true;\n        this.config.duration = res.duration;\n        if (this.start) {\n          this.loadQuiz(res._id);\n        }\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n  private initIoConnection(): void {\n      this.ioConnection = this.chatService.onQuizStart()\n        .subscribe((quiz: QuizChatModel) => {\n          //console.log('quiz',quiz);\n          console.log('this.user',this.user);\n          //console.log(this.user.courses.includes(quiz.courseId));\n\n          if (quiz.duration !== undefined) {\n            this.config.duration = quiz.duration\n          }\n          \n          this.quizBy = {\n            //id: randomId,\n            userId: quiz.from.userId,\n            name: quiz.from.name,\n            email:quiz.from.email\n          }\n          \n          //this.quizId = quiz.id;\n          if (this.user.courses.includes(quiz.courseId) || this.user.userId == this.quizBy.userId) {\n            this.start = quiz.start;\n            if (this.start) {\n              this.loadQuiz(quiz.id);\n            }\n          }\n          \n        });\n\n  }\n  submitAttendance() {\n    let data = {\n      course_id: this.live_lecture.course_id\n    }\n    this.authService.submitAttendance(data)\n      .subscribe(res => {\n        console.log('submitAttendance', res);\n      }, err => {\n        console.log(err);\n      });\n  }\n  getVideoLectureLogById() {\n    //console.log('this.live_lecture', this.live_lecture)\n    let data = {\n      course_id:  this.live_lecture ? this.live_lecture.course_id : '',\n      lecture_id: this.live_lecture ? this.live_lecture.lecture_id : ''\n    };\n    \n    this.authService.getVideoLectureLogById(data)\n      .subscribe(res => {\n        //console.log('getVideoLectureLogById', res.videoLectureLog.star);\n        this.sessionRating = Number(res.videoLectureLog.star);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n  rateThisSession(){\n    console.log('live_lecture', this.live_lecture);\n    let data = { \n      userId: this.user.userId,\n      course_id:  this.live_lecture.course_id,\n      lecture_id: this.live_lecture.lecture_id, \n      sessionRating: this.sessionRating \n    };\n    \n    this.authService.rateThisSession(data)\n      .subscribe(res => {\n        console.log('rateThiSsession', res);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  handRaise(){\n    console.log('this.user', this.user);\n    let data = { \n      userId: this.user.userId,\n      name:  this.user.name\n    };\n    console.log('this.live_lecture hand raise', this.live_lecture);\n    this.authService.handRaise(data)\n      .subscribe(res => {\n        console.log('handRaise', res);\n        \n        if (res.success) {\n          this.handRaiseWaiting = true;\n          if (this.handRaiseWaiting) {\n            setTimeout(()=> {\n              //this.mode = 'result';\n              this.handRaiseWaiting = false;\n              //this.router.navigate([\"/quiz\"]);\n            }, 60 * 1000);\n          }\n        }\n        if (this.handRaiseWaiting) {\n          var refreshId = setInterval(() => { \n            this.authService.getLoginInfoFromEdusatLms()\n              .subscribe(res => {\n                console.log('goMeetStatus', res.hand_raise.goMeetStatus);\n                if (res.hand_raise.goMeetStatus == 1) {\n                  this.goToMeeting = true;\n                  this.handRaiseWaiting = false;\n                  clearInterval(refreshId);\n                }\n                if (res.hand_raise.handraiseStatus == 0 || res.hand_raise.handraiseStatus == undefined) {\n                  this.handRaiseWaiting = false;\n                  clearInterval(refreshId);\n                }\n              }, (err) => {\n                console.log(err);\n              });\n\n          }, 1000);\n        }\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  loadQuiz(quizId: string) {\n    //this.playAudio();\n    this.quizService.getQuiz(quizId).subscribe(res => {\n      //console.log(res);\n      //console.log(this.startTime);\n      this.disabled = false;\n      this.quiz = new Quiz(res);\n      console.log('this.quiz',this.quiz);\n      this.pager.count = this.quiz.questions.length;\n      this.startTime = new Date();\n      // this.duration = this.quiz.duration;\n      this.ellapsedTime = '00:00';\n      this.timer = setInterval(() => { this.tick(); }, 1000);\n      this.duration = this.parseTime(this.config.duration);\n      //console.log(this.startTime);\n    });\n    this.mode = 'quiz';\n  }\n  playAudio(){\n    let audio = new Audio();\n    // audio.src = \"../../../assets/audio/beep-01a.wav\";\n    audio.load();\n    audio.play();\n  }\n  tick() {\n    const now = new Date();\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\n    //console.log('diff', diff);\n    if (diff >= this.config.duration) {\n      //console.log('in diff');\n      clearTimeout(this.timer);\n      if (this.config.autoSubmit) {\n        this.onSubmit();\n      } else {\n        this.disabled = true;\n        setTimeout(()=> {\n          //this.mode = 'result';\n          this.start = false;\n          //this.router.navigate([\"/quiz\"]);\n        }, 30000);\n      }\n    }\n    this.ellapsedTime = this.parseTime(diff);\n  }\n\n  parseTime(totalSeconds: number) {\n    let mins: string | number = Math.floor(totalSeconds / 60);\n    let secs: string | number = Math.round(totalSeconds % 60);\n    mins = (mins  { if (x.id !== option.id) x.selected = false; });\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index  x.selected) ? 'Answered' : 'Not Answered';\n  };\n\n  isCorrect(question: Question) {\n    return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\n  };\n\n  onSubmit() {\n\n    console.log('isloggedin', this.user.lastActive);\n    // const now = new Date();\n    // const diff = (now.getTime() - this.user.lastActive.getTime()) / 1000;\n    // console.log('Diff Now', now);\n    // console.log('Diff in last login', diff);\n\n    clearTimeout(this.timer);\n    if (this.authService.isLoggedIn()) {\n      let answers = [];\n      //console.log(this.quiz)\n      this.quiz.questions.forEach(x => answers.push({ 'quizId': this.quiz.id, 'questionId': x.id, 'questionName': x.name, 'answered': x.options.every(y => y.selected === y.isAnswer) ? 'correct' : 'wrong', 'attempt': x.options.find(y => y.selected) ? true : false, 'selected': x.options.find((y) => { return y.selected } ) }));\n      \n      // Post your data to the server here. answers contains the questionId and the users' answer.\n      const correctAnswerCount = answers.filter(i => i['answered'] === 'correct').length;\n      //console.log('answers', answers);\n      //console.log('correctAnswerCount', correctAnswerCount);\n      let data = {\n        id: this.quiz.id,\n        courseId: this.quiz.courseId,\n        from: this.user,\n        correctAnswerCount: correctAnswerCount,\n        questions: this.quiz.questions, \n        answers: answers,\n        quiz_by: this.quizBy.userId,\n        created_at: new Date(),\n      };\n\n      if (this.user.userId != this.quizBy.userId) {\n        \n        this.chatService.submitQuiz(data);\n        // post in log table\n        this.log.postQuizLog(data)\n          .subscribe(res => {\n            console.log(res);\n          }, (err) => {\n            console.log(err);\n          });\n\n        // post in log table in QuizAPi Php\n        this.log.postQuizApiPhpLog(data)\n        .subscribe(res => {\n          console.log(res);\n        }, (err) => {\n          console.log(err);\n        });\n      }\n      \n      this.mode = 'result';\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/log/log.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuizLog\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getQuizLog\n                            \n                            \n                                getQuizLogs\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postQuizApiPhpLog\n                            \n                            \n                                postQuizLog\n                            \n                            \n                                updateQuizLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/log/log.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuizLog\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuizLog(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizLog\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizLog(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizLogs\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postQuizApiPhpLog\n                        \n                        \n                    \n                \n            \n            \n                \npostQuizApiPhpLog(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postQuizLog\n                        \n                        \n                    \n                \n            \n            \n                \npostQuizLog(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQuizLog\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQuizLog(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/log/log.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/log`;\nconst phpApiUrl = `${environment.phpApiUrl}/log`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    // if (error instanceof HttpErrorResponse) {\n    //   console.log('hii');\n    //   if (error.status === 401) {\n    //     console.log('hi');\n    //     this.router.navigate(['/login']);\n    //   }\n    // }\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n  \n  getQuizLogs(): Observable {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  /* Post Quiz Log */\n  postQuizLog(data): Observable {\n    //console.log(data);\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /* Post Quiz Log in php url */\n  postQuizApiPhpLog(data): Observable {\n    //console.log(data);\n    return this.http.post(phpApiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getQuizLog(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  updateQuizLog(id: string, data): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteQuizLog(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                error\n                            \n                            \n                                hide\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                            \n                                success\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, authenticationService: AuthenticationService, api: AuthService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alert\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { first } from 'rxjs/operators';\nimport * as moment from \"moment\";\nimport { AuthenticationService } from '../../services/auth/authentication.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  \n  alert = true;\n  hide = true;\n  success: boolean;\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  username:string='';\n  password:string='';\n  message:string='';\n  error = '';\n\n  constructor(\n    private router: Router, \n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private api: AuthService, \n    private formBuilder: FormBuilder) { \n      // redirect to home if already logged in\n      if (this.authenticationService.currentUserValue) { \n        this.router.navigate(['/']);\n      }\n    }\n\n  ngOnInit() {\n    \n    this.loginForm = this.formBuilder.group({\n      'username' : [null, Validators.required],\n      'password' : [null, Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onFormSubmit(form:NgForm) {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          //this.router.navigate([this.returnUrl]);\n          console.log(data)\n          this.message = data.message;\n          this.alert = data.success;\n          if (data.success) {\n            this.router.navigate(['/quiz']);\n          }\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n\n  }\n\n}\n\n    \n\n    \n        \n\n  \t\n\t\t\n\t\t\tIndian Institute of Remote Sensing\n\t\t\n\t\t\n\t  \n\t\t\n\t\t\n\t\t\tLogin to your account\n\t\t\n\t\t\n\t\t\t{{message}}\n\t\t\n\n\t  \t\n      \t\n\t\t  \n\t\t    \n\t\t    \n\t\t      Please enter Username or Registraion Number\n\t\t    \n\t\t  \n\n\t\t  \n\t\t    \n\t\t    {{hide ? 'visibility' : 'visibility_off'}}\n\t\t    \n\t\t      Please enter password\n\t\t    \n\t\t  \n\t\t  \n\t\t\t\n\t\t\t\tsave \n\t\t\t\t  -->\n\t\t\t\tLogin\n\t\t\t\n\t\t\tForgot Password?\n\t\t  \n\t\t  \n\t\t\n\t  \n\t  \n\t    Register\n\t  \n\t\n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.login-full-width {\n  width: 100%;\n}\n\n.example-card {\n  max-width: 400px;\n}\n\nimg.center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.example-header-image {\n  background-image: url('https://blog.wonderslate.com/wp-content/uploads/2018/04/isro.jpg');\n  background-size: cover;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t\t\tIndian Institute of Remote Sensing\t\t\t\t\t  \t\t\t\t\t\t\tLogin to your account\t\t\t\t\t\t\t{{message}}\t\t\t  \t      \t\t\t  \t\t    \t\t    \t\t      Please enter Username or Registraion Number\t\t    \t\t  \t\t  \t\t    \t\t    {{hide ? \\'visibility\\' : \\'visibility_off\\'}}\t\t    \t\t      Please enter password\t\t    \t\t  \t\t  \t\t\t\t\t\t\tsave \t\t\t\t  -->\t\t\t\tLogin\t\t\t\t\t\tForgot Password?\t\t  \t\t  \t\t\t  \t  \t    Register\t  \t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialDashboardComponent.html":{"url":"components/MaterialDashboardComponent.html","title":"component - MaterialDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layout/material-dashboard/material-dashboard.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-dashboard\n            \n\n            \n                styleUrls\n                ./material-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layout/material-dashboard/material-dashboard.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cards\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layout/material-dashboard/material-dashboard.component.ts:12\n                            \n                        \n\n                \n                    \n                        Based on the screen size, switch from standard to one column per row \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-material-dashboard',\n  templateUrl: './material-dashboard.component.html',\n  styleUrls: ['./material-dashboard.component.scss'],\n})\nexport class MaterialDashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n\n    \n\n    \n        \n  Dashboard\n  \n    \n      \n        \n          \n            {{card.title}}\n            \n              more_vert\n            \n            \n              Expand\n              Remove\n            \n          \n        \n        \n          Card Content Here\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./material-dashboard.component.scss\n                \n                .grid-container {\n  // margin: 20px;\n}\n\n.dashboard-card {\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  right: 15px;\n  bottom: 15px;\n}\n\n.more-button {\n  position: absolute;\n  top: 5px;\n  right: 10px;\n}\n\n.dashboard-card-content {\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard                                          {{card.title}}                          more_vert                                      Expand              Remove                                                Card Content Here                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker'; \n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatBadgeModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTreeModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule\n  ],\n  exports: [\n    MatBadgeModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTreeModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSortModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatDialogModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MaterialNavComponent.html":{"url":"components/MaterialNavComponent.html","title":"component - MaterialNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MaterialNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layout/material-nav/material-nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-material-nav\n            \n\n            \n                styleUrls\n                ./material-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./material-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                isDarkTheme\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layout/material-nav/material-nav.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeTheme\n                        \n                        \n                    \n                \n            \n            \n                \nchangeTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layout/material-nav/material-nav.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layout/material-nav/material-nav.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layout/material-nav/material-nav.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layout/material-nav/material-nav.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layout/material-nav/material-nav.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-material-nav',\n  templateUrl: './material-nav.component.html',\n  styleUrls: ['./material-nav.component.scss']\n})\nexport class MaterialNavComponent {\n// Initialize isDarkTheme to false\n  public isDarkTheme: boolean = false;\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService) {}\n\tchangeTheme(): void {\n\t\tthis.isDarkTheme = !this.isDarkTheme;\n\t\tconst body = document.getElementsByTagName('body')[0];\n\t\tif (this.isDarkTheme) {\n\t\t\t//this.isDarkTheme = false;\n\t\t\tbody.classList.add('iirs-dark-theme');\n\t\t} else {\n\t\t\t//this.isDarkTheme = true;\n\t\t\tbody.classList.remove('iirs-dark-theme');\n\t\t}\n\t}\n\tlogout() {\n\t\tif (this.authService.isLoggedIn()) {\n\n\t\t\tthis.authService.setUserLastActive(0)\n\t\t\t.subscribe(res => {\n\t\t\t\tconsole.log('AuthGuard',res);\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t\tthis.authService.logout();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n      \n        menu\n       -->\n    \n    \n        fingerprint Login\n    \n    \n    \n      query_builder Play\n      video_library Offline Session\n      account_circle Study Material\n      import_contacts Quiz\n      question_answer Question -->\n      question_answer Question \n      supervised_user_circle Faculty\n      school Student -->\n      \n      timer Online Users\n      book Book -->\n      assessment Reports \n      chat Chat History \n\n    \n  \n  \n    \n      \n        menu\n      \n      \n\n      Student Interaction -->\n        \n        \n        \n            \n        \n        \n          more_vert\n        \n        \n          \n            fingerprint\n            Login\n          \n          \n            account_circle\n            Profile\n          \n          \n            notifications_off\n            Disable alerts\n          \n          \n            brightness_2\n            Change Theme\n          \n          \n            fingerprint\n            Logout\n          \n        \n        \n          menu\n         -->\n      \n    \n    \n    \n      \n    \n    \n      \n        \n          \n            thumb_up\n            First\n          \n          Content 1\n        \n\n        \n          \n            thumb_up\n            Second\n          \n          Content 2\n        \n\n        \n          \n            thumb_up\n            Third\n          \n\n          Content 3\n        \n      \n     -->\n  \n  \n    \n      \n      \n      \n        menu\n       -->\n    \n    \n    \n      timer Play\n      timer Quiz\n      question_answer Question -->\n      supervised_user_circle Faculty\n      school Student -->\n      fingerprint Login\n      book Book -->\n      chat Chat1 -->\n\n    \n  \n\n\n    \n\n    \n                \n                    ./material-nav.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.app-name {\n  padding-top: .1rem;\n  font-family: Roboto,\"Helvetica Neue\",sans-serif;\n  line-height: normal;\n  .color1 {\n    color: orange;\n  }\n  .color2 {\n    color: #008CDB;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n}\n\n.active-list-item {\n  color: #3F51B5 !important; /* Note: You could also use a custom theme */\n  background-color: #b51a1a00 !important;\n}\n\n\n.sidenav {\n  width: 200px;\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\n}\n.sidenav-right {\n  width: 300px;\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\n}\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n}\n\n.content {\n  min-height: calc(100vh - 136px);\n  padding: 15px;\n}\n.footer {\n  //height: 50px;\n  position: sticky;\n  bottom: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                menu       -->                fingerprint Login                  query_builder Play      video_library Offline Session      account_circle Study Material      import_contacts Quiz      question_answer Question -->      question_answer Question       supervised_user_circle Faculty      school Student -->            timer Online Users      book Book -->      assessment Reports       chat Chat History                           menu                  Student Interaction -->                                                              more_vert                                      fingerprint            Login                                account_circle            Profile                                notifications_off            Disable alerts                                brightness_2            Change Theme                                fingerprint            Logout                                    menu         -->                                                                    thumb_up            First                    Content 1                                      thumb_up            Second                    Content 2                                      thumb_up            Third                    Content 3                   -->                                  menu       -->                  timer Play      timer Quiz      question_answer Question -->      supervised_user_circle Faculty      school Student -->      fingerprint Login      book Book -->      chat Chat1 -->      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MaterialNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chat/message.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        course_id\n                                \n                                \n                                            Optional\n                                        created_at\n                                \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        lecture_id\n                                \n                                \n                                            Optional\n                                        parent_id\n                                \n                                \n                                            Optional\n                                        parent_message\n                                \n                                \n                                            Optional\n                                        quizId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Action\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course_id\n                                    \n                                \n                                \n                                    \n                                        course_id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lecture_id\n                                    \n                                \n                                \n                                    \n                                        lecture_id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent_id\n                                    \n                                \n                                \n                                    \n                                        parent_id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent_message\n                                    \n                                \n                                \n                                    \n                                        parent_message:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quizId\n                                    \n                                \n                                \n                                    \n                                        quizId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {User} from './user';\nimport {Action} from './action';\n\nexport interface Message {\n    from?: User;\n    content?: any;\n    parent_id?: any;\n    parent_message?: any;\n    quizId?: string;\n    lecture_id?: any;\n    course_id?: any;\n    action?: Action;\n    created_at?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OfflineSessionComponent.html":{"url":"components/OfflineSessionComponent.html","title":"component - OfflineSessionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OfflineSessionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offline-session/list/offline-session.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-offline-session\n            \n\n            \n                styleUrls\n                ./offline-session.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./offline-session.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breakpoint\n                            \n                            \n                                course_id\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                name\n                            \n                            \n                                sessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                            \n                                openFilterDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: OfflineSessionService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/offline-session/list/offline-session.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        OfflineSessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/list/offline-session.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResize\n                        \n                        \n                    \n                \n            \n            \n                \nonResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/list/offline-session.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openFilterDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenFilterDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/list/offline-session.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { OfflineSessionService } from '../../../services/offline-session/offline-session.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { QuizService } from '../../../services/quiz/quiz.service';\n\nexport interface DialogData {\n  course_id: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-offline-session',\n  templateUrl: './offline-session.component.html',\n  styleUrls: ['./offline-session.component.scss']\n})\nexport class OfflineSessionComponent implements OnInit {\n  sessions: any;\n  breakpoint: number;\n\n  course_id: string;\n  name: string;\n\n  constructor(private api: OfflineSessionService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth  {\n        console.log(res);\n        this.sessions = res.offlineSessions;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth  {\n      console.log('The dialog was closed');\n      if ( result !== undefined) {\n\n        this.course_id = result.course_id;\n        this.name = result.name;\n      \n        let data = {\n          course_id: this.course_id,\n          search: this.name\n        }\n        this.api.getOfflineSessionFilter(data)\n        .subscribe((res : any) => {\n          console.log('getOfflineSessionFilter',res);\n          this.sessions = res.offlineSessions;\n        }, err => {\n          console.log(err);\n        });\n        console.log('result', result);\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'offline-session-dialog',\n  templateUrl: 'offline-session-dialog.html',\n})\nexport class OfflineSessionDialog {\n  courseList: any = [];\n  constructor(\n    public dialogRef: MatDialogRef, private quizService: QuizService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getSessionByCourseId(course_id) {\n    console.log('courseID', course_id);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            \n              \n            \n            \n              {{session.session_name}}\n              {{session.presentation}}\n              {{session.date | date}}\n            \n        \n       \n    \n  \n  \n    \n      filter_list\n    \n  \n    \n\n    \n                \n                    ./offline-session.component.scss\n                \n                .example-card {\n    max-width: 400px;\n    height: 100%;\n  }\n  \n  .example-header-image {\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n    background-size: cover;\n  }\n  \n  .fab-container {\n    position: fixed;\n    bottom: 15px;\n    right: 15px;\n    z-index: 100;\n    display: flex;\n    flex-direction: column-reverse;\n    align-items: center;\n  \n    > div {\n      display: flex;\n      flex-direction: column-reverse;\n      align-items: center;\n      margin-bottom: 5px;\n  \n      button {\n        margin-bottom: 17px;\n      }\n    }\n  }\n  \n  .fab-toggler {\n    float: right;\n    z-index: 100;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    {{session.session_name}}              {{session.presentation}}              {{session.date | date}}                                             filter_list      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OfflineSessionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OfflineSessionDetailComponent.html":{"url":"components/OfflineSessionDetailComponent.html","title":"component - OfflineSessionDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OfflineSessionDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offline-session/detail/offline-session-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-offline-session-detail\n            \n\n            \n                styleUrls\n                ./offline-session-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./offline-session-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                courseId\n                            \n                            \n                                courseList\n                            \n                            \n                                embedUrl\n                            \n                            \n                                lectureId\n                            \n                            \n                                lectureList\n                            \n                            \n                                loginUser\n                            \n                            \n                                messages\n                            \n                            \n                                player\n                            \n                            \n                                session\n                            \n                            \n                                sessionRating\n                            \n                            \n                                user\n                            \n                            \n                                videoUrl\n                            \n                            \n                                youtubeId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMessage\n                            \n                            \n                                getChatHistory\n                            \n                            \n                                getOfflineSessionDetail\n                            \n                            \n                                getVideo\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPlayerReady\n                            \n                            \n                                onPlayerStateChange\n                            \n                            \n                                rateThisSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, api: OfflineSessionService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        OfflineSessionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMessage(lecture_id, course_id, id, index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lecture_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChatHistory\n                        \n                        \n                    \n                \n            \n            \n                \ngetChatHistory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOfflineSessionDetail\n                        \n                        \n                    \n                \n            \n            \n                \ngetOfflineSessionDetail(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getVideo\n                        \n                        \n                    \n                \n            \n            \n                \ngetVideo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlayerReady\n                        \n                        \n                    \n                \n            \n            \n                \nonPlayerReady(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlayerStateChange\n                        \n                        \n                    \n                \n            \n            \n                \nonPlayerStateChange(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rateThisSession\n                        \n                        \n                    \n                \n            \n            \n                \nrateThisSession()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Action\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            embedUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://www.youtube.com/embed/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lectureId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lectureList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            player\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionRating\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            videoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            youtubeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/detail/offline-session-detail.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OfflineSessionService } from '../../../services/offline-session/offline-session.service';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { Action } from '../../../models/chat/action';\nimport { User } from '../../../models/chat/user';\n\n@Component({\n  selector: 'app-offline-session-detail',\n  templateUrl: './offline-session-detail.component.html',\n  styleUrls: ['./offline-session-detail.component.scss']\n})\nexport class OfflineSessionDetailComponent implements OnInit {\n\n  action = Action;\n  loginUser: any;\n  user: User;\n  courseId: number;\n  courseList: any = [];\n  lectureId: number;\n  lectureList: any = [];\n  messages: any = [];\n\n  session: any;\n  youtubeId: string;\n  embedUrl = 'https://www.youtube.com/embed/'\n  videoUrl: string;\n\n  player;\n  sessionRating: number;\n\n  constructor(private route: ActivatedRoute, private api: OfflineSessionService, private router: Router, private authService: AuthService) {\n    this.authService.getLoginUser()\n\t      .subscribe(res => {\n\t        console.log(res);\n\t        this.loginUser = res;\n\t        this.user = {\n\t\t      userId: res.user.id,\n\t\t      name: res.user.name\n\t\t    };\n\t      }, err => {\n\t        console.log(err);\n\t\t  });\n   }\n\n  ngAfterViewInit() {\n    const doc = (window).document;\n    const playerApiScript = doc.createElement('script');\n    playerApiScript.type = 'text/javascript';\n    playerApiScript.src = 'https://www.youtube.com/iframe_api';\n    doc.body.appendChild(playerApiScript);\n    // var firstScriptTag = document.getElementsByTagName('script')[0];\n    // firstScriptTag.parentNode.insertBefore(playerApiScript, firstScriptTag);\n  }\n\n  ngOnInit() {\n    this.getOfflineSessionDetail(this.route.snapshot.params['id']);\n    //console.log('session', this.session);\n    (window).onYouTubeIframeAPIReady = () => {\n      this.player = new (window).YT.Player('player', {\n        height: '100%',\n        width: '100%',\n        // videoId: this.getVideo(),\n        // events: {\n        //   'onReady': this.onPlayerReady,\n        //   'onStateChange': this.onPlayerStateChange\n        // },\n        events: {\n            'onReady': (event) => { this.onPlayerReady(event); },\n            'onStateChange': (event) => { this.onPlayerStateChange(event); }\n        },\n        playerVars: {\n          autoplay: 0,\n          controls: 1,\n          modestbranding: 1,\n          // playlist: 'UG3sfZKtCQI,ALZHF5UqnU4,x9ZkC3OgI78',\n          rel: 0,\n          showInfo: 0\n        }\n      });\n    };\n  }\n\n  getOfflineSessionDetail(id) {\n    this.api.getOfflineSession(id)\n      .subscribe(data => {\n        console.log('getOfflineSession', data);\n        this.session = data.offlineSessions;\n        this.youtubeId = data.offlineSessions.off_lecture_url;\n        this.videoUrl =  this.embedUrl + this.youtubeId + '?enablejsapi=1&rel=0';\n\n        this.lectureId = data.offlineSessions.lecture_id;\n        this.courseId = data.offlineSessions.course_id;\n        this.getChatHistory();\n\n        let videoLodData = {\n          lecture_id:  this.lectureId ? this.lectureId : '',\n          course_id: this.courseId ? this.courseId : ''\n        };\n        console.log('videoLodData', videoLodData)\n        \n        this.authService.getVideoLectureLogById(videoLodData)\n          .subscribe(res => {\n            console.log('getVideoLectureLogById', res);\n            this.sessionRating = Number(res.videoLectureLog.star);\n          }, (err) => {\n            console.log(err);\n          });\n        //console.log(this.session);\n        //this.url = \"https://www.youtube.com/embed/\" + data.offlineSessions.off_lecture_url;\n      });\n  }\n  getChatHistory(){\n    console.log(this.lectureId);\n\t\tthis.authService.getChatHistory(this.lectureId, this.courseId)\n\t\t\t.subscribe(res => {\n\t\t\t\tconsole.log('getChatHistory', res);\n\t\t\t\tif (res.message) {\n\t\t\t\t\tthis.messages = res.message;\n\t\t\t\t}\n\t\t\t\tconsole.log('getChatHistory', this.messages);\n\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n  }\n  deleteMessage(lecture_id, course_id, id, index) {\n\t\tthis.authService.deleteMessage(lecture_id, course_id, id)\n\t\t  .subscribe(res => {\n\t\t\t  console.log(res)\n\t\t\t  if (res) {\n\t\t\t\tthis.messages.splice(index, 1);\n\t\t\t  }\n\t\t\t  //this.router.navigate(['/quizs']);\n\t\t\t}, (err) => {\n\t\t\t  console.log(err);\n\t\t\t}\n\t\t  );\n\t}\n  rateThisSession(){\n    console.log('lectureId', this.lectureId);\n    let data = { \n      userId: this.user.userId,\n      course_id:  this.courseId,\n      lecture_id: this.lectureId, \n      sessionRating: this.sessionRating \n    };\n    \n    this.authService.rateThisSession(data)\n      .subscribe(res => {\n        console.log('rateThiSsession', res);\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  // The API calls this function when the player's state changes.\n  onPlayerStateChange(event) {\n    console.log('onPlayerStateChange');\n    console.log(event.data);\n  }\n\n  // The API will call this function when the video player is ready\n  onPlayerReady(event) {\n    console.log(event);\n\n    //const videoId = this.getVideo();\n    const videoId = this.youtubeId;\n    event.target.cueVideoById({\n      'videoId': videoId\n    });\n    event.target.playVideo();\n  }\n\n  getVideo() {\n    return 'EJidxofuPc4';\n  }\n\n}\n\n    \n\n    \n        \n  \n      \n          \n              \n              \n                  Back\n                {{session.session_name}}\n              \n              \n                \n                  \n                \n                Presenter: {{session.presentation}}\n                \n                \n                  fiber_manual_recordLive Now -->\n                  \n                \n                Please Rate this session:\n              \n              \n          \n      \n      \n          \n              Question Asked\n              \n                \n                  \n                    \n                      \n              \n                        \n                          \n                            \n                              \n                                \n                               -->\n                              \n                                \n                                  expand_more\n                                \n                                \n                                  \n                                    reply\n                                    Reply\n                                   -->\n                                  \n                                    edit\n                                    Edit\n                                   -->\n                                  \n                                    delete_forever\n                                    Delete\n                                  \n                                                    \n                              \n                              {{message.from.name}}\n                              \n                                {{message.content}}\n                              \n                              \n                              \n                                  {{ message.created_at | date:'h:mm a'}}\n                                  \n                              \n                              \n                                 {{message.from.name}} joined to the conversation. \n                              \n                              \n                                 {{message.content.previousUsername}} is now {{message.content.username}} \n                              \n                            \n                          \n                          \n                        \n                      \n                  \n                \n              \n          \n      \n  \n\n\n  \n    \n\n    \n                \n                    ./offline-session-detail.component.scss\n                \n                \n  \n  .example-card {\n    max-width: 100%;\n  }\n  \n  .button-row {\n    margin: 10px 0;\n  }\n  \n  dt {\n    float: left;\n    clear: left;\n    width: 100px;\n    text-align: right;\n    font-weight: bold;\n  }\n    dt::after {\n    content: \":\";\n  }\n  dd {\n    margin: 0 0 0 110px;\n    padding: 0 0 0.5em 0;\n  }\n\n  .iframe-container {\n    position: relative;\n    overflow: hidden;\n    padding-top: 56.25%;\n  }\n\n  .iframe-container iframe {\n    position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border: 0;\n  }\n\n  .offline-lecture-container .btn-sm, .btn-group-sm > .btn {\n    padding: 0.05rem 0.5rem;\n  }\n\n  .card-body {\n    padding: 0;\n  }\n\n  /* Chat */\n\n.chat {\n  height: calc(100% - 69px);\n}\n\n.chat-container {\n  height: 100%;\n}\n\n/* Conversation */\n\n.mat-drawer.mat-drawer-side {\n    padding: 0 5px;\n}\n\n.container ::ng-deep .mat-tab-label {\n    min-width: 100px;\n}\n\n\n.divider {\n    width: 100%;\n}\n\n.empty-conversation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n}\n\n.conversation-header h2, .conversation-header p {\n    align-items: center;\n    display: flex;\n}\n\n\n.text-center {\n    text-align: center;\n    width: 100%;\n}\n\n.conversation-history.mat-list {\n    height: calc(100% - 136px);\n    \n    //overflow-x: scroll;\n    position: absolute;\n    width: 100%;\n    background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n    z-index: 0;\n}\n.conversation .conversation-container {\n  height: 100%;\n  box-shadow: inset 0 10px 10px -10px #000000;\n  overflow-x: hidden;\n  padding: 0 16px;\n  margin-bottom: 5px;\n}\n.conversation .conversation-container:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n.conversation-history.mat-list p {\n    margin: 0;\n}\n\n.empty-conversation h1 {\n    margin: 0;\n}\n\n.conversations .mat-list-item {\n    cursor: pointer;\n}\n\n.create-conversation {\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n.mat-card {\n    height: 100%;\n    padding: 0 24px;\n    overflow: scroll;\n}\n\n\n.conversation-input {\n    position: absolute;\n    bottom: 0.1em;\n    width: 100%;\n    padding: 5px;\n    //background-color: #fafafa;\n}\n\nsection .mat-list .mat-list-avatar{\n    width: 25px;\n    height: 25px;\n}\n\n.mat-list-avatar {\n    margin: 0 5px;\n}\n\n.right {\n    text-align: right;\n}\n\n.full-width {\n    width: 100%;\n}\n\n.full-width .mat-icon {\n    cursor: pointer;\n}\n\n.all-conversations {\n    opacity: 0.7;\n}\n\n/* Messages */\n\n.message {\n  color: #000;\n  clear: both;\n  line-height: 18px;\n  font-size: 15px;\n  padding: 8px;\n  position: relative;\n  margin: 8px 0;\n  max-width: 90%;\n  // word-wrap: break-word;\n  // z-index: -1;\n}\n\n.message:after {\n  position: absolute;\n  content: \"\";\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n\n\n.metadata {\n  display: inline-block;\n  float: right;\n  padding: 0 0 0 7px;\n  position: relative;\n  bottom: -4px;\n}\n\n.metadata .time {\n  color: rgba(0, 0, 0, .45);\n  font-size: 11px;\n  display: inline-block;\n}\n\n.metadata .tick {\n  display: inline-block;\n  margin-left: 2px;\n  position: relative;\n  top: 4px;\n  height: 16px;\n  width: 16px;\n}\n\n.metadata .tick svg {\n  position: absolute;\n  transition: .5s ease-in-out;\n}\n\n.metadata .tick svg:first-child {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  -webkit-transform: perspective(800px) rotateY(180deg);\n          transform: perspective(800px) rotateY(180deg);\n}\n\n.metadata .tick svg:last-child {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n  -webkit-transform: perspective(800px) rotateY(0deg);\n          transform: perspective(800px) rotateY(0deg);\n}\n\n.metadata .tick-animation svg:first-child {\n  -webkit-transform: perspective(800px) rotateY(0);\n          transform: perspective(800px) rotateY(0);\n}\n\n.metadata .tick-animation svg:last-child {\n  -webkit-transform: perspective(800px) rotateY(-179.9deg);\n          transform: perspective(800px) rotateY(-179.9deg);\n}\n\n.message:first-child {\n  margin: 16px 0 8px;\n}\n\n.message.received {\n  background: #fff;\n  border-radius: 0px 5px 5px 5px;\n  float: left;\n}\n.parent-container .parent-quoted{\n  width: 100%;\n  clear: both;\n  background: rgba(124, 122, 122, 0.3);\n  padding:  0 3px;\n  padding-bottom: 3px;\n  border-left: 2px solid rgba(124, 122, 122, 0.9);\n  border-radius: 3px 3px 3px 3px;\n}\n.parent-container .message.received {\n  background: rgb(124, 122, 122);\n  border-radius: 5px 5px 0px 0px;\n  width: 100%;\n  float: left;\n}\n.message.received .metadata {\n  padding: 0 0 0 16px;\n}\n\n.message.received:after {\n  border-width: 0px 10px 10px 0;\n  border-color: transparent #fff transparent transparent;\n  top: 0;\n  left: -10px;\n}\n\n.message.sent {\n  background: #e1ffc7;\n  border-radius: 5px 0px 5px 5px;\n  float: right;\n}\n\n.message.sent:after {\n  border-width: 0px 0 10px 10px;\n  border-color: transparent transparent transparent #e1ffc7;\n  top: 0;\n  right: -10px;\n}\n\n\nsection .mat-list .mat-list-avatar{\n    width: 25px;\n    height: 25px;\n}\n\n.mat-list-avatar {\n    margin: 0 5px;\n}\n\n.avatar {\n    position: relative;\n}\n.base_receive > .avatar:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 0;\n    height: 0;\n    border: 5px solid #FFF;\n    border-left-color: rgba(0, 0, 0, 0);\n    border-bottom-color: rgba(0, 0, 0, 0);\n}\n\n.base_sent {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n.base_sent > .avatar:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0;\n    height: 0;\n    border: 5px solid white;\n    border-right-color: transparent;\n    border-top-color: transparent;\n    box-shadow: 1px 1px 2px rgba(black, 0.2); // not quite perfect but close\n}\n\n// Small devices (landscape phones, 576px and up)\n@media (max-width: 767px) { \n  .conversation-history.mat-list {\n    height: 500px;\n    //overflow-x: scroll;\n    position: relative;\n    width: 100%;\n    background: #efe7dd url(\"https://i.pinimg.com/originals/a5/c2/44/a5c244761a4573da8dd2d55d66ee7b72.jpg\") repeat;\n    z-index: 0;\n  }\n  .conversation .conversation-container {\n    height: 100%;\n    box-shadow: inset 0 10px 10px -10px #000000;\n    overflow-x: hidden;\n    padding: 0 16px;\n    margin-bottom: 5px;\n  }\n\n  .conversation-input {\n    position: relative;\n    bottom: 0.1em;\n    width: 100%;\n    background-color: white !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Back                {{session.session_name}}                                                                                              Presenter: {{session.presentation}}                                                  fiber_manual_recordLive Now -->                                                  Please Rate this session:                                                                          Question Asked                                                                                                                                                                                                                                                                                   -->                                                                                                expand_more                                                                                                                                      reply                                    Reply                                   -->                                                                      edit                                    Edit                                   -->                                                                      delete_forever                                    Delete                                                                                                                                                  {{message.from.name}}                                                              {{message.content}}                                                                                                                            {{ message.created_at | date:\\'h:mm a\\'}}                                                                                                                               {{message.from.name}} joined to the conversation.                                                                                              {{message.content.previousUsername}} is now {{message.content.username}}                                                                                                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OfflineSessionDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OfflineSessionDialog.html":{"url":"components/OfflineSessionDialog.html","title":"component - OfflineSessionDialog","body":"\n                   \n\n\n\n\n\n  Components\n  OfflineSessionDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/offline-session/list/offline-session.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                offline-session-dialog\n            \n\n\n\n\n            \n                templateUrl\n                offline-session-dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSessionByCourseId\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, quizService: QuizService, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/offline-session/list/offline-session.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionByCourseId(course_id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/list/offline-session.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/offline-session/list/offline-session.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/offline-session/list/offline-session.component.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { OfflineSessionService } from '../../../services/offline-session/offline-session.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { QuizService } from '../../../services/quiz/quiz.service';\n\nexport interface DialogData {\n  course_id: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-offline-session',\n  templateUrl: './offline-session.component.html',\n  styleUrls: ['./offline-session.component.scss']\n})\nexport class OfflineSessionComponent implements OnInit {\n  sessions: any;\n  breakpoint: number;\n\n  course_id: string;\n  name: string;\n\n  constructor(private api: OfflineSessionService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth  {\n        console.log(res);\n        this.sessions = res.offlineSessions;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth  {\n      console.log('The dialog was closed');\n      if ( result !== undefined) {\n\n        this.course_id = result.course_id;\n        this.name = result.name;\n      \n        let data = {\n          course_id: this.course_id,\n          search: this.name\n        }\n        this.api.getOfflineSessionFilter(data)\n        .subscribe((res : any) => {\n          console.log('getOfflineSessionFilter',res);\n          this.sessions = res.offlineSessions;\n        }, err => {\n          console.log(err);\n        });\n        console.log('result', result);\n      }\n    });\n  }\n\n}\n\n@Component({\n  selector: 'offline-session-dialog',\n  templateUrl: 'offline-session-dialog.html',\n})\nexport class OfflineSessionDialog {\n  courseList: any = [];\n  constructor(\n    public dialogRef: MatDialogRef, private quizService: QuizService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getSessionByCourseId(course_id) {\n    console.log('courseID', course_id);\n  }\n\n}\n\n    \n\n    \n        Hi {{data.name}} -->\n\n    \n        \n            ALL\n          {{course.id}}: {{course.fullname}}\n        \n    \n  \n    \n    search\n  \n\n\n  Cancel\n  Filter\n  Ok -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Hi {{data.name}} -->                        ALL          {{course.id}}: {{course.fullname}}                      search    Cancel  Filter  Ok -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OfflineSessionDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OfflineSessionService.html":{"url":"injectables/OfflineSessionService.html","title":"injectable - OfflineSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OfflineSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-session/offline-session.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteSession\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getOfflineSession\n                            \n                            \n                                getOfflineSessionFilter\n                            \n                            \n                                getOfflineSessions\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/offline-session/offline-session.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteSession\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteSession(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOfflineSession\n                        \n                        \n                    \n                \n            \n            \n                \ngetOfflineSession(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOfflineSessionFilter\n                        \n                        \n                    \n                \n            \n            \n                \ngetOfflineSessionFilter(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOfflineSessions\n                        \n                        \n                    \n                \n            \n            \n                \ngetOfflineSessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/offline-session/offline-session.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\nconst apiUrl = `${environment.apiUrl}/offline-session`;\nconst phpApiUrl = `${environment.phpApiUrl}`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfflineSessionService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n  \n  getOfflineSessions(): Observable {\n    const url = phpApiUrl +'/offline-session';\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getOfflineSession(id: string): Observable {\n    const url = phpApiUrl +'/offline-session/'+id;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getOfflineSessionFilter(data) {\n    const url = phpApiUrl +'/offline-session';\n  \t//console.log(url);\n    return this.http.post(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteSession(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OnlineUsersComponent.html":{"url":"components/OnlineUsersComponent.html","title":"component - OnlineUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OnlineUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/online-users/online-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-online-users\n            \n\n            \n                styleUrls\n                ./online-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./online-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                onlineUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                    Public\n                                getLastActiveUsers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/online-users/online-users.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/online-users/online-users.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLastActiveUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastActiveUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/online-users/online-users.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/online-users/online-users.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/online-users/online-users.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'city', 'last_active']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/online-users/online-users.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onlineUsers\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/online-users/online-users.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/online-users/online-users.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/online-users/online-users.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { AuthService } from '../../services/auth/auth.service';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  city: string;\n  last_active: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-online-users',\n  templateUrl: './online-users.component.html',\n  styleUrls: ['./online-users.component.scss']\n})\nexport class OnlineUsersComponent implements OnInit {\n  onlineUsers: [];\n  displayedColumns: string[] = ['id', 'name', 'city', 'last_active'];\n  dataSource: MatTableDataSource;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private authService: AuthService) {\n\n    this.getLastActiveUsers();\n    // Assign the data to the data source for the table to render\n    //this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    \n  }\n\n  public getLastActiveUsers() {\n    this.authService.getLastActiveUsers()\n    .subscribe(res => {\n      console.log(res.last_active);\n      this.onlineUsers = res.last_active;\n      this.dataSource = new MatTableDataSource(res.last_active);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    city: Math.round(Math.random() * 100).toString(),\n    last_active: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n    \n\n    \n          \n      refresh Online Users\n  \n   -->\n  \n      \n  \n  \n  \n    \n  \n      \n      \n         ID \n         {{row.id}} \n      \n  \n      \n      \n         Name \n         {{row.firstname + ' ' + row.lastname}}  \n      \n  \n      \n      \n         City \n         {{row.city}} \n      \n  \n      \n      \n         Last Active \n         {{row.last_active | date:'h:mm:ss'}} \n      \n  \n      \n      \n      \n    \n  \n    \n  \n  \n  \n  \n  \n    \n\n    \n                \n                    ./online-users.component.scss\n                \n                table {\n    width: 100%;\n  }\n  \n  .mat-form-field {\n    font-size: 14px;\n    width: 100%;\n  }\n  \n  td, th {\n    width: 25%;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        refresh Online Users     -->                                         ID          {{row.id}}                              Name          {{row.firstname + \\' \\' + row.lastname}}                               City          {{row.city}}                              Last Active          {{row.last_active | date:\\'h:mm:ss\\'}}                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OnlineUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Option.html":{"url":"classes/Option.html","title":"class - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/option.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                isAnswer\n                            \n                            \n                                name\n                            \n                            \n                                questionId\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/option.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/option.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/option.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/option.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/option.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/option.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Option {\n    id: string;\n    questionId: number;\n    name: string;\n    isAnswer: boolean;\n    selected: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data._id;\n        this.questionId = data.questionId;\n        this.name = data.name;\n        this.isAnswer = data.isAnswer;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/question.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answered\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                options\n                            \n                            \n                                questionTypeId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/question.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/question.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/models/question.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/question.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Option[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/question.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionTypeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/question.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Option } from './option';\n\nexport class Question {\n    id: '1010';\n    name: string;\n    questionTypeId: number;\n    options: Option[];\n    answered: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data._id;\n        this.name = data.name;\n        this.questionTypeId = data.questionTypeId;\n        this.options = [];\n        data.options.forEach(o => {\n            this.options.push(new Option(o));\n        });\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question/question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question/question.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question/question.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new QuestionDataSource(this.api)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question/question.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'type', 'status', 'created']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question/question.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question/question.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../../services/question/question.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  questions: any;\n  displayedColumns = ['name', 'type', 'status', 'created'];\n  dataSource = new QuestionDataSource(this.api);\n\n  constructor(private api: QuestionService) { }\n\n  ngOnInit() {\n    this.api.getQuestions()\n      .subscribe(res => {\n        console.log(res);\n        this.questions = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class QuestionDataSource extends DataSource {\n  constructor(private api: QuestionService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getQuestions();\n  }\n\n  disconnect() {\n\n  }\n}\n\n    \n\n    \n        \n  add\n\n\n  \n\n    \n\n    \n    \n       Question \n       {{element.name}} \n    \n\n    \n    \n       Type \n       {{element.type}} \n    \n\n    \n    \n       Status \n       {{element.status}} \n    \n\n    \n    \n       Created \n       {{element.created | date}} \n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  min-width: 100%;\n  overflow: auto;\n}\n\n.isbn-col {\n  flex: 0 0 100px !important;\n  white-space: unset !important;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n.example-full-width {\n  width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  add                     Question        {{element.name}}                    Type        {{element.type}}                    Status        {{element.status}}                    Created        {{element.created | date}}               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionCreateComponent.html":{"url":"components/QuestionCreateComponent.html","title":"component - QuestionCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question-create/question-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-create\n            \n\n            \n                styleUrls\n                ./question-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questionForm\n                            \n                            \n                                quizList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChoice\n                            \n                            \n                                deleteChoice\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    choiceForms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, api: QuestionService, quizService: QuizService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question-create/question-create.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChoice\n                        \n                        \n                    \n                \n            \n            \n                \naddChoice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-create/question-create.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteChoice\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteChoice(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-create/question-create.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-create/question-create.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-create/question-create.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-create/question-create.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-create/question-create.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choiceForms\n                    \n                \n\n                \n                    \n                        getchoiceForms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/question/question-create/question-create.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionService } from '../../../services/question/question.service';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, FormArray, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-question-create',\n  templateUrl: './question-create.component.html',\n  styleUrls: ['./question-create.component.scss']\n})\nexport class QuestionCreateComponent implements OnInit {\n\n  questionForm: FormGroup;\n  quizList: any = [];\n\n  // answersList: string[] = ['Choice1', 'Choice2', 'Choice3', 'Choice4'];\n\n  constructor(private router: Router, private api: QuestionService, private quizService: QuizService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.questionForm = this.formBuilder.group({\n      'quiz' : [null, Validators.required],\n      'question' : [null, Validators.required],\n       choices: this.formBuilder.array([])\n      // 'type' : [null, Validators.required],\n      // 'status' : [null, Validators.required]\n    });\n    this.quizService.getQuizs()\n      .subscribe(res => {\n        //console.log(res);\n        this.quizList = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n  get choiceForms() {\n    return this.questionForm.get('choices') as FormArray\n  }\n\n  addChoice() {\n\n    const choice = this.formBuilder.group({ \n      name: [null, Validators.required],\n      isAnswer: [false, Validators.required],\n    })\n\n    this.choiceForms.push(choice);\n  }\n\n  deleteChoice(i) {\n    this.choiceForms.removeAt(i)\n  }\n\n  onFormSubmit(form:NgForm) {\n    //console.log(form);\n    this.api.postQuestion(form)\n      .subscribe(res => {\n        console.log(res.errors);\n        if (!res.errors) {\n          this.router.navigate(['/questions']);\n        }\n          \n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n\n    \n\n    \n        \n  list\n\n\n  \n    \n      {{quiz.name}}\n    \n  \n  \n    \n    \n      Please enter Question\n    \n  \n  \n      \n          \n              \n              Right Answer? \n              \n                delete\n              \n              delete -->\n              \n                Please enter Question Choice1\n               -->\n          \n          \n      \n  \n  \n  \n    \n    \n      Please enter Question Type\n    \n  \n  \n    \n    \n      Please enter Question Status\n    \n   -->\n  \n    \n      {{answer}}\n    \n   -->\n\n  \n    add Add Choice\n    save\n  \n\n\n    \n\n    \n                \n                    ./question-create.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\n.width-25 {\n\twidth: 25%;\n}\n\n.example-full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n.button-row button,\n.button-row a {\n  margin-right: 12px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list            {{quiz.name}}                      Please enter Question                                                    Right Answer?                               delete                            delete -->                              Please enter Question Choice1               -->                                              Please enter Question Type                      Please enter Question Status       -->            {{answer}}       -->      add Add Choice    save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionDataSource.html":{"url":"classes/QuestionDataSource.html","title":"class - QuestionDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/question/question/question.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question/question.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question/question.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question/question.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../../../services/question/question.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n\n  questions: any;\n  displayedColumns = ['name', 'type', 'status', 'created'];\n  dataSource = new QuestionDataSource(this.api);\n\n  constructor(private api: QuestionService) { }\n\n  ngOnInit() {\n    this.api.getQuestions()\n      .subscribe(res => {\n        console.log(res);\n        this.questions = res;\n      }, err => {\n        console.log(err);\n      });\n  }\n}\n\nexport class QuestionDataSource extends DataSource {\n  constructor(private api: QuestionService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getQuestions();\n  }\n\n  disconnect() {\n\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionDetailComponent.html":{"url":"components/QuestionDetailComponent.html","title":"component - QuestionDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question-detail/question-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-detail\n            \n\n            \n                styleUrls\n                ./question-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                question\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuestion\n                            \n                            \n                                getQuestionDetails\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, api: QuestionService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question-detail/question-detail.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuestion\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuestion(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-detail/question-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestionDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestionDetails(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-detail/question-detail.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-detail/question-detail.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-detail/question-detail.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuestionService } from '../../../services/question/question.service';\n\n@Component({\n  selector: 'app-question-detail',\n  templateUrl: './question-detail.component.html',\n  styleUrls: ['./question-detail.component.scss']\n})\nexport class QuestionDetailComponent implements OnInit {\n\n  question: any = {};\n\n  constructor(private route: ActivatedRoute, private api: QuestionService, private router: Router) { }\n\n  ngOnInit() {\n    this.getQuestionDetails(this.route.snapshot.params['id']);\n  }\n\n  getQuestionDetails(id) {\n    this.api.getQuestion(id)\n      .subscribe(data => {\n        console.log(data);\n        this.question = data;\n      });\n  }\n\n  deleteQuestion(id) {\n    this.api.deleteQuestion(id)\n      .subscribe(res => {\n          this.router.navigate(['/questions']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n\n    \n\n    \n        \n  list\n\n\n  \n    {{question.name}}\n    {{question.description}}\n  \n  \n    \n      Question:\n      {{question.name}}\n      Options:\n      {{option.name}} \n        \n      \n      Status:\n      {{question.status}}\n      Publish Year:\n      {{question.created}}\n      Update Date:\n      {{question.created | date}}\n    \n  \n  \n    edit\n    delete\n  \n\n\n    \n\n    \n                \n                    ./question-detail.component.scss\n                \n                .example-card {\n  max-width: 100%;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\ndt {\n\tfloat: left;\n\tclear: left;\n\twidth: 100px;\n\ttext-align: right;\n\tfont-weight: bold;\n}\n\tdt::after {\n\tcontent: \":\";\n}\ndd {\n\tmargin: 0 0 0 110px;\n\tpadding: 0 0 0.5em 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list      {{question.name}}    {{question.description}}              Question:      {{question.name}}      Options:      {{option.name}}                     Status:      {{question.status}}      Publish Year:      {{question.created}}      Update Date:      {{question.created | date}}            edit    delete  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionEditComponent.html":{"url":"components/QuestionEditComponent.html","title":"component - QuestionEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/question/question-edit/question-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-edit\n            \n\n            \n                styleUrls\n                ./question-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                choices\n                            \n                            \n                                created\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                questionForm\n                            \n                            \n                                quiz\n                            \n                            \n                                quizList\n                            \n                            \n                                status\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addChoice\n                            \n                            \n                                deleteChoice\n                            \n                            \n                                getQuestion\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                            \n                                questionDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    choiceForms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, api: QuestionService, quizService: QuizService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/question/question-edit/question-edit.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addChoice\n                        \n                        \n                    \n                \n            \n            \n                \naddChoice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteChoice\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteChoice(i)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestion\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestion(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            questionDetails\n                        \n                        \n                    \n                \n            \n            \n                \nquestionDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/question/question-edit/question-edit.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quiz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choiceForms\n                    \n                \n\n                \n                    \n                        getchoiceForms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/question/question-edit/question-edit.component.ts:59\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuestionService } from '../../../services/question/question.service';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, FormArray, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-question-edit',\n  templateUrl: './question-edit.component.html',\n  styleUrls: ['./question-edit.component.scss']\n})\nexport class QuestionEditComponent implements OnInit {\n\n  questionForm: FormGroup;\n  quizList: any = [];\n  id:string = '';\n  quiz:string = '';\n  question:string = '';\n  choices = [];\n  type:string = '';\n  status:string = '';\n  created:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: QuestionService, private quizService: QuizService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getQuestion(this.route.snapshot.params['id']);\n    this.quizService.getQuizs()\n      .subscribe(res => {\n        //console.log(res);\n        this.quizList = res;\n      }, err => {\n        console.log(err);\n      });\n    this.questionForm = this.formBuilder.group({\n      'quiz' : [null, Validators.required],\n      'question' : [null, Validators.required],\n       choices: this.formBuilder.array([])\n      // 'type' : [null, Validators.required],\n      // 'status' : [null, Validators.required]\n    });\n  }\n\n  getQuestion(id) {\n    this.api.getQuestion(id).subscribe(data => {\n      console.log(data);\n      this.id = data._id;\n      this.questionForm.setValue({\n        quiz: data.quiz_id,\n        question: data.name,\n        choices: data.options,\n        // type: data.type,\n        // status: data.status,\n        // created: data.created\n      });\n    });\n  }\n\n  get choiceForms() {\n    return this.questionForm.get('choices') as FormArray\n  }\n\n  addChoice() {\n\n    const choice = this.formBuilder.group({ \n      name: [null, Validators.required],\n      isAnswer: [false, Validators.required],\n    })\n\n    this.choiceForms.push(choice);\n  }\n\n  deleteChoice(i) {\n    this.choiceForms.removeAt(i)\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.updateQuestion(this.id, form)\n      .subscribe(res => {\n        if (!res.errors) {\n          let id = res['_id'];\n          //this.router.navigate(['/question-details', id]);\n        }\n          \n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  questionDetails() {\n    this.router.navigate(['/question-details', this.id]);\n  }\n}\n\n    \n\n    \n        \n  list\n\n\n  \n    \n      {{quiz.name}}\n    \n  \n  \n    \n    \n      Please enter Question\n    \n  \n  \n      \n          \n              \n              Right Answer? \n              \n                delete\n              \n          \n          \n      \n  \n\n  \n    add Add Choice\n    save\n  \n\n\n    \n\n    \n                \n                    ./question-edit.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\n.example-full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list            {{quiz.name}}                      Please enter Question                                                    Right Answer?                               delete                                                add Add Choice    save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionService.html":{"url":"injectables/QuestionService.html","title":"injectable - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/question/question.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuestion\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getQuestion\n                            \n                            \n                                getQuestions\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postQuestion\n                            \n                            \n                                updateQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/question/question.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuestion\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuestion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestion\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestion(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuestions\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuestions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postQuestion\n                        \n                        \n                    \n                \n            \n            \n                \npostQuestion(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQuestion\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQuestion(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/question/question.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/question`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    // if (error instanceof HttpErrorResponse) {\n    //   console.log('hii');\n    //   if (error.status === 401) {\n    //     console.log('hi');\n    //     this.router.navigate(['/login']);\n    //   }\n    // }\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getQuestions(): Observable {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getQuestion(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postQuestion(data): Observable {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateQuestion(id: string, data): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteQuestion(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                courseId\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/quiz.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuizConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Question[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuizConfig } from './quiz-config';\nimport { Question } from './question';\n\nexport class Quiz {\n    id: string;\n    name: string;\n    courseId: Number;\n    description: string;\n    config: QuizConfig;\n    questions: Question[];\n\n    constructor(data: any) {\n        if (data) {\n            this.id = data._id;\n            this.name = data.name;\n            this.courseId = data.courseId;\n            this.description = data.description;\n            this.config = new QuizConfig(data.config);\n            this.questions = [];\n            data.questions.forEach(q => {\n                this.questions.push(new Question(q));\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuizChatModel.html":{"url":"interfaces/QuizChatModel.html","title":"interface - QuizChatModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuizChatModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chat/quiz.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        correctAnswerCount\n                                \n                                \n                                            Optional\n                                        courseId\n                                \n                                \n                                            Optional\n                                        created_at\n                                \n                                \n                                            Optional\n                                        created_by\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        duration\n                                \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        start\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Action\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        correctAnswerCount\n                                    \n                                \n                                \n                                    \n                                        correctAnswerCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                    \n                                \n                                \n                                    \n                                        courseId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_by\n                                    \n                                \n                                \n                                    \n                                        created_by:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {User} from './user';\nimport {Action} from './action';\n\nexport interface QuizChatModel {\n    id?: string;\n    courseId?: number;\n    start?: boolean;\n    duration?: number;\n    name?: string;\n    description?: string;\n    from?: User;\n    content?: any;\n    action?: Action;\n    correctAnswerCount?: number;\n    created_by?: any;\n    created_at?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizConfig.html":{"url":"classes/QuizConfig.html","title":"class - QuizConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/quiz-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowBack\n                            \n                            \n                                allowReview\n                            \n                            \n                                autoMove\n                            \n                            \n                                autoSubmit\n                            \n                            \n                                duration\n                            \n                            \n                                pageSize\n                            \n                            \n                                requiredAll\n                            \n                            \n                                richText\n                            \n                            \n                                showClock\n                            \n                            \n                                showPager\n                            \n                            \n                                shuffleOptions\n                            \n                            \n                                shuffleQuestions\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/quiz-config.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowReview\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoMove\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoSubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requiredAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            richText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showClock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showPager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shuffleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shuffleQuestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/quiz-config.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QuizConfig {\n    allowBack: boolean;\n    allowReview: boolean;\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    autoSubmit: boolean; // it will submit quiz automatically when duration is complete.\n    pageSize: number;\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\n    richText: boolean;\n    shuffleQuestions: boolean;\n    shuffleOptions: boolean;\n    showClock: boolean;\n    showPager: boolean;\n    theme: string;\n\n    constructor(data: any) {\n        data = data || {};\n        this.allowBack = data.allowBack;\n        this.allowReview = data.allowReview;\n        this.autoMove = data.autoMove;\n        this.duration = data.duration;\n        this.autoSubmit = data.autoSubmit;\n        this.pageSize = data.pageSize;\n        this.requiredAll = data.requiredAll;\n        this.richText = data.richText;\n        this.shuffleQuestions = data.shuffleQuestions;\n        this.shuffleOptions = data.shuffleOptions;\n        this.showClock = data.showClock;\n        this.showPager = data.showPager;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizCreateComponent.html":{"url":"components/QuizCreateComponent.html","title":"component - QuizCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuizCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quiz/quiz-create/quiz-create.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-create\n            \n\n            \n                styleUrls\n                ./quiz-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseList\n                            \n                            \n                                questionList\n                            \n                            \n                                quizForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, api: QuizService, questionService: QuestionService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-create/quiz-create.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { QuestionService } from '../../../services/question/question.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, FormArray, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-quiz-create',\n  templateUrl: './quiz-create.component.html',\n  styleUrls: ['./quiz-create.component.scss']\n})\nexport class QuizCreateComponent implements OnInit {\n\n  quizForm: FormGroup;\n  courseList: any = [];\n  questionList: any = [];\n\n  constructor(private router: Router, private api: QuizService, private questionService: QuestionService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.quizForm = this.formBuilder.group({\n      'course' : [null, Validators.required],\n      'name' : [null, Validators.required],\n      'duration' : [60, Validators.required],\n      'description' : [null, Validators.required],\n      'questions': []\n    });\n    this.api.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n    \n    // this.questionService.getQuestions()\n    //   .subscribe(res => {\n    //     console.log(res);\n    //     this.questionList = res;\n    //   }, err => {\n    //     console.log(err);\n    //   });\n  }\n\n  onFormSubmit(form:NgForm) {\n    console.log(form);\n    this.api.postQuiz(form)\n    .subscribe(res => {\n    console.log(res);\n      if (!res.errors) {\n        this.router.navigate(['/quizs']);\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n}\n\n    \n\n    \n        \n  list\n\n\n  \n  \n    \n      {{course.id}}: {{course.fullname}}\n    \n  \n  \n    \n    \n      Please enter Quiz Name\n    \n  \n  \n    \n    \n      Please enter Quiz Description\n    \n  \n  \n    \n    \n      Please enter Quiz Duration\n    \n  \n  \n    \n      {{question.name}}\n    \n   -->\n\n  \n    save\n  \n\n\n    \n\n    \n                \n                    ./quiz-create.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.width-25 {\n\twidth: 25%;\n}\n\n.full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  list              {{course.id}}: {{course.fullname}}                      Please enter Quiz Name                      Please enter Quiz Description                      Please enter Quiz Duration                  {{question.name}}       -->      save  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuizData.html":{"url":"interfaces/QuizData.html","title":"interface - QuizData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuizData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/quiz/quiz-list/quiz-list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        course\n                                \n                                \n                                        created\n                                \n                                \n                                        description\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                    \n                                \n                                \n                                    \n                                        created:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { AuthService } from '../../../services/auth/auth.service';\n\nexport interface QuizData {\n  id: string;\n  name: string;\n  description: string;\n  course: string;\n  duration: number;\n  created: string;\n  action: string;\n}\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.scss']\n})\nexport class QuizListComponent implements OnInit {\n\n  quizs: any;\n  onlineUsers: [];\n  courseList: any = [];\n  courseId: number;\n  start: boolean = false;\n  ioConnection: any;\n  displayedColumns = ['course', 'name', 'description', 'duration', 'created'];\n  // dataSource = new QuizDataSource(this.api);\n\n  dataSource: MatTableDataSource;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private api: QuizService, private authService: AuthService) { \n    this.getLastActiveUsers();\n    this.api.getQuizs()\n      .subscribe(res => {\n        console.log(res);\n        this.quizs = res;\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n    \n  }\n\n  ngOnInit() {\n    \n    this.api.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n\n  }\n\n  public getLastActiveUsers() {\n    this.authService.getLastActiveUsers()\n    .subscribe(res => {\n      //console.log(res.last_active);\n      this.onlineUsers = res.last_active;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  getQuizByCourseId () {\n    console.log('courseId',this.courseId);\n    this.api.getQuizByCourseId(this.courseId)\n    .subscribe(res => {\n      //console.log((res));\n      this.quizs = res;\n      this.dataSource = new MatTableDataSource(this.quizs);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizEditComponent.html":{"url":"components/QuizEditComponent.html","title":"component - QuizEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuizEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quiz/quiz-edit/quiz-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-edit\n            \n\n            \n                styleUrls\n                ./quiz-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                courseList\n                            \n                            \n                                created\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                questionList\n                            \n                            \n                                quizForm\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getQuiz\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                            \n                                quizDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, api: QuizService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            quizDetails\n                        \n                        \n                    \n                \n            \n            \n                \nquizDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-edit/quiz-edit.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-quiz-edit',\n  templateUrl: './quiz-edit.component.html',\n  styleUrls: ['./quiz-edit.component.scss']\n})\nexport class QuizEditComponent implements OnInit {\n\n  quizForm: FormGroup;\n  courseList: any = [];\n  courseId: number = 0;\n  questionList: any = [];\n  id:string = '';\n  name:string = '';\n  description:string = '';\n  status:string = '';\n  created:string = '';\n\n  constructor(private router: Router, private route: ActivatedRoute, private api: QuizService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.getQuiz(this.route.snapshot.params['id']);\n    this.quizForm = this.formBuilder.group({\n      'course' : [null, Validators.required],\n      'name' : [null, Validators.required],\n      'duration' : [null, Validators.required],\n      'description' : [null, Validators.required],\n      'questions': [],\n      // 'creator' : [null, Validators.required],\n      'created' : [null, Validators.required]\n    });\n    this.api.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  getQuiz(id) {\n    this.api.getQuiz(id).subscribe(data => {\n      this.id = data._id;\n      console.log(data);\n      this.courseId = data.courseId;\n      this.quizForm.setValue({\n        course: data.courseId,\n        name: data.name,\n        duration: data.duration,\n        description: data.description,\n        questions: data.questions,\n        // creator: data.creator,\n        created: data.created\n      });\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    this.api.updateQuiz(this.id, form)\n      .subscribe(res => {\n        if (!res.errors) {\n          let id = res['_id'];\n          this.router.navigate(['/quiz-details', id]);\n        }\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  quizDetails() {\n    this.router.navigate(['/quiz-details', this.id]);\n  }\n}\n\n    \n\n    \n        \n  show\n\n\n\n\n    \n    \n      \n        {{course.id}}: {{course.fullname}}\n      \n    \n    \n      \n      \n        Please enter Quiz Name\n      \n    \n    \n      \n      \n        Please enter Quiz Description\n      \n    \n    \n      \n      \n        Please enter Quiz Duration\n      \n    \n    \n      \n        {{question.name}}\n      \n     -->\n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./quiz-edit.component.scss\n                \n                .example-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.full-width {\n  width: 100%;\n}\n\n.full-width:nth-last-child(n) {\n  margin-bottom: 10px;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  show                      {{course.id}}: {{course.fullname}}                                  Please enter Quiz Name                                  Please enter Quiz Description                                  Please enter Quiz Duration                            {{question.name}}           -->            save      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizListComponent.html":{"url":"components/QuizListComponent.html","title":"component - QuizListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuizListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quiz/quiz-list/quiz-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz-list\n            \n\n            \n                styleUrls\n                ./quiz-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                courseList\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                ioConnection\n                            \n                            \n                                onlineUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                quizs\n                            \n                            \n                                sort\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                    Public\n                                getLastActiveUsers\n                            \n                            \n                                getQuizByCourseId\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: QuizService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLastActiveUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLastActiveUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizByCourseId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['course', 'name', 'description', 'duration', 'created']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ioConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onlineUsers\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quiz/quiz-list/quiz-list.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { AuthService } from '../../../services/auth/auth.service';\n\nexport interface QuizData {\n  id: string;\n  name: string;\n  description: string;\n  course: string;\n  duration: number;\n  created: string;\n  action: string;\n}\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.scss']\n})\nexport class QuizListComponent implements OnInit {\n\n  quizs: any;\n  onlineUsers: [];\n  courseList: any = [];\n  courseId: number;\n  start: boolean = false;\n  ioConnection: any;\n  displayedColumns = ['course', 'name', 'description', 'duration', 'created'];\n  // dataSource = new QuizDataSource(this.api);\n\n  dataSource: MatTableDataSource;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private api: QuizService, private authService: AuthService) { \n    this.getLastActiveUsers();\n    this.api.getQuizs()\n      .subscribe(res => {\n        console.log(res);\n        this.quizs = res;\n        this.dataSource = new MatTableDataSource(res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, err => {\n        console.log(err);\n      });\n    \n  }\n\n  ngOnInit() {\n    \n    this.api.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n\n  }\n\n  public getLastActiveUsers() {\n    this.authService.getLastActiveUsers()\n    .subscribe(res => {\n      //console.log(res.last_active);\n      this.onlineUsers = res.last_active;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  getQuizByCourseId () {\n    console.log('courseId',this.courseId);\n    this.api.getQuizByCourseId(this.courseId)\n    .subscribe(res => {\n      //console.log((res));\n      this.quizs = res;\n      this.dataSource = new MatTableDataSource(this.quizs);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n    \n\n    \n          \n    add\n    refresh Online Users\n  \n  \n      \n        {{course.id}}: {{course.fullname}}\n      \n  \n   -->\n  \n    \n  \n  \n  \n    \n  \n      \n      \n         Course Id\n         {{row.courseId}} \n      \n  \n      \n      \n         Name \n         {{row.name}}  \n      \n  \n      \n      \n         Description \n         {{row.description}} \n      \n\n      \n      \n         Duration \n         {{row.duration}} Sec\n      \n  \n      \n      \n         Created \n         {{row.created | date}} \n      \n  \n      \n      \n      \n    \n  \n    \n  \n  \n  \n    \n\n    \n                \n                    ./quiz-list.component.scss\n                \n                .example-container {\n  display: flex;\n  flex-direction: column;\n  max-height: 500px;\n  min-width: 100%;\n  overflow: auto;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n.button-row button,\n.button-row a {\n  margin-right: 12px;\n}\n\n.isbn-col {\n  flex: 0 0 100px !important;\n  white-space: unset !important;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n\n.example-full-width {\n  width: 100%;\n}\n\ntable {\n  width: 100%;\n}\n\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n\n// td, th {\n//   width: 25%;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      add    refresh Online Users                  {{course.id}}: {{course.fullname}}           -->                                       Course Id         {{row.courseId}}                              Name          {{row.name}}                               Description          {{row.description}}                            Duration          {{row.duration}} Sec                             Created          {{row.created | date}}                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuizResultModel.html":{"url":"interfaces/QuizResultModel.html","title":"interface - QuizResultModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QuizResultModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/socket/quiz.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        answers\n                                \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        correctAnswerCount\n                                \n                                \n                                            Optional\n                                        created_at\n                                \n                                \n                                            Optional\n                                        created_by\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        questions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Action\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        answers\n                                    \n                                \n                                \n                                    \n                                        answers:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        correctAnswerCount\n                                    \n                                \n                                \n                                    \n                                        correctAnswerCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_by\n                                    \n                                \n                                \n                                    \n                                        created_by:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questions\n                                    \n                                \n                                \n                                    \n                                        questions:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {User} from '../chat/user';\nimport {Action} from '../chat/action';\n\nexport interface QuizResultModel {\n    id?: string;\n    name?: string;\n    description?: string;\n    from?: User;\n    content?: any;\n    action?: Action;\n    correctAnswerCount?: number;\n    questions?: any;\n    answers?: any;\n    created_by?: any;\n    created_at?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class QuizService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string) {\n    return this.http.get(url);\n  }\n\n  getAll() {\n    return [\n      { id: 'data/aspnet.json', name: 'Asp.Net' },\n      { id: 'data/csharp.json', name: 'C Sharp' },\n      { id: 'data/designPatterns.json', name: 'Design Patterns' }\n    ];\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService-1.html":{"url":"injectables/QuizService-1.html","title":"injectable - QuizService-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz/quiz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuiz\n                            \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getAll\n                            \n                            \n                                getCourses\n                            \n                            \n                                getLastPlayedQuiz\n                            \n                            \n                                getQuiz\n                            \n                            \n                                getQuizByCourseId\n                            \n                            \n                                getQuizs\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postQuiz\n                            \n                            \n                                updateQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz/quiz.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCourses\n                        \n                        \n                    \n                \n            \n            \n                \ngetCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastPlayedQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastPlayedQuiz()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizByCourseId(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizs\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postQuiz\n                        \n                        \n                    \n                \n            \n            \n                \npostQuiz(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateQuiz\n                        \n                        \n                    \n                \n            \n            \n                \nupdateQuiz(id: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz/quiz.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/quiz`;\nconst phpApiUrl = `${environment.phpApiUrl}`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    // if (error instanceof HttpErrorResponse) {\n    //   console.log('hii');\n    //   if (error.status === 401) {\n    //     console.log('hi');\n    //     this.router.navigate(['/login']);\n    //   }\n    // }\n\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n  \n  getAll() {\n    return [\n      { id: 'data/aspnet.json', name: 'Asp.Net' },\n      { id: 'data/csharp.json', name: 'C Sharp' },\n      { id: 'data/designPatterns.json', name: 'Design Patterns' }\n    ];\n  }\n\n  getCourses(): Observable {\n    const url = phpApiUrl +'/courses';\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  getQuizs(): Observable {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getLastPlayedQuiz(): Observable {\n    const url = `${apiUrl}/last_played`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getQuiz(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getQuizByCourseId(id: number): Observable {\n    const url = `${apiUrl}/course/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postQuiz(data): Observable {\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateQuiz(id: string, data): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteQuiz(id: string): Observable {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RatingComponent.html":{"url":"components/RatingComponent.html","title":"component - RatingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RatingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rating/rating.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rating\n            \n\n            \n                styleUrls\n                ./rating.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rating.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColor\n                            \n                            \n                                isAboveRating\n                            \n                            \n                                rate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rating\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ratingChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rating/rating.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rating\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/rating/rating.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ratingChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/rating/rating.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColor\n                        \n                        \n                    \n                \n            \n            \n                \ngetColor(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/rating/rating.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         COLORS\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAboveRating\n                        \n                        \n                    \n                \n            \n            \n                \nisAboveRating(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/rating/rating.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            rate\n                        \n                        \n                    \n                \n            \n            \n                \nrate(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/rating/rating.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, EventEmitter ,Output } from '@angular/core';\n\nenum COLORS {\n  GREY = \"#9DA3A4\",\n  GREEN = \"#1EBEA5\",\n  YELLOW = \"#FFCA28\",\n  RED = \"#DD2C00\",\n  WARN = \"#F44336\",\n  ACCENT = \"#FF4081\"\n}\n\n@Component({\n  selector: 'rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.scss']\n})\n\nexport class RatingComponent {\n  @Input() rating: number ;\n\n  @Output() ratingChange: EventEmitter = new EventEmitter();;\n\n  constructor() {}\n  /*\n   function used to change the value of our rating \n   triggered when user, clicks a star to change the rating\n  */\n  rate(index: number) {\n      this.rating = index;\n      this.ratingChange.emit(this.rating);\n  }\n\n  /* function to return the color of a star based on what\n    index it is. All stars greater than the index are assigned\n    a grey color , while those equal or less than the rating are\n    assigned a color depending on the rating. Using the following criteria:\n\n        1-2 stars: red\n        3 stars  : yellow\n        4-5 stars: green \n  */\n  getColor(index: number) {\n      if (this.isAboveRating(index)) {\n        return COLORS.GREY;\n      }\n      switch (this.rating) {\n        case 1:\n          return COLORS.RED;\n        case 2:\n          return COLORS.WARN;\n        case 3:\n          return COLORS.YELLOW;\n        case 4:\n          return COLORS.GREEN;\n        case 5:\n          return COLORS.ACCENT;\n        default:\n          return COLORS.GREY;\n      }\n  }\n  // returns whether or not the selected index is above ,the current rating\n  // function is called from the getColor function.\n  isAboveRating(index: number): boolean {\n    return index > this.rating;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            star\n        \n    \n\n\n    \n\n    \n                \n                    ./rating.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        star            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RatingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportsComponent.html":{"url":"components/ReportsComponent.html","title":"component - ReportsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/reports/reports.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reports\n            \n\n            \n                styleUrls\n                ./reports.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reports.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                courseList\n                            \n                            \n                                dataSource\n                            \n                            \n                                date\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                myFilter\n                            \n                            \n                                paginator\n                            \n                            \n                                quizDate\n                            \n                            \n                                serializedDate\n                            \n                            \n                                sort\n                            \n                            \n                                totalQuizResponse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEvent\n                            \n                            \n                                applyFilter\n                            \n                            \n                                    Public\n                                getQuizReport\n                            \n                            \n                                    Public\n                                getQuizReportFromMongo\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(quizService: QuizService, reportsService: ReportsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/reports/reports.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reportsService\n                                                  \n                                                        \n                                                                        ReportsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEvent\n                        \n                        \n                    \n                \n            \n            \n                \naddEvent(type: string, event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reports/reports.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reports/reports.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getQuizReport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuizReport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reports/reports.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getQuizReportFromMongo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuizReportFromMongo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reports/reports.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/reports/reports.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Any'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl(new Date())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'total_marks', 'on_create']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl((new Date()).toISOString())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalQuizResponse\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/reports/reports.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { FormControl } from '@angular/forms';\n\nimport { ReportsService } from '../../services/reports/reports.service';\nimport { QuizService } from '../../services/quiz/quiz.service';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  total_marks: string;\n  on_create: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n  totalQuizResponse: [];\n  courseList: any = [];\n  displayedColumns: string[] = ['id', 'name', 'total_marks', 'on_create'];\n  dataSource: MatTableDataSource;\n  quizDate: string;\n  courseId = 'Any';\n\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor( private quizService: QuizService, private reportsService: ReportsService) {\n    var dt = new Date();\n    this.quizDate = dt.getFullYear() + \"-\" + (dt.getMonth() + 1) + \"-\" + dt.getDate();\n    this.getQuizReport();\n    //this.getQuizReportFromMongo();\n    console.log(this.date)\n    \n    // Assign the data to the data source for the table to render\n    //this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n  }\n  myFilter = (d: Date): boolean => {\n    let dt = new Date();\n    // Prevent Saturday and Sunday from being selected.\n    return d ) {\n    this.quizDate = event.value.getFullYear() + \"-\" + (event.value.getMonth() + 1) + \"-\" + event.value.getDate();\n    this.getQuizReport();\n    //this.getQuizReportFromMongo();\n    //console.log(`self: ${this.quizDate}`);\n    //console.log(`${type}: ${event.value}`);\n  }\n  \n  public getQuizReport() {\n    \n    //this.date = '2019-8-27';\n    console.log('quizDate', this.quizDate);\n    console.log('courseId', this.courseId);\n    \n    this.reportsService.getQuizReport(this.quizDate, this.courseId)\n    .subscribe(res => {\n      console.log(res);\n      this.totalQuizResponse = res.reports;\n      this.dataSource = new MatTableDataSource(res.reports);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n    \n  }\n  public getQuizReportFromMongo() {\n    \n    //this.date = '2019-8-27';\n    console.log('quizDate', this.quizDate);\n    console.log('courseId', this.courseId);\n    \n    this.reportsService.getQuizReportFromMongo(this.quizDate, this.courseId)\n    .subscribe(res => {\n      console.log('getQuizReportFromMongo',res);\n      //this.prepareChart(res);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    total_marks: Math.round(Math.random() * 100).toString(),\n    on_create: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n    \n\n    \n            \n        refresh Total Quiz Response\n    \n    \n        \n          {{course.id}}: {{course.fullname}}\n        \n    \n    \n      \n      \n      \n    \n   -->\n    \n        \n    \n  \n  \n    \n  \n      \n      \n         ID \n         {{row.id}} \n      \n  \n      \n      \n         Name \n         {{row.user_name}}  \n      \n\n      \n      \n           Number of Question\n           {{row.total_no_question}} \n         -->\n  \n      \n      \n         Correct Answer \n         {{row.total_marks}} \n      \n  \n      \n      \n         Time \n         {{row.on_create | date:'h:mm:ss' }} \n      \n  \n      \n      \n      \n    \n  \n    \n  \n  \n  \n  \n  \n    \n\n    \n                \n                    ./reports.component.scss\n                \n                table {\n  width: 100%;\n}\n\n.mat-form-field {\n  font-size: 14px;\n  width: 100%;\n}\n\ntd, th {\n  width: 25%;\n}\n\n.button-row {\n  margin: 10px 0;\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh Total Quiz Response                          {{course.id}}: {{course.fullname}}                                         -->                                               ID          {{row.id}}                              Name          {{row.user_name}}                               Number of Question           {{row.total_no_question}}          -->                       Correct Answer          {{row.total_marks}}                              Time          {{row.on_create | date:\\'h:mm:ss\\' }}                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReportsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportsService.html":{"url":"injectables/ReportsService.html","title":"injectable - ReportsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/reports/reports.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                getLastActiveUserByCourseId\n                            \n                            \n                                getQuizReport\n                            \n                            \n                                getQuizReportFromMongo\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/reports/reports.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/reports/reports.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLastActiveUserByCourseId\n                        \n                        \n                    \n                \n            \n            \n                \ngetLastActiveUserByCourseId(courseId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/reports/reports.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizReport(date, courseId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/reports/reports.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courseId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQuizReportFromMongo\n                        \n                        \n                    \n                \n            \n            \n                \ngetQuizReportFromMongo(date, courseId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/reports/reports.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courseId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/reports/reports.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/log`;\nconst phpApiUrl = `${environment.phpApiUrl}`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getQuizReport(date, courseId): Observable {\n    const url = phpApiUrl +'/reports/' + date + '/' + courseId;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getQuizReportFromMongo(date, courseId): Observable {\n    const url = apiUrl +'/reports/' + date + '/' + courseId;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getLastActiveUserByCourseId(courseId): Observable {\n    const url = phpApiUrl +'/last-active-users/'+ courseId;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/role/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/role/role.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/role/role.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../../services/auth/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n      // this will be passed from the route config\n      // on the data property\n\n      if (this.authService.isLoggedIn()) {\n        const expectedRole = next.data.expectedRole;\n        //console.log('expectedRole', expectedRole)\n        if (expectedRole == 'Admin') {\n          if (this.authService.isAdmin()) {\n            return true;\n          }\n        }\n      }\n      \n      // const token = localStorage.getItem('id_token');\n      // decode the token to get its payload\n      // const tokenPayload = decode(token);\n      // console.log(tokenPayload.role)\n    \t// if (!this.authService.isLoggedIn() || tokenPayload.role !== expectedRole) {\n      //   this.router.navigate(['login']);\n      //   return false;\n    \t// }\n\n      return false;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeUrlPipe.html":{"url":"pipes/SafeUrlPipe.html","title":"pipe - SafeUrlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeUrlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipe/safe-url.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeUrl\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(url: any, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipe/safe-url.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeUrl'\n})\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private sanitizer :DomSanitizer){ };\n\n  transform(url: any, ...args: any[]): any {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url)\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    MaterialModule\n  ],\n  declarations: []\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layout/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layout/sidebar/sidebar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layout/sidebar/sidebar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        supervised_user_circle\n      \n    \n    \n        \n          message\n        \n      \n  \n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                nav {\n    background: #2D2E2E;\n    height: 100%;\n\n    ul {\n        list-style-type: none;\n        padding: 0;\n        margin: 0;\n\n        li {\n\n            a {\n                color: #fff;\n                padding: 20px;\n                display: block;\n            }\n\n            .activated {\n                background-color: #00a8ff;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    supervised_user_circle                                message                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup/signup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                signupForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFormSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, api: UserService, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup/signup.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFormSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonFormSubmit(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/signup/signup.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signupForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/signup/signup.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user/user.service';\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: FormGroup;\n  name:string='';\n  email:string='';\n  username:string='';\n  password:string='';\n\n  constructor(private router: Router, private api: UserService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      'name' : [null, Validators.required],\n      'email' : [null, Validators.required],\n      'username' : [null, Validators.required],\n      'password' : [null, Validators.required]\n    });\n  }\n\n  onFormSubmit(form:NgForm) {\n    //console.log(form.username);\n    this.api.postSignup(form)\n      .subscribe(res => {\n          console.log(res.message);\n          if (res.success) {\n            this.router.navigate(['/books']);\n          }\n        }, (err) => {\n          console.log(err);\n        });\n  }\n\n}\n\n    \n\n    \n        \n\n  \t\n\t  \n\t    \n\t    IIRS\n\t    ISRO\n\t  \n\t  \n\t  \n      \t\n\t\t  \n      \t  \n\t\t    \n\t\t    \n\t\t      Please enter Full Name\n\t\t    \n\t\t  \n\n\t\t  \n\t\t    \n\t\t    \n\t\t      Please enter Email\n\t\t    \n\t\t  \n\n\t\t  \n\t\t    \n\t\t    \n\t\t      Please enter username/email\n\t\t    \n\t\t  \n\n\t\t  \n\t\t    \n\t\t    \n\t\t      Please enter password\n\t\t    \n\t\t  \n\t\t  \n\t\t    save Signup\n\t\t  \n\t\t  \n\t\t\n\t  \n\t  \n\t    T&C\n\t    Login\n\t  \n\t\n\n\n\n\n    \n\n    \n                \n                    ./signup.component.scss\n                \n                .signup-form {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n\n.signup-full-width {\n  width: 100%;\n}\n\n.example-card {\n  max-width: 400px;\n}\n\n.example-header-image {\n  background-image: url('https://blog.wonderslate.com/wp-content/uploads/2018/04/isro.jpg');\n  background-size: cover;\n}\n\n\n.center{\n  margin: 10px auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t  \t    \t    IIRS\t    ISRO\t  \t  \t        \t\t\t        \t  \t\t    \t\t    \t\t      Please enter Full Name\t\t    \t\t  \t\t  \t\t    \t\t    \t\t      Please enter Email\t\t    \t\t  \t\t  \t\t    \t\t    \t\t      Please enter username/email\t\t    \t\t  \t\t  \t\t    \t\t    \t\t      Please enter password\t\t    \t\t  \t\t  \t\t    save Signup\t\t  \t\t  \t\t\t  \t  \t    T&C\t    Login\t  \t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentAddComponent.html":{"url":"components/StudentAddComponent.html","title":"component - StudentAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/student/add/student-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-add\n            \n\n            \n                styleUrls\n                ./student-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./student-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/student/add/student-add.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/student/add/student-add.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-add',\n  templateUrl: './student-add.component.html',\n  styleUrls: ['./student-add.component.scss']\n})\nexport class StudentAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  student-add works!\n\n\n    \n\n    \n                \n                    ./student-add.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  student-add works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentDetailsComponent.html":{"url":"components/StudentDetailsComponent.html","title":"component - StudentDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/student/details/student-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-details\n            \n\n            \n                styleUrls\n                ./student-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./student-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/student/details/student-details.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/student/details/student-details.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.scss']\n})\nexport class StudentDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  student-details works!\n\n\n    \n\n    \n                \n                    ./student-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  student-details works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentListComponent.html":{"url":"components/StudentListComponent.html","title":"component - StudentListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StudentListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/student/list/student-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-list\n            \n\n            \n                styleUrls\n                ./student-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./student-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/student/list/student-list.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/student/list/student-list.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.scss']\n})\nexport class StudentListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  student-list works!\n\n\n    \n\n    \n                \n                    ./student-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  student-list works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/student/student.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStudent\n                            \n                            \n                                doRegisterStudent\n                            \n                            \n                                generateRandomID\n                            \n                            \n                                getAllStudents\n                            \n                            \n                                getStudentDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/student/student.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteStudent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteStudent(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/student/student.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: number; message: string; data: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doRegisterStudent\n                        \n                        \n                    \n                \n            \n            \n                \ndoRegisterStudent(data, index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/student/student.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateRandomID\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateRandomID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/student/student.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllStudents\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllStudents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/student/student.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStudentDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetStudentDetails(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/student/student.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: number; message: string; studentData: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n export class StudentService {\n\n   constructor() { }\n\n   // Get all students list via API or any data storage\n   getAllStudents(){\n     let studentList:any;\n     if(localStorage.getItem('students') && localStorage.getItem('students') != '') {\n       studentList = {\n         code : 200,\n         message : \"Students List Fetched Successfully\",\n         data : JSON.parse(localStorage.getItem('students'))\n       }\n     }else{\n       studentList = {\n         code : 200,\n         message : \"Students List Fetched Successfully\",\n         data : JSON.parse(localStorage.getItem('students'))\n       }\n     }\n     return studentList;\n   }\n\n   doRegisterStudent(data, index){\n     let studentList = JSON.parse(localStorage.getItem('students'));\n     let returnData;\n     console.log(\"index\", index);\n     if(index != null) {\n\n\n       for (var i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeTheme\n                        \n                        \n                    \n                \n            \n            \n                \nchangeTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkTheme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/theme.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  // Initialize isDarkTheme to false\n  isDarkTheme: boolean = false;\n\n  changeTheme(): void {\n      if (this.isDarkTheme) {\n         this.isDarkTheme = false;\n      } else {\n         this.isDarkTheme = true;\n      }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                    Optional\n                                token\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"./role\";\n\nexport class User {\n    id: number;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    role: Role;\n    token?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData.html":{"url":"interfaces/UserData.html","title":"interface - UserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/online-users/online-users.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        id\n                                \n                                \n                                        last_active\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_active\n                                    \n                                \n                                \n                                    \n                                        last_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { AuthService } from '../../services/auth/auth.service';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  city: string;\n  last_active: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-online-users',\n  templateUrl: './online-users.component.html',\n  styleUrls: ['./online-users.component.scss']\n})\nexport class OnlineUsersComponent implements OnInit {\n  onlineUsers: [];\n  displayedColumns: string[] = ['id', 'name', 'city', 'last_active'];\n  dataSource: MatTableDataSource;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private authService: AuthService) {\n\n    this.getLastActiveUsers();\n    // Assign the data to the data source for the table to render\n    //this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    \n  }\n\n  public getLastActiveUsers() {\n    this.authService.getLastActiveUsers()\n    .subscribe(res => {\n      console.log(res.last_active);\n      this.onlineUsers = res.last_active;\n      this.dataSource = new MatTableDataSource(res.last_active);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    city: Math.round(Math.random() * 100).toString(),\n    last_active: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData-1.html":{"url":"interfaces/UserData-1.html","title":"interface - UserData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/reports/reports.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        on_create\n                                \n                                \n                                        total_marks\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        on_create\n                                    \n                                \n                                \n                                    \n                                        on_create:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_marks\n                                    \n                                \n                                \n                                    \n                                        total_marks:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource} from '@angular/material/table';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { FormControl } from '@angular/forms';\n\nimport { ReportsService } from '../../services/reports/reports.service';\nimport { QuizService } from '../../services/quiz/quiz.service';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  total_marks: string;\n  on_create: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n  totalQuizResponse: [];\n  courseList: any = [];\n  displayedColumns: string[] = ['id', 'name', 'total_marks', 'on_create'];\n  dataSource: MatTableDataSource;\n  quizDate: string;\n  courseId = 'Any';\n\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor( private quizService: QuizService, private reportsService: ReportsService) {\n    var dt = new Date();\n    this.quizDate = dt.getFullYear() + \"-\" + (dt.getMonth() + 1) + \"-\" + dt.getDate();\n    this.getQuizReport();\n    //this.getQuizReportFromMongo();\n    console.log(this.date)\n    \n    // Assign the data to the data source for the table to render\n    //this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    this.quizService.getCourses()\n      .subscribe(res => {\n        console.log(res.courses);\n        this.courseList = res.courses;\n      }, err => {\n        console.log(err);\n      });\n  }\n  myFilter = (d: Date): boolean => {\n    let dt = new Date();\n    // Prevent Saturday and Sunday from being selected.\n    return d ) {\n    this.quizDate = event.value.getFullYear() + \"-\" + (event.value.getMonth() + 1) + \"-\" + event.value.getDate();\n    this.getQuizReport();\n    //this.getQuizReportFromMongo();\n    //console.log(`self: ${this.quizDate}`);\n    //console.log(`${type}: ${event.value}`);\n  }\n  \n  public getQuizReport() {\n    \n    //this.date = '2019-8-27';\n    console.log('quizDate', this.quizDate);\n    console.log('courseId', this.courseId);\n    \n    this.reportsService.getQuizReport(this.quizDate, this.courseId)\n    .subscribe(res => {\n      console.log(res);\n      this.totalQuizResponse = res.reports;\n      this.dataSource = new MatTableDataSource(res.reports);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, err => {\n      console.log(err);\n    });\n    \n  }\n  public getQuizReportFromMongo() {\n    \n    //this.date = '2019-8-27';\n    console.log('quizDate', this.quizDate);\n    console.log('courseId', this.courseId);\n    \n    this.reportsService.getQuizReportFromMongo(this.quizDate, this.courseId)\n    .subscribe(res => {\n      console.log('getQuizReportFromMongo',res);\n      //this.prepareChart(res);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    total_marks: Math.round(Math.random() * 100).toString(),\n    on_create: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserData-2.html":{"url":"interfaces/UserData-2.html","title":"interface - UserData-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        progress\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from '../../../services/quiz/quiz.service';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { User } from '../../../models/chat/user';\nimport { Chart } from 'chart.js';\nimport { QuizResultModel } from '../../../models/socket/quiz';\nimport { ChatService } from '../../../services/chat.service';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-quiz-detail',\n  templateUrl: './quiz-detail.component.html',\n  styleUrls: ['./quiz-detail.component.scss']\n})\nexport class QuizDetailComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  quiz: any = [];\n  start: boolean = false;\n  user: User;\n  onlineUsers: [];\n  ioConnection: any;\n  quizResults: any = [];\n  resultsTable: any = [];\n  //chart data\n  numToChar = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\n  chart: any = [];\n  canvasId: any;\n  type: any;\n  labels: any = [];\n  label: any;\n  datasets: any = {'label': '', 'data': [], 'backgroundColor': [], 'correctAnswer': []};\n  data: any = {'labels': [],'datasets': [this.datasets], 'type': ''};\n  backgroundColor: any = [\n      'rgba(255, 99, 132, 0.8)',\n      'rgba(54, 162, 235, 0.8)',\n      'rgba(255, 206, 86, 0.8)',\n      'rgba(75, 192, 192, 0.8)',\n      'rgba(153, 102, 255, 0.8)',\n      'rgba(255, 159, 64, 0.8)'\n  ];\n  borderColor: any = [\n      'rgba(255,99,132,1)',\n      'rgba(54, 162, 235, 1)',\n      'rgba(255, 206, 86, 1)',\n      'rgba(75, 192, 192, 1)',\n      'rgba(153, 102, 255, 1)',\n      'rgba(255, 159, 64, 1)'\n  ];\n  \n  constructor(private route: ActivatedRoute, private authService: AuthService, private api: QuizService, private chatService: ChatService, private router: Router) { \n\n  }\n\n  ngOnInit() {\n    \n    this.authService.getLoginUser()\n      .subscribe(res => {\n        //console.log(res);\n        this.user = {\n        //id: randomId,\n        userId: res.user.id,\n        name: res.user.name,\n        email: res.user.email\n      };\n      }, err => {\n        console.log(err);\n      });\n    this.getQuizDetails(this.route.snapshot.params['id']);\n    this.getLastActiveUserByCourseId(this.quiz.courseId);\n\n    if (this.authService.isLoggedIn() && this.authService.isAdmin()) {\n      this.initIoConnection();\n    }\n\n  }\n  private initIoConnection(): void {\n     \n    this.ioConnection = this.chatService.onQuizSubmit()\n      .subscribe((quizResult: QuizResultModel) => {\n        console.log('quizResult', quizResult);\n        //console.log('this.user',this.user);\n        // exclude sender from game\n        if (quizResult.from.userId != this.user.userId) {\n          this.quizResults.push(quizResult);\n          this.resultsTable.push(createNewUser(quizResult));\n        }\n    \n        this.dataSource = new MatTableDataSource(this.resultsTable);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n\n        console.log('quizResults', this.quizResults);\n        this.prepareChart(this.quizResults);\n        \n      });\n      \n  }\n  public prepareChart(quizResults) {\n    let labelsChart = [];\n    let dataChart = [];\n    let qOption = [];\n    quizResults.forEach((items, indexes) => {\n\n      items.questions.forEach((question, qi) => {\n          if (typeof dataChart[qi] === 'undefined') {\n          labelsChart[qi] = [];\n          dataChart[qi] = [];\n          qOption[qi] = [];\n          }\n          question.options.forEach((item, index) => {\n\n          labelsChart[qi][index] = this.numToChar[index];\n          qOption[qi][index] = item.name;\n          // Index of correct Answer\n          if(item.isAnswer){\n              labelsChart[qi][index] = [this.numToChar[index], 'Correct'];\n          }\n\n          if (dataChart[qi][index] == null){\n              dataChart[qi][index] = 0;\n          }\n\n          if(item.selected){\n              dataChart[qi][index] += 1;\n          }\n          });\n\n          this.getChart(question.id, 'bar', labelsChart[qi], question.name, dataChart[qi], qOption[qi], this.quizResults.length);\n\n      });\n      //console.log('Question Option', qOption);\n\n      //console.log('i = ', dataChart)\n    })\n  }\n  public getChart(canvasId, type, labels, label, data, qOption, numOfStudent) {\n    //console.log(labels);\n    this.chart = new Chart(canvasId, {\n        type: type,\n        data: {\n            labels: labels,\n            qOption: qOption,\n            datasets: [{\n                label: label,\n                data: data,\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.8)',\n                    'rgba(54, 162, 235, 0.8)',\n                    'rgba(255, 206, 86, 0.8)',\n                    'rgba(75, 192, 192, 0.8)',\n                    'rgba(153, 102, 255, 0.8)',\n                    'rgba(255, 159, 64, 0.8)'\n                ],\n                borderColor: [\n                    'rgba(255,99,132,1)',\n                    'rgba(54, 162, 235, 1)',\n                    'rgba(255, 206, 86, 1)',\n                    'rgba(75, 192, 192, 1)',\n                    'rgba(153, 102, 255, 1)',\n                    'rgba(255, 159, 64, 1)'\n                ],\n                borderWidth: 1\n            }]\n        },\n        options: {\n          responsive: true,\n          legend: {\n            position: 'top',\n          },\n          scales: {\n            \n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Participant: '+ numOfStudent\n              },\n              ticks: {\n                  //min: 0,\n                  beginAtZero:true,\n                  // forces step size to be 5 units\n                  //stepSize: 2\n              }\n            }]\n          },\n          tooltips: {\n          mode: 'index',\n          callbacks: {\n            // Use the footer callback to display the sum of the items showing in the tooltip\n            title: function(tooltipItem, data) {\n              \n                var label = data.qOption[tooltipItem[0].index] || '';\n                return label\n            }\n          },\n          footerFontStyle: 'normal'\n        },\n        }\n    });\n    \n  }\n  public getLastActiveUserByCourseId(courseId) {\n    this.authService.getLastActiveUserByCourseId(courseId)\n    .subscribe(res => {\n      //console.log('last_active within 3 minute', res.last_active);\n      this.onlineUsers = res.last_active;\n    }, err => {\n      console.log(err);\n    });\n  }\n  getQuizDetails(id) {\n    this.api.getQuiz(id)\n      .subscribe(data => {\n        console.log(data);\n        this.quiz = data;\n        //console.log('this.quiz',this.quiz);\n      });\n\n  }\n  /**\n   * [startQuiz description]\n   * @param {string}  quizId [description]\n   * @param {boolean} start  [description]\n   */\n  public startQuiz(courseId: number, quizId: string, start: boolean): void {\n    //console.log(courseId);\n      if (!quizId) {\n        return;\n      }\n      this.start = start;\n      this.chatService.startQuiz({\n        id: quizId,\n        courseId: courseId,\n        from: this.user,\n        start: this.start,\n        duration: this.quiz.duration,\n        created_at: new Date(),\n      });\n      console.log('this.quiz.duration', this.quiz.duration)\n      setTimeout(()=> {\n        //this.mode = 'result';\n        this.start = false;\n        //this.router.navigate([\"/quiz\"]);\n      }, this.quiz.duration * 1000);\n\n      this.api.updateQuiz(quizId, {last_played: new Date()})\n      .subscribe(res => {\n        if (!res.errors) {\n          let id = res['_id'];\n          this.quiz.last_played = new Date();\n          console.log('id', id);\n        }\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n  deleteQuiz(id) {\n    this.api.deleteQuiz(id)\n      .subscribe(res => {\n          this.router.navigate(['/quizs']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(quizResult): UserData {\n\n  return {\n    id: quizResult.id.toString(),\n    name: quizResult.from.name,\n    progress: quizResult.correctAnswerCount,\n    color: quizResult.created_at\n  };\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-profile/user-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courses\n                            \n                            \n                                study_material\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStudyMaterialByCourseList\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, log: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-profile/user-profile.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        log\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStudyMaterialByCourseList\n                        \n                        \n                    \n                \n            \n            \n                \ngetStudyMaterialByCourseList(courseList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courses\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            study_material\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/user-profile/user-profile.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../../services/log/log.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { User } from '../../models/chat/user';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  user: any;\n  courses: [];\n  study_material: [];\n  constructor(private authService: AuthService, private log: LogService) { \n    //this.rating = 2;\n    this.authService.getLoginUser()\n      .subscribe(res => {\n        console.log('getLoginUser', res);\n        //this.loginUser = res;\n        this.user = res.user;\n        this.courses = res.courses;\n        this.getStudyMaterialByCourseList({courseList: this.courses});\n        \n      }, err => {\n        console.log(err);\n      });\n  }\n\n  ngOnInit() {\n  }\n  getStudyMaterialByCourseList(courseList) {\n    this.authService.getStudyMaterialByCourseList(courseList)\n      .subscribe(res => {\n        console.log('study_material', res.study_material);\n        //this.loginUser = res;\n        this.study_material = res.study_material;\n      }, err => {\n        console.log(err);\n      });\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n        \n        \n            \n                \n            \n            \n                {{user.name}}\n                {{user.email}}\n            \n        \n        \n            \n                 \n                    \n                        \n                            {{list.session_name}}\n                            file_download\n                        \n                    \n                \n                 Content 2  -->\n            \n        \n    \n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    .border{\n      border-bottom:1px solid #F1F1F1;\n      margin-bottom:10px;\n    }\n    .main-secction{\n        padding: 0 10px;\n        box-shadow: 10px 10px 10px;\n    }\n    .image-section{\n      padding: 0px;\n    }\n    .image-section img{\n      width: 100%;\n      height:250px;\n      position: relative;\n    }\n    .user-image{\n      margin: 0 auto;\n      margin-top: -50px;\n    }\n\n    .user-image img{\n      width: 100px;\n    }\n    \n\n    // Small devices (landscape phones, 576px and up)\n@media (max-width: 767px) { \n  .profile-right-section{\n    padding: 20px 0px 10px 0px;\n    background-color: #FFFFFF;  \n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                {{user.name}}                {{user.email}}                                                                                                                                 {{list.session_name}}                            file_download                                                                             Content 2  -->                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookComponent', 'selector': 'app-book'},{'name': 'BookCreateComponent', 'selector': 'app-book-create'},{'name': 'BookDetailComponent', 'selector': 'app-book-detail'},{'name': 'BookEditComponent', 'selector': 'app-book-edit'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatHistoryComponent', 'selector': 'app-chat-history'},{'name': 'FacultyAddComponent', 'selector': 'app-faculty-add'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MaterialDashboardComponent', 'selector': 'app-material-dashboard'},{'name': 'MaterialNavComponent', 'selector': 'app-material-nav'},{'name': 'OfflineSessionComponent', 'selector': 'app-offline-session'},{'name': 'OfflineSessionDetailComponent', 'selector': 'app-offline-session-detail'},{'name': 'OfflineSessionDialog', 'selector': 'offline-session-dialog'},{'name': 'OnlineUsersComponent', 'selector': 'app-online-users'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionCreateComponent', 'selector': 'app-question-create'},{'name': 'QuestionDetailComponent', 'selector': 'app-question-detail'},{'name': 'QuestionEditComponent', 'selector': 'app-question-edit'},{'name': 'QuizComponent', 'selector': 'app-quiz'},{'name': 'QuizCreateComponent', 'selector': 'app-quiz-create'},{'name': 'QuizDetailComponent', 'selector': 'app-quiz-detail'},{'name': 'QuizEditComponent', 'selector': 'app-quiz-edit'},{'name': 'QuizListComponent', 'selector': 'app-quiz-list'},{'name': 'RatingComponent', 'selector': 'rating'},{'name': 'ReportsComponent', 'selector': 'app-reports'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SignupComponent', 'selector': 'app-signup'},{'name': 'StudentAddComponent', 'selector': 'app-student-add'},{'name': 'StudentDetailsComponent', 'selector': 'app-student-details'},{'name': 'StudentListComponent', 'selector': 'app-student-list'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractData\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                postLogin\n                            \n                            \n                                postSignup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLogin\n                        \n                        \n                    \n                \n            \n            \n                \npostLogin(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postSignup\n                        \n                        \n                    \n                \n            \n            \n                \npostSignup(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user/user.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n//const apiUrl = \"/book\";\n//const apiUrl = environment.apiUrl;\nconst apiUrl = `${environment.apiUrl}/users`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  postLogin(data): Observable {\n  \tconst loginUrl = `${apiUrl}/login`;\n  \t//console.log(loginUrl);\n    return this.http.post(loginUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  postSignup(data): Observable {\n    const signupUrl = `${apiUrl}/signup`;\n    console.log(signupUrl);\n    return this.http.post(signupUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_guards/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_guards/role/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_interceptor/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_interceptor/fake-backend.ts\n            \n            interceptor\n            FakeBackendInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/_interceptor/fake-backend.ts\n            \n            variable\n            fakeBackendProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_interceptor/jwt.interceptor.ts\n            \n            interceptor\n            JwtInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/book/book-create/book-create.component.ts\n            \n            component\n            BookCreateComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/book/book-detail/book-detail.component.ts\n            \n            component\n            BookDetailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/book/book-edit/book-edit.component.ts\n            \n            component\n            BookEditComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/book/book/book.component.ts\n            \n            component\n            BookComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/book/book/book.component.ts\n            \n            class\n            BookDataSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/chat-history/chat-history.component.ts\n            \n            component\n            ChatHistoryComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/chat/chat.component.ts\n            \n            variable\n            AVATAR_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/faculty/add/faculty-add.component.ts\n            \n            component\n            FacultyAddComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/index/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/layout/material-dashboard/material-dashboard.component.ts\n            \n            component\n            MaterialDashboardComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/layout/material-nav/material-nav.component.ts\n            \n            component\n            MaterialNavComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/layout/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/offline-session/detail/offline-session-detail.component.ts\n            \n            component\n            OfflineSessionDetailComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/offline-session/list/offline-session.component.ts\n            \n            component\n            OfflineSessionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/offline-session/list/offline-session.component.ts\n            \n            component\n            OfflineSessionDialog\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/offline-session/list/offline-session.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/online-users/online-users.component.ts\n            \n            component\n            OnlineUsersComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/online-users/online-users.component.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/online-users/online-users.component.ts\n            \n            function\n            createNewUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/online-users/online-users.component.ts\n            \n            variable\n            COLORS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/online-users/online-users.component.ts\n            \n            variable\n            NAMES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/question/question-create/question-create.component.ts\n            \n            component\n            QuestionCreateComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/question/question-detail/question-detail.component.ts\n            \n            component\n            QuestionDetailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/question/question-edit/question-edit.component.ts\n            \n            component\n            QuestionEditComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/question/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/question/question/question.component.ts\n            \n            class\n            QuestionDataSource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-create/quiz-create.component.ts\n            \n            component\n            QuizCreateComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n            \n            component\n            QuizDetailComponent\n            \n                3 %\n                (1/32)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n            \n            function\n            createNewUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n            \n            variable\n            COLORS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n            \n            variable\n            NAMES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-edit/quiz-edit.component.ts\n            \n            component\n            QuizEditComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-list/quiz-list.component.ts\n            \n            component\n            QuizListComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz-list/quiz-list.component.ts\n            \n            interface\n            QuizData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz.component.ts\n            \n            component\n            QuizComponent\n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                src/app/components/quiz/quiz.component.ts\n            \n            interface\n            LiveLecture\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/rating/rating.component.ts\n            \n            component\n            RatingComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/reports/reports.component.ts\n            \n            component\n            ReportsComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/reports/reports.component.ts\n            \n            interface\n            UserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/reports/reports.component.ts\n            \n            function\n            createNewUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/reports/reports.component.ts\n            \n            variable\n            COLORS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/reports/reports.component.ts\n            \n            variable\n            NAMES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/student/add/student-add.component.ts\n            \n            component\n            StudentAddComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/student/details/student-details.component.ts\n            \n            component\n            StudentDetailsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/student/list/student-list.component.ts\n            \n            component\n            StudentListComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chat/message.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/chat/quiz.ts\n            \n            interface\n            QuizChatModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/chat/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/option.ts\n            \n            class\n            Option\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/question.ts\n            \n            class\n            Question\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/quiz-config.ts\n            \n            class\n            QuizConfig\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/quiz.ts\n            \n            class\n            Quiz\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/socket/quiz.ts\n            \n            interface\n            QuizResultModel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pipe/safe-url.pipe.ts\n            \n            pipe\n            SafeUrlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/auth/authentication.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth/authentication.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/book/book.service.ts\n            \n            injectable\n            BookService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/book/book.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/book/book.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/chat.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/helper/helper.service.ts\n            \n            injectable\n            HelperService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/log/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/log/log.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/log/log.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/log/log.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/offline-session/offline-session.service.ts\n            \n            injectable\n            OfflineSessionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/offline-session/offline-session.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/offline-session/offline-session.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/offline-session/offline-session.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/question/question.service.ts\n            \n            injectable\n            QuestionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/question/question.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/question/question.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/quiz/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/quiz/quiz.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/quiz/quiz.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/quiz/quiz.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/reports/reports.service.ts\n            \n            injectable\n            ReportsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/reports/reports.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/reports/reports.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/reports/reports.service.ts\n            \n            variable\n            phpApiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/student/student.service.ts\n            \n            injectable\n            StudentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.5\n        \n            @angular/cdk : ^8.1.4\n        \n            @angular/common : ~8.2.5\n        \n            @angular/compiler : ~8.2.5\n        \n            @angular/core : ~8.2.5\n        \n            @angular/forms : ~8.2.5\n        \n            @angular/material : ^8.1.4\n        \n            @angular/platform-browser : ~8.2.5\n        \n            @angular/platform-browser-dynamic : ~8.2.5\n        \n            @angular/router : ~8.2.5\n        \n            bcrypt-nodejs : 0.0.3\n        \n            body-parser : ^1.19.0\n        \n            bootstrap : ^4.3.1\n        \n            chart.js : ^2.8.0\n        \n            cookie-parser : ^1.4.4\n        \n            cordova-android : ^8.1.0\n        \n            core-js : ^3.1.4\n        \n            cors : ^2.8.5\n        \n            debug : ^4.1.1\n        \n            express : ~4.17.1\n        \n            fs : 0.0.1-security\n        \n            http-errors : ^1.7.3\n        \n            jsonwebtoken : ^8.5.1\n        \n            moment : ^2.24.0\n        \n            mongoose : ^5.6.13\n        \n            morgan : ^1.9.1\n        \n            ngx-toastr : ^10.2.0\n        \n            rxjs : ^6.5.3\n        \n            socket.io : ^2.2.0\n        \n            socket.io-client : ^2.2.0\n        \n            tslib : ^1.10.0\n        \n            twig : ~1.13.3\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../action.ts)\n                        \n                        \n                            COLORS   (src/.../rating.component.ts)\n                        \n                        \n                            Event   (src/.../event.ts)\n                        \n                        \n                            Role   (src/.../role.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/chat/action.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                        \n                            \n                                 JOINED\n                            \n                        \n                        \n                            \n                                 LEFT\n                            \n                        \n                        \n                            \n                                 RENAME\n                            \n                        \n            \n        \n\n    src/app/components/rating/rating.component.ts\n    \n        \n            \n                \n                    \n                        \n                        COLORS\n                    \n                \n                        \n                            \n                                 GREY\n                            \n                        \n                        \n                            \n                                Value : #9DA3A4\n                            \n                        \n                        \n                            \n                                 GREEN\n                            \n                        \n                        \n                            \n                                Value : #1EBEA5\n                            \n                        \n                        \n                            \n                                 YELLOW\n                            \n                        \n                        \n                            \n                                Value : #FFCA28\n                            \n                        \n                        \n                            \n                                 RED\n                            \n                        \n                        \n                            \n                                Value : #DD2C00\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : #F44336\n                            \n                        \n                        \n                            \n                                 ACCENT\n                            \n                        \n                        \n                            \n                                Value : #FF4081\n                            \n                        \n            \n        \n\n    src/app/models/chat/event.ts\n    \n        \n            \n                \n                    \n                        \n                        Event\n                    \n                \n                        \n                            \n                                 CONNECT\n                            \n                        \n                        \n                            \n                                Value : connect\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                Value : start\n                            \n                        \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : login\n                            \n                        \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : logout\n                            \n                        \n                        \n                            \n                                 DISCONNECT\n                            \n                        \n                        \n                            \n                                Value : disconnect\n                            \n                        \n            \n        \n\n    src/app/models/role.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createNewUser   (src/.../online-users.component.ts)\n                        \n                        \n                            createNewUser   (src/.../reports.component.ts)\n                        \n                        \n                            createNewUser   (src/.../quiz-detail.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/online-users/online-users.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser(id)\n                \n            \n\n\n\n\n            \n                \n                    Builds and returns a new User. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/components/reports/reports.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser(id)\n                \n            \n\n\n\n\n            \n                \n                    Builds and returns a new User. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser(quizResult)\n                \n            \n\n\n\n\n            \n                \n                    Builds and returns a new User. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizResult\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProject Title\nE-Class (Electronic Collaborative Learning and Knowledge Sharing System.)\nGetting Started\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\nPrerequisites\nWhat things you need to install the software and how to install them\nNodeJs (10.x)\nMongoDb (4.0.12)\nAngular 8.x\nInstalling\nDownload this project from where it kept and run bellow command in root folder\nnpm run installAnd serve\nng serveDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component components/component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nBackend server\nHost IP: 192.168.17.31\nLocal Backend server folder: D:\\Angular\\ng8-school-cordova\\server\nRemote Backend server folder: /home/ubuntu/Angular/ng8-school-cordova\nBackend Php Api named quizApi located in /var/www/html/quizApi\ndatabse mdlnew and edusat_lms\nIf nodemon is installed globally in your system then run\nnodemonor\nnode start ./server/bin/wwwAnd in production server install pm2 npm package for start server in background. and run\nor\npm2 start ./server/bin/wwwClient Server\nIf you installed this project locally then run\nng serveAnd in production server just build the compiled file and copy all the generaded file on remote server. compiled file generated inside www folder\nng build --prodMongodB ScreenShot\n\n    \n\n\nRoute guide with screenshots\nAll components are located inside  D:\\Angular\\ng8-school-cordova\\src\\app\\components\n\n\n\n\\src\\app\\components\\login\n\\src\\app\\components\\quiz\n\\src\\app\\components\\offline-session\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\src\\app\\components\\user-profile\n\\src\\app\\components\\quiz\\quiz-list\n\\src\\app\\components\\question\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\src\\app\\components\\online-users\n\\src\\app\\components\\reports\n\\src\\app\\components\\chat-history\n\n\n\n\n\n\n\n\n\n\nRefrence for quiz\n Quiz App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBookComponent\n\nBookComponent\n\nAppModule -->\n\nBookComponent->AppModule\n\n\n\n\n\nBookCreateComponent\n\nBookCreateComponent\n\nAppModule -->\n\nBookCreateComponent->AppModule\n\n\n\n\n\nBookDetailComponent\n\nBookDetailComponent\n\nAppModule -->\n\nBookDetailComponent->AppModule\n\n\n\n\n\nBookEditComponent\n\nBookEditComponent\n\nAppModule -->\n\nBookEditComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatHistoryComponent\n\nChatHistoryComponent\n\nAppModule -->\n\nChatHistoryComponent->AppModule\n\n\n\n\n\nFacultyAddComponent\n\nFacultyAddComponent\n\nAppModule -->\n\nFacultyAddComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMaterialDashboardComponent\n\nMaterialDashboardComponent\n\nAppModule -->\n\nMaterialDashboardComponent->AppModule\n\n\n\n\n\nMaterialNavComponent\n\nMaterialNavComponent\n\nAppModule -->\n\nMaterialNavComponent->AppModule\n\n\n\n\n\nOfflineSessionComponent\n\nOfflineSessionComponent\n\nAppModule -->\n\nOfflineSessionComponent->AppModule\n\n\n\n\n\nOfflineSessionDetailComponent\n\nOfflineSessionDetailComponent\n\nAppModule -->\n\nOfflineSessionDetailComponent->AppModule\n\n\n\n\n\nOfflineSessionDialog\n\nOfflineSessionDialog\n\nAppModule -->\n\nOfflineSessionDialog->AppModule\n\n\n\n\n\nOnlineUsersComponent\n\nOnlineUsersComponent\n\nAppModule -->\n\nOnlineUsersComponent->AppModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\nAppModule -->\n\nQuestionComponent->AppModule\n\n\n\n\n\nQuestionCreateComponent\n\nQuestionCreateComponent\n\nAppModule -->\n\nQuestionCreateComponent->AppModule\n\n\n\n\n\nQuestionDetailComponent\n\nQuestionDetailComponent\n\nAppModule -->\n\nQuestionDetailComponent->AppModule\n\n\n\n\n\nQuestionEditComponent\n\nQuestionEditComponent\n\nAppModule -->\n\nQuestionEditComponent->AppModule\n\n\n\n\n\nQuizComponent\n\nQuizComponent\n\nAppModule -->\n\nQuizComponent->AppModule\n\n\n\n\n\nQuizCreateComponent\n\nQuizCreateComponent\n\nAppModule -->\n\nQuizCreateComponent->AppModule\n\n\n\n\n\nQuizDetailComponent\n\nQuizDetailComponent\n\nAppModule -->\n\nQuizDetailComponent->AppModule\n\n\n\n\n\nQuizEditComponent\n\nQuizEditComponent\n\nAppModule -->\n\nQuizEditComponent->AppModule\n\n\n\n\n\nQuizListComponent\n\nQuizListComponent\n\nAppModule -->\n\nQuizListComponent->AppModule\n\n\n\n\n\nRatingComponent\n\nRatingComponent\n\nAppModule -->\n\nRatingComponent->AppModule\n\n\n\n\n\nReportsComponent\n\nReportsComponent\n\nAppModule -->\n\nReportsComponent->AppModule\n\n\n\n\n\nSafeUrlPipe\n\nSafeUrlPipe\n\nAppModule -->\n\nSafeUrlPipe->AppModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nAppModule -->\n\nSidebarComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nStudentAddComponent\n\nStudentAddComponent\n\nAppModule -->\n\nStudentAddComponent->AppModule\n\n\n\n\n\nStudentDetailsComponent\n\nStudentDetailsComponent\n\nAppModule -->\n\nStudentDetailsComponent->AppModule\n\n\n\n\n\nStudentListComponent\n\nStudentListComponent\n\nAppModule -->\n\nStudentListComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nBookService\n\nBookService\n\nAppModule -->\n\nBookService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppRoutingModule -->\n\nAuthService->AppRoutingModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../authentication.service.ts)\n                        \n                        \n                            apiUrl   (src/.../quiz.service.ts)\n                        \n                        \n                            apiUrl   (src/.../chat.service.ts)\n                        \n                        \n                            apiUrl   (src/.../question.service.ts)\n                        \n                        \n                            apiUrl   (src/.../reports.service.ts)\n                        \n                        \n                            apiUrl   (src/.../offline-session.service.ts)\n                        \n                        \n                            apiUrl   (src/.../log.service.ts)\n                        \n                        \n                            apiUrl   (src/.../auth.service.ts)\n                        \n                        \n                            apiUrl   (src/.../book.service.ts)\n                        \n                        \n                            apiUrl   (src/.../user.service.ts)\n                        \n                        \n                            AVATAR_URL   (src/.../chat.component.ts)\n                        \n                        \n                            COLORS   (src/.../quiz-detail.component.ts)\n                        \n                        \n                            COLORS   (src/.../reports.component.ts)\n                        \n                        \n                            COLORS   (src/.../online-users.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            fakeBackendProvider   (src/.../fake-backend.ts)\n                        \n                        \n                            httpOptions   (src/.../book.service.ts)\n                        \n                        \n                            httpOptions   (src/.../log.service.ts)\n                        \n                        \n                            httpOptions   (src/.../auth.service.ts)\n                        \n                        \n                            httpOptions   (src/.../question.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            httpOptions   (src/.../quiz.service.ts)\n                        \n                        \n                            httpOptions   (src/.../offline-session.service.ts)\n                        \n                        \n                            httpOptions   (src/.../reports.service.ts)\n                        \n                        \n                            NAMES   (src/.../online-users.component.ts)\n                        \n                        \n                            NAMES   (src/.../quiz-detail.component.ts)\n                        \n                        \n                            NAMES   (src/.../reports.component.ts)\n                        \n                        \n                            phpApiUrl   (src/.../quiz.service.ts)\n                        \n                        \n                            phpApiUrl   (src/.../offline-session.service.ts)\n                        \n                        \n                            phpApiUrl   (src/.../reports.service.ts)\n                        \n                        \n                            phpApiUrl   (src/.../log.service.ts)\n                        \n                        \n                            phpApiUrl   (src/.../authentication.service.ts)\n                        \n                        \n                            phpApiUrl   (src/.../auth.service.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/auth/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/users`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/quiz/quiz.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/quiz`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/chat.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/chat`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/question/question.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/question`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/reports/reports.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/log`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/offline-session/offline-session.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/offline-session`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/log/log.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/log`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}/log`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/auth/auth.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/users`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phpApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.phpApiUrl}`\n                        \n                    \n\n\n            \n        \n\n    src/app/services/book/book.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/book`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}/users`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/chat/chat.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AVATAR_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.adorable.io/avatars/285'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/quiz/quiz-detail/quiz-detail.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n]\n                        \n                    \n\n                \n                    \n                        Constants used to fill up our data base. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NAMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/reports/reports.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n]\n                        \n                    \n\n                \n                    \n                        Constants used to fill up our data base. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NAMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/components/online-users/online-users.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLORS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n]\n                        \n                    \n\n                \n                    \n                        Constants used to fill up our data base. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NAMES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  // URL of production API\n  apiUrl: 'http://192.168.17.35:3000',\n  phpApiUrl: 'http://192.168.17.35/quizApi/public/api'\n\n  // apiUrl: 'https://eclass.iirs.gov.in:3000',\n  // phpApiUrl: 'https://eclass.iirs.gov.in/quizApi/public/api'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  // URL of production API\n  apiUrl: 'https://eclass.iirs.gov.in:3000',\n  phpApiUrl: 'https://eclass.iirs.gov.in/quizApi/public/api'\n\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/_interceptor/fake-backend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fakeBackendProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
